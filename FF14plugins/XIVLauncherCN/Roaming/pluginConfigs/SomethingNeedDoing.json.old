{
  "$type": "SomethingNeedDoing.SomethingNeedDoingConfiguration, SomethingNeedDoing",
  "Version": 1,
  "LockWindow": false,
  "RootFolder": {
    "$type": "SomethingNeedDoing.FolderNode, SomethingNeedDoing",
    "Name": "/",
    "Children": [
      {
        "$type": "SomethingNeedDoing.FolderNode, SomethingNeedDoing",
        "Name": "练级",
        "Children": [
          {
            "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
            "Name": "80-82",
            "Contents": "/ac 闲静 <wait.2.5>\n/ac 掌握 <wait.1.5>\n/ac 长期俭约 <wait.1.5>\n/ac 改革 <wait.1.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 阔步 <wait.1.5>\n/ac 比尔格的祝福 <wait.2.5>\n/ac 崇敬 <wait.1.5>\n/ac 坯料制作 <wait.2.5>\n/ac 坯料制作 <wait.2.5>",
            "CraftingLoop": false,
            "CraftLoopCount": 0,
            "IsLua": false,
            "Language": 0
          },
          {
            "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
            "Name": "83-89",
            "Contents": "/ac \"坚信\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"掌握\" <wait.1.5>\n/ac \"俭约\" <wait.1.5>\n/ac \"改革\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"比尔格的祝福\" <wait.2.5>\n/ac \"崇敬\" <wait.1.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"模范制作\" <wait.2.5>",
            "CraftingLoop": false,
            "CraftLoopCount": 0,
            "IsLua": false,
            "Language": 0
          },
          {
            "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
            "Name": "练级560",
            "Contents": "/ac \"坚信\" <wait.2.5>\n/ac \"崇敬\" <wait.1.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"模范制作\" <wait.2.5>\n/ac \"掌握\" <wait.1.5>\n/ac \"改革\" <wait.1.5>\n/ac \"长期俭约\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"比尔格的祝福\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"精密制作\" <wait.2.5>",
            "CraftingLoop": false,
            "CraftLoopCount": 0,
            "IsLua": false,
            "Language": 0
          },
          {
            "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
            "Name": "召唤一键宏",
            "Contents": "/ac 以太蓄能\n/ac 以太蓄能\n/ac 以太蓄能\n/ac 星极超流\n/ac 宝石耀\n/ac 宝石耀\n/ac 风神召唤\n/ac 土神召唤\n/ac 火神召唤\n/ac 毁灭\n/ac 能量吸收\n/ac 龙神迸发\n/ac 溃烂爆发\n/ac 醒梦\n/loop <wait.0.13>",
            "CraftingLoop": false,
            "CraftLoopCount": 0,
            "IsLua": false,
            "Language": 0
          },
          {
            "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
            "Name": "召唤一键宏aoe",
            "Contents": "/ac 以太蓄能\n/ac 以太蓄能\n/ac 以太蓄能\n/ac 星极超流\n/ac 宝石辉\n/ac 宝石辉\n/ac 风神召唤\n/ac 土神召唤\n/ac 火神召唤\n/ac 迸裂\n/ac 能量抽取\n/ac 龙神迸发\n/ac 痛苦核爆\n/ac 醒梦\n/loop <wait.0.13>",
            "CraftingLoop": false,
            "CraftLoopCount": 0,
            "IsLua": false,
            "Language": 0
          },
          {
            "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
            "Name": "黑魔一键循环",
            "Contents": "/ac 冰封 <wait.2.45>\n/ac 火炎 <wait.1.00>\n/ac 激情咏唱 <wait.1.45>\n/ac 冰澈 <wait.2.55>\n/ac 暴雷 <wait.2.45>\n/ac 爆炎 <wait.2.45>\n/ac 炽炎 <wait.2.85>\n/ac 炽炎 <wait.2.85>\n/ac 炽炎 <wait.2.85>\n/ac 炽炎 <wait.2.85>\n/ac 火炎 <wait.2.55>\n/ac 炽炎 <wait.2.85>\n/ac 炽炎 <wait.2.85>\n/ac 异言 <wait.2.55>\n/ac 绝望 <wait.3.03>\n/statusoff 火苗\n/loop",
            "CraftingLoop": false,
            "CraftLoopCount": 0,
            "IsLua": false,
            "Language": 0
          },
          {
            "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
            "Name": "战士一键宏aoe",
            "Contents": "/ac 地毁人亡\n/ac 超压斧\n/ac 秘银暴风 <wait.1.35>\n/ac 战嚎\n/ac 原初的解放\n/ac 原初的直觉 <wait.1.00>\n/loop",
            "CraftingLoop": false,
            "CraftLoopCount": 0,
            "IsLua": false,
            "Language": 0
          }
        ]
      },
      {
        "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
        "Name": "P8S减伤",
        "Contents": "/p ----------MT血仇---------- <se.5>\n/p 0:07 开场永恒之火\n/p 1:19 冰/火第二次+一运前永恒之火\n/p 2:46 一运后永恒之火\n/p 4:21 分摊分散\n/p 5:23 二运概念支配\n/p 6:57 软狂暴第一次永恒之苦\n/p 8:00 软狂暴第三次永恒之苦\n/p ----------ST血仇----------\n/p 0:55 分摊分散\n/p 1:55 一运概念支配\n/p 3:28 万象后永恒之火\n/p 4:56 二运前永恒之火\n/p 7:26 软狂暴第二次永恒之苦\n/p ----------MT90s减伤/D4昏乱---------- <se.5>\n/p 0:07 开场永恒之火\n/p 1:50 一运概念支配\n/p 3:28 万象后永恒之火\n/p 5:23 二运概念支配\n/p 6:57 软狂暴第三/一次永恒之苦\n/p (能压掉就放第一次)\n/p ----------ST90s减伤----------\n/p 1:14 冰/火+一运前永恒之火\n/p 2:46 一运后永恒之火\n/p 4:40 第二次冰火\n/p 7:26 软狂暴第二次永恒之苦\n/p ----------远敏减伤---------- <se.5>\n/p 1:14 冰/火+一运前永恒之火\n/p 2:46 一运后永恒之火\n/p 4:56 二运前永恒之火\n/p 7:32 软狂暴第二次永恒之苦\n/p 第二次支配者的一击\n/p ----------D1牵制---------- <se.5>\n/p 0:07 开场永恒之火\n/p 1:50 一运概念支配\n/p 3:28 万象后永恒之火\n/p 5:23 二运概念支配\n/p 7:08 第一次支配者的一击\n/p ----------D2牵制/病毒----------\n/p 1:19 冰/火第二次+一运前永恒之火\n/p 2:50 一运后永恒之火\n/p 4:40 第二次冰火\n/p 7:37 第二次支配者的一击",
        "CraftingLoop": false,
        "CraftLoopCount": 0,
        "IsLua": false,
        "Language": 0
      },
      {
        "$type": "SomethingNeedDoing.FolderNode, SomethingNeedDoing",
        "Name": "青魔",
        "Children": [
          {
            "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
            "Name": "水力",
            "Contents": "/青魔法技能 水力吸引 <wait.2.5>\n/loop",
            "CraftingLoop": false,
            "CraftLoopCount": 0,
            "IsLua": false,
            "Language": 0
          },
          {
            "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
            "Name": "陆行鸟",
            "Contents": "/青魔法技能 陆行鸟陨石 <wait.2.5>\n/loop",
            "CraftingLoop": false,
            "CraftLoopCount": 0,
            "IsLua": false,
            "Language": 0
          }
        ]
      },
      {
        "$type": "SomethingNeedDoing.FolderNode, SomethingNeedDoing",
        "Name": "制作",
        "Children": [
          {
            "$type": "SomethingNeedDoing.FolderNode, SomethingNeedDoing",
            "Name": "3664 3784",
            "Children": [
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "3664 3784 610半成品 622",
                "Contents": "/ac \"坚信\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"精修\" <wait.2.5>\n/ac \"精密制作\" <wait.2.5>\n/ac \"掌握\" <wait.1.5>\n/ac \"精密制作\" <wait.2.5>\n/ac \"长期俭约\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"比尔格的祝福\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "3664 3784 610成品 655",
                "Contents": "/ac \"坚信\" <wait.2.5>\n/ac \"掌握\" <wait.1.5>\n/ac \"崇敬\" <wait.1.5>\n/ac \"长期俭约\" <wait.1.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"精密制作\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"改革\" <wait.1.5>\n/ac \"上级加工\" <wait.2.5>\n/ac \"精密制作\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"比尔格的祝福\" <wait.2.5>\n/ac \"模范制作\" <wait.2.5>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "3664 3784 610成品 538",
                "Contents": "/ac \"坚信\" <wait.2.5>\n/ac \"掌握\" <wait.1.5>\n/ac \"崇敬\" <wait.1.5>\n/ac \"长期俭约\" <wait.1.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"精密制作\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"比尔格的祝福\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "3664 3784 83幻水宏",
                "Contents": "/ac \"掌握\" <wait.1.5>\n/ac \"长期俭约\" <wait.1.5>\n/ac \"改革\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"比尔格的祝福\" <wait.2.5>\n/ac \"崇敬\" <wait.1.5>\n/ac \"坯料制作\" <wait.2.5>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "3664 3784 620半成品 628",
                "Contents": "/ac \"坚信\" <wait.2.5>\n/ac \"掌握\" <wait.1.5>\n/ac \"崇敬\" <wait.1.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"观察\" <wait.2.5>\n/ac \"注视制作\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"俭约加工\" <wait.2.5>\n/ac \"俭约加工\" <wait.2.5>\n/ac \"俭约加工\" <wait.2.5>\n/ac \"俭约加工\" <wait.2.5>\n/ac \"掌握\" <wait.1.5>\n/ac \"改革\" <wait.1.5>\n/ac \"俭约加工\" <wait.2.5>\n/ac \"俭约加工\" <wait.2.5>\n/ac \"俭约加工\" <wait.2.5>\n/ac \"俭约加工\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"改革\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"比尔格的祝福\" <wait.2.5>\n/ac \"制作\" <wait.2.5>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "3664 3784 620成品 618",
                "Contents": "/ac \"坚信\" <wait.2.5>\n/ac \"俭约加工\" <wait.2.5>\n/ac \"掌握\" <wait.1.5>\n/ac \"崇敬\" <wait.1.5>\n/ac \"长期俭约\" <wait.1.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"改革\" <wait.1.5>\n/ac \"观察\" <wait.2.5>\n/ac \"注视加工\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"比尔格的祝福\" <wait.2.5>\n/ac \"观察\" <wait.2.5>\n/ac \"注视制作\" <wait.2.5>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "3664 3784 620成品 668",
                "Contents": "/ac \"坚信\" <wait.2.5>\n/ac \"俭约加工\" <wait.2.5>\n/ac \"掌握\" <wait.1.5>\n/ac \"崇敬\" <wait.1.5>\n/ac \"长期俭约\" <wait.1.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"改革\" <wait.1.5>\n/ac \"观察\" <wait.2.5>\n/ac \"注视加工\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"工匠的神技\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"比尔格的祝福\" <wait.2.5>\n/ac \"观察\" <wait.2.5>\n/ac \"注视制作\" <wait.2.5>\n\n",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "3981 3825 620成品 657",
                "Contents": "/ac \"坚信\" <wait.2.5>\n/ac \"俭约加工\" <wait.2.5>\n/ac \"掌握\" <wait.1.5>\n/ac \"崇敬\" <wait.1.5>\n/ac \"长期俭约\" <wait.1.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"最终确认\" <wait.1.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"改革\" <wait.1.5>\n/ac \"观察\" <wait.2.5>\n/ac \"注视加工\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"工匠的神技\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"比尔格的祝福\" <wait.2.5>\n/ac \"制作\" <wait.2.5>\n\n",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "巨匠药酒",
                "Contents": "/ac 坚信 <wait.2.7>\n/ac 长期俭约 <wait.1.7>\n/ac 坯料制作 <wait.2.7>\n/ac 坯料加工 <wait.2.7>\n/ac 改革 <wait.1.7>\n/ac 坯料加工 <wait.2.7>\n/ac 坯料加工 <wait.2.7>\n/ac 坯料加工 <wait.2.7>\n/ac 比尔格的祝福 <wait.2.7>\n/ac 坯料制作 <wait.2.7>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "坚信憧憬制作制作",
                "Contents": "/ac 坚信 <wait.2.5>\n/ac 长期俭约 <wait.1.5>\n/ac 崇敬 <wait.1.5>\n/ac 坯料制作 <wait.2.5>\n/ac 坯料制作 <wait.2.5>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "临时制作",
                "Contents": "/ac 坚信 <wait.2.7>\n/ac 坯料制作",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "名匠药酒",
                "Contents": "/ac 闲静 <wait.2.7>\n/ac 长期俭约 <wait.1.7>\n/ac 改革 <wait.1.7>\n/ac 坯料加工 <wait.2.7>\n/ac 坯料加工 <wait.2.7>\n/ac 坯料加工 <wait.2.7>\n/ac 精密制作 <wait.2.7>\n/ac 比尔格的祝福 <wait.2.7>\n/ac 崇敬 <wait.1.7>\n/ac 坯料制作 <wait.2.7>\n/ac 坯料制作 <wait.2.7>",
                "CraftingLoop": false,
                "CraftLoopCount": 999,
                "IsLua": false,
                "Language": 0
              }
            ]
          },
          {
            "$type": "SomethingNeedDoing.FolderNode, SomethingNeedDoing",
            "Name": "590",
            "Children": [
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "90 590 成品",
                "Contents": "/ac 坚信 <wait.2.5>\n/ac 崇敬 <wait.1.5>\n/ac 掌握 <wait.1.5>\n/ac 长期俭约 <wait.1.5>\n/ac 坯料制作 <wait.2.5>\n/ac 坯料制作 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 改革 <wait.1.5>\n/ac 坯料加工 <wait.2.5>\n/ac 加工 <wait.2.5>\n/ac 中级加工 <wait.2.5>\n/ac 上级加工 <wait.2.5>\n/ac 改革 <wait.1.5>\n/ac 加工 <wait.2.5>\n/ac 中级加工 <wait.2.5>\n/ac 上级加工 <wait.2.5>\n/ac 工匠的神技 <wait.2.5>\n/ac 改革 <wait.1.5>\n/ac 工匠的神技 <wait.2.5>\n/ac 工匠的神技 <wait.2.5>\n/ac 阔步 <wait.1.5>\n/ac 比尔格的祝福 <wait.2.5>\n/ac 模范制作 <wait.2.5>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "90 580 半成品",
                "Contents": "/ac \"坚信\" <wait.2.5>\n/ac \"掌握\" <wait.1.5>\n/ac \"长期俭约\" <wait.1.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"精密制作\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"上级加工\" <wait.2.5>\n/ac \"精修\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"比尔格的祝福\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "88 半成品",
                "Contents": "/ac \"掌握\" <wait.1.5>\n/ac \"长期俭约\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"比尔格的祝福\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "90 580 成品",
                "Contents": "/ac 坚信 <wait.2.5>\n/ac 掌握 <wait.1.5>\n/ac 崇敬 <wait.1.5>\n/ac 长期俭约 <wait.1.5>\n/ac 坯料制作 <wait.2.5>\n/ac 模范制作 <wait.2.5>\n/ac 精密制作 <wait.2.5>\n/ac 改革 <wait.1.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 阔步 <wait.1.5>\n/ac 改革 <wait.1.5>\n/ac 坯料加工 <wait.2.5>\n/ac 俭约加工 <wait.2.5>\n/ac 阔步 <wait.1.5>\n/ac 比尔格的祝福 <wait.2.5>\n/ac 制作 <wait.2.5>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "90收藏品",
                "Contents": "/ac 坚信 <wait.2.5>\n/ac 长期俭约 <wait.1.5>\n/ac 坯料制作 <wait.2.5>\n/ac 精密制作 <wait.2.5>\n/ac 精密制作 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 改革 <wait.1.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 阔步 <wait.1.5>\n/ac 比尔格的祝福 <wait.2.5>\n/ac 模范制作 <wait.2.5>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "辉煌12",
                "Contents": "/ac 坚信 <wait.2.7>\n/ac 专心致志 <wait.2.7>\n/ac 掌握 <wait.1.7>\n/ac 崇敬 <wait.1.7>\n/ac 集中制作 <wait.2.7>\n/ac 最终确认 <wait.1.7>\n/ac 俭约制作 <wait.2.7>\n/ac 最终确认 <wait.1.7>\n/ac 模范制作 <wait.2.7>\n/ac 俭约加工 <wait.2.7>\n/ac 俭约加工 <wait.2.7>\n/ac 俭约加工 <wait.2.7>\n/ac 掌握 <wait.1.7>\n/ac 改革 <wait.1.7>\n/ac 俭约加工 <wait.2.7>\n/ac 加工 <wait.2.7>\n/ac 中级加工 <wait.2.7>\n/ac 上级加工 <wait.2.7>\n/ac 改革 <wait.1.7>\n/ac 加工 <wait.2.7>\n/ac 中级加工 <wait.2.7>\n/ac 上级加工 <wait.2.7>\n/ac 工匠的神技 <wait.2.7>\n/ac 改革 <wait.1.7>\n/ac 工匠的神技 <wait.2.7>\n/ac 阔步 <wait.1.7>\n/ac 比尔格的祝福 <wait.2.7>\n/ac 制作 <wait.2.7>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "辉煌3",
                "Contents": "/ac 坚信 <wait.2.7>\n/ac 掌握 <wait.1.7>\n/ac 专心致志 <wait.2.7>\n/ac 崇敬 <wait.1.7>\n/ac 集中制作 <wait.2.7>\n/ac 最终确认 <wait.1.7>\n/ac 俭约制作 <wait.2.7>\n/ac 最终确认 <wait.1.7>\n/ac 俭约制作 <wait.2.7>\n/ac 最终确认 <wait.1.7>\n/ac 制作 <wait.2.7>\n/ac 改革 <wait.1.7>\n/ac 俭约加工 <wait.2.7>\n/ac 俭约加工 <wait.2.7>\n/ac 俭约加工 <wait.2.7>\n/ac 俭约加工 <wait.2.7>\n/ac 掌握 <wait.1.7>\n/ac 改革 <wait.1.7>\n/ac 俭约加工 <wait.2.7>\n/ac 加工 <wait.2.7>\n/ac 中级加工 <wait.2.7>\n/ac 上级加工 <wait.2.7>\n/ac 改革 <wait.1.7>\n/ac 加工 <wait.2.7>\n/ac 中级加工 <wait.2.7>\n/ac 上级加工 <wait.2.7>\n/ac 工匠的神技 <wait.2.7>\n/ac 改革 <wait.1.7>\n/ac 工匠的神技 <wait.2.7>\n/ac 阔步 <wait.1.7>\n/ac 比尔格的祝福 <wait.2.7>\n/ac 制作 <wait.2.7>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              }
            ]
          },
          {
            "$type": "SomethingNeedDoing.FolderNode, SomethingNeedDoing",
            "Name": "3232 3307",
            "Children": [
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "90 2X 半成品",
                "Contents": "/ac 坚信 <wait.2.7>\n/ac 崇敬 <wait.1.7>\n/ac 坯料制作 <wait.2.7>\n/ac 模范制作",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "90 2X 580HQ 3180 3311 665",
                "Contents": "/ac 坚信 <wait.2.7>\n/ac 俭约加工 <wait.2.7>\n/ac 掌握 <wait.1.7>\n/ac 崇敬 <wait.1.7>\n/ac 长期俭约 <wait.1.7>\n/ac 坯料制作 <wait.2.7>\n/ac 坯料制作 <wait.2.7>\n/ac 精密制作 <wait.2.7>\n/ac 改革 <wait.1.7>\n/ac 坯料加工 <wait.2.7>\n/ac 加工 <wait.2.7>\n/ac 中级加工 <wait.2.7>\n/ac 上级加工 <wait.2.7>\n/ac 改革 <wait.1.7>\n/ac 加工 <wait.2.7>\n/ac 中级加工 <wait.2.7>\n/ac 上级加工 <wait.2.7>\n/ac 工匠的神技 <wait.2.7>\n/ac 改革 <wait.1.7>\n/ac 工匠的神技 <wait.2.7>\n/ac 工匠的神技 <wait.2.7>\n/ac 阔步 <wait.1.7>\n/ac 比尔格的祝福 <wait.2.7>\n/ac 制作",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "90 590 半成品 开荒",
                "Contents": "/ac \"坚信\" <wait.2.7>\n/ac \"掌握\" <wait.1.7>\n/ac \"崇敬\" <wait.1.7>\n/ac \"坯料制作\" <wait.2.7>\n/ac \"精密制作\" <wait.2.7>\n/ac \"改革\" <wait.1.7>\n/ac \"俭约加工\" <wait.2.7>\n/ac \"俭约加工\" <wait.2.7>\n/ac \"俭约加工\" <wait.2.7>\n/ac \"俭约加工\" <wait.2.7>\n/ac \"掌握\" <wait.1.7>\n/ac \"改革\" <wait.1.7>\n/ac \"俭约加工\" <wait.2.7>\n/ac \"俭约加工\" <wait.2.7>\n/ac \"俭约加工\" <wait.2.7>\n/ac \"俭约加工\" <wait.2.7>\n/ac \"改革\" <wait.1.7>\n/ac \"坯料加工\" <wait.2.7>\n/ac \"阔步\" <wait.1.7>\n/ac \"比尔格的祝福\" <wait.2.7>\n/ac \"模范制作\" <wait.2.7>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "90 590 成品 开荒",
                "Contents": "/ac \"坚信\" <wait.2.7>\n/ac \"掌握\" <wait.1.7>\n/ac \"崇敬\" <wait.1.7>\n/ac \"长期俭约\" <wait.1.7>\n/ac \"坯料制作\" <wait.2.7>\n/ac \"坯料制作\" <wait.2.7>\n/ac \"改革\" <wait.1.7>\n/ac \"坯料加工\" <wait.2.7>\n/ac \"坯料加工\" <wait.2.7>\n/ac \"坯料加工\" <wait.2.7>\n/ac \"坯料加工\" <wait.2.7>\n/ac \"阔步\" <wait.1.7>\n/ac \"改革\" <wait.1.7>\n/ac \"坯料加工\" <wait.2.7>\n/ac \"工匠的神技\" <wait.2.7>\n/ac \"阔步\" <wait.1.7>\n/ac \"比尔格的祝福\" <wait.2.7>\n/ac \"模范制作\" <wait.2.7>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              }
            ]
          },
          {
            "$type": "SomethingNeedDoing.FolderNode, SomethingNeedDoing",
            "Name": "4237 3831 596",
            "Children": [
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "4237 3831 620成品 702",
                "Contents": "/ac 坚信 <wait.2.5>\n/ac 掌握 <wait.1.5>\n/ac 崇敬 <wait.1.5>\n/ac 俭约 <wait.1.5>\n/ac 坯料制作 <wait.2.5>\n/ac 坯料制作 <wait.2.5>\n/ac 模范制作 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 改革 <wait.1.5>\n/ac 俭约加工 <wait.2.5>\n/ac 加工 <wait.2.5>\n/ac 中级加工 <wait.2.5>\n/ac 上级加工 <wait.2.5>\n/ac 掌握 <wait.1.5>\n/ac 改革 <wait.1.5>\n/ac 俭约加工 <wait.2.5>\n/ac 加工 <wait.2.5>\n/ac 中级加工 <wait.2.5>\n/ac 上级加工 <wait.2.5>\n/ac 阔步 <wait.1.5>\n/ac 改革 <wait.1.5>\n/ac 坯料加工 <wait.2.5>\n/ac 阔步 <wait.1.5>\n/ac 比尔格的祝福 <wait.2.5>\n/ac 模范制作 <wait.2.5>\n",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "4237 3831 620半成品 636",
                "Contents": "/ac \"坚信\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"精修\" <wait.2.5>\n/ac \"掌握\" <wait.1.5>\n/ac \"精密制作\" <wait.2.5>\n/ac \"上级加工\" <wait.2.5>\n/ac \"长期俭约\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"比尔格的祝福\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "4237 3831 610成品 672",
                "Contents": "/ac \"坚信\" <wait.2.5>\n/ac \"掌握\" <wait.1.5>\n/ac \"俭约加工\" <wait.2.5>\n/ac \"崇敬\" <wait.1.5>\n/ac \"长期俭约\" <wait.1.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"坯料制作\" <wait.2.5>\n/ac \"精密制作\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"坯料加工\" <wait.2.5>\n/ac \"加工\" <wait.2.5>\n/ac \"中级加工\" <wait.2.5>\n/ac \"上级加工\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"加工\" <wait.2.5>\n/ac \"中级加工\" <wait.2.5>\n/ac \"上级加工\" <wait.2.5>\n/ac \"工匠的神技\" <wait.2.5>\n/ac \"改革\" <wait.1.5>\n/ac \"工匠的神技\" <wait.2.5>\n/ac \"工匠的神技\" <wait.2.5>\n/ac \"阔步\" <wait.1.5>\n/ac \"比尔格的祝福\" <wait.2.5>\n/ac \"模范制作\" <wait.2.5>\n",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "4237 3831 88成品",
                "Contents": "/ac 坚信 <wait.2.5>\n/ac 长期俭约 <wait.1.5>\n/ac 模范制作 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 改革 <wait.1.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 比尔格的祝福 <wait.2.5>\n/ac 坯料制作 <wait.2.5>\n",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "4237 3831 专家 翼龙 高山茶 680",
                "Contents": "/ac 坚信 <wait.2.5>\n/ac 崇敬 <wait.1.5>\n/ac 掌握 <wait.1.5>\n/ac 长期俭约 <wait.1.5>\n/ac 专心致志 <wait.2.5>\n/ac 集中制作 <wait.2.5>\n/ac 改革 <wait.1.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 改革 <wait.1.5>\n/ac 坯料加工 <wait.2.5>\n/ac 工匠的神技 <wait.2.5>\n/ac 工匠的神技 <wait.2.5>\n/ac 工匠的神技 <wait.2.5>\n/ac 工匠的神技 <wait.2.5>\n/ac 改革 <wait.1.5>\n/ac 阔步 <wait.1.5>\n/ac 比尔格的祝福 <wait.2.5>\n/ac 坯料制作 <wait.2.5>\n",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "临时搓",
                "Contents": "/ac 坚信 <wait.2.5>\n/ac 掌握 <wait.1.5>\n/ac 崇敬 <wait.1.5>\n/ac 俭约 <wait.1.5>\n/ac 坯料制作 <wait.2.5>\n/ac 坯料制作 <wait.2.5>\n/ac 模范制作 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 改革 <wait.1.5>\n/ac 加工 <wait.2.5>\n/ac 中级加工 <wait.2.5>\n/ac 上级加工 <wait.2.5>\n/ac 掌握 <wait.1.5>\n/ac 改革 <wait.1.5>\n/ac 加工 <wait.2.5>\n/ac 中级加工 <wait.2.5>\n/ac 阔步 <wait.1.5>\n/ac 改革 <wait.1.5>\n/ac 坯料加工 <wait.2.5>\n/ac 阔步 <wait.1.5>\n/ac 比尔格的祝福 <wait.2.5>\n/ac 制作 <wait.2.5>\n",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "4237 3831 89成品",
                "Contents": "/ac 闲静 <wait.2.5>\n/ac 长期俭约 <wait.1.5>\n/ac 改革 <wait.1.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 比尔格的祝福 <wait.2.5>\n/ac 崇敬 <wait.1.5>\n/ac 坯料制作 <wait.2.5>\n/ac 坯料制作 <wait.2.5>\n",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "4237 3831 90成品",
                "Contents": "/ac 坚信 <wait.2.5>\n/ac 长期俭约 <wait.1.5>\n/ac 坯料制作 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 改革 <wait.1.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 比尔格的祝福 <wait.2.5>\n/ac 模范制作 <wait.2.5>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              },
              {
                "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
                "Name": "4237 3831 83半成品",
                "Contents": "/ac 精密制作 <wait.2.5>\n/ac 掌握 <wait.1.5>\n/ac 长期俭约 <wait.1.5>\n/ac 改革 <wait.1.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 坯料加工 <wait.2.5>\n/ac 比尔格的祝福 <wait.2.5>\n/ac 坯料制作 <wait.2.5>",
                "CraftingLoop": false,
                "CraftLoopCount": 0,
                "IsLua": false,
                "Language": 0
              }
            ]
          }
        ]
      },
      {
        "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
        "Name": "lifu",
        "Contents": "/target 格里格 <wait.0.2>\n/send NUMPAD0\n/waitaddon GuildLeve <wait.0.2>\n#/click guild_leve_alchemist <wait.0.2>\n/click journal_detail_accept <wait.0.3>\n/send ESCAPE <wait.0.3>\n/send ESCAPE <wait.0.7>\n/target 阿尔德伊恩 <wait.0.2>\n/send NUMPAD0 <wait.2>\n/loop 99",
        "CraftingLoop": false,
        "CraftLoopCount": 0,
        "IsLua": false,
        "Language": 0
      },
      {
        "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
        "Name": "停止时下坐骑",
        "Contents": " muuv = 1\n muuvX = GetPlayerRawXPos()\n muuvY = GetPlayerRawYPos()\n muuvZ = GetPlayerRawZPos()\n while muuv == 1 do\n    yield(\"/wait 1\")\n    if muuvX == GetPlayerRawXPos() and muuvY == GetPlayerRawYPos() and muuvZ == GetPlayerRawZPos() then\n        muuv = 0\n        yield(\"/ac 挑衅\")\n    end\n    muuvX = GetPlayerRawXPos()\n    muuvY = GetPlayerRawYPos()\n    muuvZ = GetPlayerRawZPos()\n end",
        "CraftingLoop": false,
        "CraftLoopCount": 0,
        "IsLua": false,
        "Language": 2
      },
      {
        "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
        "Name": "不在传送就fly",
        "Contents": "isCasting = IsPlayerCasting()\n    if isCasting == false then\n        yield(\"/vnav stop\")\n        yield(\"/vnav flyflag\")\n    end",
        "CraftingLoop": false,
        "CraftLoopCount": 0,
        "IsLua": false,
        "Language": 2
      },
      {
        "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
        "Name": "脱战上坐骑",
        "Contents": "while GetCharacterCondition(4, false) do\n   if GetCharacterCondition(26, false) then\n      yield(\"/共通技能 随机坐骑\")\n      yield(\"/wait 2\")\n    else\n      yield(\"/wait 0.5\")\n    end\nend",
        "CraftingLoop": false,
        "CraftLoopCount": 0,
        "IsLua": false,
        "Language": 2
      },
      {
        "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
        "Name": "点击确认",
        "Contents": "/waitaddon SelectYesno\n/wait 0.2\n/click SelectYesno Yes",
        "CraftingLoop": false,
        "CraftLoopCount": 0,
        "IsLua": false,
        "Language": 0
      },
      {
        "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
        "Name": "fate",
        "Contents": "--[[\r\n\r\n********************************************************************************\r\n*                                Fate Farming                                  *\r\n*                              Version 2.15.12                                 *\r\n********************************************************************************\r\n\r\n作者: pot0to (https://ko-fi.com/pot0to)\r\n原github库: https://github.com/pot0to/pot0to-SND-Scripts/blob/main/FateFarmingStateMachine.drawio.png\r\n        更新日志：\r\n    -> 2.15.12  Fixed autobuy for gysahl greens, added a path back to center of\r\n                    fate if no targets found\r\n                Truncated random wait  to 3 decimal places\r\n                Removed check for targeting forlorn only once\r\n                Added <0,0,0> check for pathing to enemies while in a fate\r\n                Added nilcheck for BossFatesClass\r\n                Fixed class changing for part 2 fates, fixed materia extraction flag\r\n                Fixed wait for bonus buff for retainers, mender, gysahl greens\r\n                    and dark matter purchases, bugfix for\r\n                    unexpectedCombat -> ready -> unexpectedCombat loop\r\n                Switch to /rsr manual for forlorns and switch back after\r\n                Added a dismount check before summoning chocobo\r\n                Fixed name of Fate La Selva se lo Llevó in Yak T'el\r\n                Fix for chocobo summoning\r\n                Removed Pandora, added feature to purchase Gysahl Greens and\r\n                    Grade 8 Dark Matter from Limsa vendors, turned off BMR when\r\n                    turning in collections fates, fixed S9 waits\r\n                Fixing fate selection bug\r\n                Added missing Kozama'uka npc fates, fixed aoe settings after\r\n                    forlorn dies\r\n                Added pretty README\r\n                Added setting to select RSR aoe type, reworked aoe settings for\r\n                    targeting forlorns, added settings for special fates,\r\n                    updated RSR recommendations\r\n                Removed feature to use Thavnairian Onions when chocobo is ready\r\n                    for level up\r\n                Fixed fate name for The Serpentlord Seethes\r\n                Turn off aoes for forlorn\r\n                Added Dawntrail special fates to blacklist\r\n                Fixed continaution fates\r\n    -> 2.0.0    State system\r\n\r\n********************************************************************************\r\n*                                    必要插件                                   *\r\n********************************************************************************\r\n\r\nPlugins that are needed for it to work:\r\n\r\n    -> Something Need Doing [Expanded Edition] : (核心插件)   https://puni.sh/api/repository/croizat   \r\n    -> VNavmesh :   (用于规划路线和移动)    https://puni.sh/api/repository/veyn       \r\n    -> TextAdvance: (用来和fate里的NPC互动)\r\n    -> Teleporter :  (用来传送)\r\n    -> Lifestream :  (用于更改实例[ChangeInstance][Exchange]（看不懂）) \r\nhttps://raw.githubusercontent.com/NightmareXIV/MyDalamudPlugins/main/pluginmaster.json\r\n********************************************************************************\r\n*                                    可选插件                                   *\r\n********************************************************************************\r\n\r\nThis Plugins are Optional and not needed unless you have it enabled in the settings:\r\n\r\n    -> AutoRetainer : (for Retainers [Retainers])   https://love.puni.sh/ment.json\r\n    -> Deliveroo : (对于gc turn in [TurnIn])   https://plugins.carvel.li/\r\n    -> Bossmod/BossModReborn: (用于AI躲避，如果是红职可能不开这个可能会死)  https://puni.sh/api/repository/veyn\r\n                                                https://raw.githubusercontent.com/FFXIV-CombatReborn/CombatRebornRepo/main/pluginmaster.json\r\n    -> ChatCoordinates : (用来在小地图标记下一个fate) available via base /xlplugins\r\n\r\n--------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n]]\r\n\r\n--#region Settings\r\n\r\n--[[\r\n********************************************************************************\r\n*                                   设置                                   *\r\n********************************************************************************\r\n]]\r\n\r\n--Pre Fate Settings\r\nFood = \"萨维奈奶茶 <hq>\"                                      --如果不想用任何食物，就将 \"\" 内留空. 如果想自动使用HQ食物就添加 <hq> 在食物后面，例如 \"烧烤暗色茄子 <hq>\"\r\nPotion = \"\"                                    --如果不想用任何药就将 \"\" 内留空.\r\nShouldSummonChocobo = true                     --召唤陆行鸟吗？如果不召唤将true改为false\r\n    ShouldAutoBuyGysahlGreens = false              --如果你背包里没有基萨尔野菜则在海都自动购买99个基萨尔野菜（false为关闭）\r\nMountToUse = \"仙子猪大王\"                      --前往fate时你想要使用的坐骑\r\n\r\n--Fate Combat Settings\r\nCompletionToIgnoreFate = 80                    --设置一个阈值，如果当前地区已完成的fate数量高于这个阈值，则跳过\r\nMinTimeLeftToIgnoreFate = 3*60                 --设置一个时间，如果fate剩余时间比这个时间少，则跳过（几个*60秒）\r\nCompletionToJoinBossFate = 0                   --设置一个数字，如果fate的进度低于这个数字，则跳过 (用于避免单挑boss)\r\n    CompletionToJoinSpecialBossFates = 20          --For the Special Fates like the Serpentlord Seethes or Mascot Murder\r\n    ClassForBossFates = \"\"                         --如果你想用特定的职业单挑boss，就在\"\"内设置为三个字母的职业缩写（国际服缩写）\r\n                                                   --例如骑士为 Ex: \"PLD\"\r\nJoinCollectionsFates = true                   --如果你不想打连续类型的fate则设置为 fates\r\nRSRAoeType = \"Cleave\"                            --自动循环插件选项: Cleave/Full/Off\r\nRSRAutoType = \"LowHP\"                          --自动循环插件选项: LowHP/HighHP/Big/Small/HighMaxHP/LowMaxHP/Nearest/Farthest.\r\n                                    \r\nUseBM = true                                   --如果你想使用boss mod躲避AOE和跟随目标则设置为 true ，反之设置为 false\r\n    BMorBMR = \"BMR\"\r\n    MeleeDist = 2.5                                --设置boss mod AI 近战攻击距离. 近战攻击 (自动攻击) 最大距离为 2.59y, 2.60 则会 \"超出攻击范围\"\r\n    RangedDist = 20                                --设置boss mod AI 远程攻击距离. 远敏和法系的最大攻击距离为 25.49y, 25.5 则会 \"超出攻击范围\"=\r\n\r\n\r\n--Post Fate Settings\r\nEnableChangeInstance = true                    --当没有fate时是否切换副本区域 (只作用于 DT)\r\n    WaitIfBonusBuff = true                         --如果你有\"危命奖励提高\"buff，则不切换副本区\r\nShouldExchangeBicolorVouchers = true           --是否自动兑换双色宝石收据\r\n    VoucherTown = \"九号解决方案\"           -- 双色宝石的收据填写 \"旧萨雷安\" 图拉尔双色宝石的收据则填写 \"九号解决方案\"\r\nSelfRepair = true                              --自己修理选项，如果设置为 false, 就去 海都找修理工\r\n    RepairAmount = 10                              --设置一个阈值，低于此阈值将会自动修理装备 (如果不需要自动修理，请将其设置为0)\r\n    ShouldAutoBuyDarkMatter = false                --如果你没有8级暗物质，则会自动从利姆萨的商人购买一组99个\r\nShouldExtractMateria = true                    --是否要自动精炼魔晶石？\r\nRetainers = true                               --是否自动收雇员\r\nShouldGrandCompanyTurnIn = false                --是否自动交军票 (需要 Deliveroo 插件)\r\n    InventorySlotsLeft = 5                         --在执行上交前需要多少空余的背包空间\r\n\r\n--修改这个值来控制你在聊天中希望显示多少echo消息。\r\n--0 不需要任何消息\r\n--1 每个FATE结束后会显示当前双色宝石数量\r\n--2 显示双色宝石数量，并提示下一个要前往的FATE名称\r\nEcho = 2\r\n\r\n\r\n--新增\r\nAutoResurrect = true                            -- 是否自动复活。true为启用，false为禁用\r\nChatCommandType = \"p\"                           -- 发送下一个fate的目标到聊天 可以改成 `e`  `p` 或其他 与游戏原生宏相同\r\n\r\n\r\nFatePriority = \"Distance\"                      --Distance or Timeleft(default pot0to script)\r\n\r\n--#endregion Settings\r\n\r\n------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n--[[\r\n**************************************************************\r\n*          这里是代码：除非你知道你在做什么不然不要动它          *\r\n**************************************************************\r\n]]\r\n\r\n--#region Plugin Checks and Setting Init\r\n\r\n--Required Plugin Warning\r\nif not HasPlugin(\"vnavmesh\") then\r\n    yield(\"/echo [FATE]请安装vnavmesh\")\r\nend\r\n\r\nif UseBM then\r\n    if HasPlugin(\"BossModReborn\") then\r\n        BMorBMR = \"BMR\"\r\n    elseif HasPlugin(\"BossMod\") then\r\n        BMorBMR = \"BM\"\r\n    else\r\n        UseBM = false\r\n        yield(\"[FATE]未检测到BossMod或BossModReborn \"..\r\n            \"Please set useBM to false or install one of these plugins to silence this warning.\")\r\n    end\r\nend\r\n\r\n\r\nif not HasPlugin(\"TextAdvance\") then\r\n    yield(\"/echo [FATE] 请安装TextAdvance\")\r\nend\r\n\r\n--Optional Plugin Warning\r\nif EnableChangeInstance == true  then\r\n    if HasPlugin(\"Lifestream\") == false then\r\n        yield(\"/echo [FATE] 请在设置中安装Lifestream或禁用ChangeInstance\")\r\n    end\r\nend\r\nif Retainers then\r\n    if not HasPlugin(\"AutoRetainer\") then\r\n        yield(\"[FATE]请安装autoretention\")\r\n    end\r\nend\r\nif ShouldGrandCompanyTurnIn then\r\n    if not HasPlugin(\"Deliveroo\") then\r\n        ShouldGrandCompanyTurnIn = false\r\n        yield(\"/echo [FATE]请安装Deliveroo\")\r\n    end\r\nend\r\nif ShouldExtractMateria then\r\n    if HasPlugin(\"YesAlready\") == false then\r\n        yield(\"/echo [FATE]请安装YesAlready\")\r\n    end \r\nend   \r\n\r\nif not HasPlugin(\"ChatCoordinates\") then\r\n    yield(\"/echo [FATE] ChatCoordinates未安装。当移动到下一个FATE时，地图将不显示标点\")\r\nend\r\n\r\nyield(\"/at y\")\r\n\r\n--snd property\r\nfunction setSNDProperty(propertyName, value)\r\n    local currentValue = GetSNDProperty(propertyName)\r\n    if currentValue ~= value then\r\n        SetSNDProperty(propertyName, tostring(value))\r\n        LogInfo(\"[SetSNDProperty] \" .. propertyName .. \" set to \" .. tostring(value))\r\n    end\r\nend\r\n\r\nsetSNDProperty(\"UseItemStructsVersion\", true)\r\nsetSNDProperty(\"UseSNDTargeting\", true)\r\nsetSNDProperty(\"StopMacroIfTargetNotFound\", false)\r\nsetSNDProperty(\"StopMacroIfCantUseItem\", false)\r\nsetSNDProperty(\"StopMacroIfItemNotFound\", false)\r\nsetSNDProperty(\"StopMacroIfAddonNotFound\", false)\r\nsetSNDProperty(\"StopMacroIfAddonNotVisible\", false)\r\n\r\n--#endregion Plugin Checks and Setting Init\r\n\r\n--#region Data\r\n\r\nCharacterCondition = {\r\n    dead=2,\r\n    mounted=4,\r\n    inCombat=26,\r\n    casting=27,\r\n    occupied31=31,\r\n    occupiedShopkeeper=32,\r\n    occupied=33,\r\n    occupiedMateriaExtraction=39,\r\n    betweenAreas=45,\r\n    jumping48=48,\r\n    jumping61=61,\r\n    occupiedSummoningBell=50,\r\n    mounting57=57,\r\n    mounting64=64,\r\n    beingmoved70=70,\r\n    beingmoved75=75,\r\n    flying=77\r\n}\r\n\r\nClassList =\r\n{\r\n    pld = { classId=19, className=\"骑士\",         isMelee=true,  isTank=true },\r\n    mnk = { classId=20, className=\"武僧\",         isMelee=true,  isTank=false },\r\n    war = { classId=21, className=\"战士\",           isMelee=true,  isTank=true },\r\n    drg = { classId=22, className=\"龙骑士\",         isMelee=true,  isTank=false },\r\n    brd = { classId=23, className=\"吟游诗人\",       isMelee=false, isTank=false },\r\n    whm = { classId=24, className=\"白魔法师\",       isMelee=false, isTank=false },\r\n    blm = { classId=25, className=\"黑魔法师\",       isMelee=false, isTank=false },\r\n    smn = { classId=27, className=\"召唤师\",         isMelee=false, isTank=false },\r\n    sch = { classId=28, className=\"学者\",           isMelee=false, isTank=false },\r\n    nin = { classId=30, className=\"忍者\",           isMelee=true,  isTank=false },\r\n    mch = { classId=31, className=\"机工士\",         isMelee=false, isTank=false},\r\n    drk = { classId=32, className=\"暗黑骑士\",       isMelee=true,  isTank=true },\r\n    ast = { classId=33, className=\"占星术士\",       isMelee=false, isTank=false },\r\n    sam = { classId=34, className=\"武士\",             isMelee=true,  isTank=false },\r\n    rdm = { classId=35, className=\"赤魔法师\",       isMelee=false, isTank=false },\r\n    blu = { classId=36, className=\"青魔法师\",       isMelee=false, isTank=false },\r\n    gnb = { classId=37, className=\"绝枪战士\", isMelee=true,  isTank=true },\r\n    dnc = { classId=38, className=\"舞者\",         isMelee=false, isTank=false },\r\n    rpr = { classId=39, className=\"钐镰客\",       isMelee=true,  isTank=false },\r\n    sge = { classId=40, className=\"贤者\",           isMelee=false, isTank=false },\r\n    vpr = { classId=41, className=\"蝰蛇剑士\",     isMelee=true,  isTank=false },\r\n    pct = { classId=42, className=\"绘灵法师\", isMelee=false, isTank=false }\r\n}\r\n\r\nFatesData = {\r\n    {\r\n        zoneName = \"库尔札斯中央高地\",\r\n        zoneId = 155,\r\n        aetheryteList = {\r\n            { aetheryteName=\"巨龙首营地\", x=223.98718, y=315.7854, z=-234.85168 }\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"库尔札斯西部高地\",\r\n        zoneId = 397,\r\n        aetheryteList = {\r\n            { aetheryteName=\"隼巢\", x=474.87585, y=217.94458, z=708.5221 }\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"摩杜纳\",\r\n        zoneId = 156,\r\n        aetheryteList = {\r\n            { aetheryteName=\"丧灵钟\", x=40.024292, y=24.002441, z=-668.0247 }\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"阿巴拉提亚云海\",\r\n        zoneId = 401,\r\n        aetheryteList = {\r\n            { aetheryteName=\"云顶营地\", x=-615.7473, y=-118.36426, z=546.5934 },\r\n            { aetheryteName=\"尊杜集落\", x=-613.1533, y=-49.485046, z=-415.03015 }\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"魔大陆阿济兹拉\",\r\n        zoneId = 402,\r\n        aetheryteList = {\r\n            { aetheryteName=\"螺旋港\", x=-722.8046, y=-182.29956, z=-593.40814 }\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"龙堡参天高地\",\r\n        zoneId = 398,\r\n        aetheryteList = {\r\n            { aetheryteName=\"尾羽集落\", x=532.6771, y=-48.722107, z=30.166992 },\r\n            { aetheryteName=\"不洁三塔\", x=-304.12756, y=-16.70868, z=32.059082 }\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"龙堡内陆低地\",\r\n        zoneId=399,\r\n        tpZoneId = 478,\r\n        aetheryteList = {\r\n            { aetheryteName=\"田园郡\", x=71.94617, y=211.26111, z=-18.905945 }\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"翻云雾海\",\r\n        zoneId=400,\r\n        aetheryteList = {\r\n            { aetheryteName=\"莫古力之家\", x=259.20496, y=-37.70508, z=596.85657 },\r\n            { aetheryteName=\"天极白垩宫\", x=-584.9546, y=52.84192, z=313.43542 },\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"雷克兰德\",\r\n        zoneId = 813,\r\n        aetheryteList = {\r\n            { aetheryteName=\"奥斯塔尔严命城\", x=-735, y=53, z=-230 },\r\n            { aetheryteName=\"乔布要塞\", x=753, y=24, z=-28 },\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"樵夫之歌\", npcName=\"雷克兰德的樵夫\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"与紫叶团的战斗之卑鄙陷阱\", npcName=\"像是旅行商人的男子\" }, --24 防御\r\n                { fateName=\"污秽之血\", npcName=\"乔布要塞的卫兵\" } --24 防御\r\n            },\r\n            fatesWithContinuations = {\r\n                \"高度进化\"\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"珂露西亚岛\",\r\n        zoneId = 814,\r\n        aetheryteList = {\r\n            { aetheryteName=\"滞潮村\", x=668, y=29, z=289 },\r\n            { aetheryteName=\"工匠村\", x=-244, y=20, z=385 },\r\n            { aetheryteName=\"图姆拉村\", x=-426, y=419, z=-623 },\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"制作战士之自走人偶\", npcName=\"图尔家族的技师\" }\r\n            },\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            specialFates = {\r\n                \"激斗畏惧装甲之秘密武器\" -- 畏惧装甲（特殊FATE）\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"安穆·艾兰\",\r\n        zoneId = 815,\r\n        aetheryteList = {\r\n            { aetheryteName=\"鼹灵集市\", x=246, y=12, z=-220 },\r\n            { aetheryteName=\"络尾聚落\", x=-511, y=47, z=-212 },\r\n            { aetheryteName=\"上路客店\", x=399, y=-24, z=307 },\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {\r\n                \"托尔巴龟最棒\" -- 去的的路上难打\r\n            }\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"伊尔美格\",\r\n        zoneId = 816,\r\n        aetheryteList = {\r\n            { aetheryteName=\"群花馆\", x=-344, y=48, z=512 },\r\n            { aetheryteName=\"云村\", x=380, y=87, z=-687 },\r\n            { aetheryteName=\"普拉恩尼茸洞\", x=-72, y=103, z=-857 },\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"仙子尾巴之金黄花蜜\", npcName=\"寻找花蜜的仙子\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"仙子尾巴之魔物包围网\", npcName=\"寻找花蜜的仙子\" }\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"拉凯提卡大森林\",\r\n        zoneId = 817,\r\n        aetheryteList = {\r\n            { aetheryteName=\"蛇行枝\", x=-103, y=-19, z=297 },\r\n            { aetheryteName=\"法诺村\", x=382, y=21, z=-194 },\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"粉红鹳\", npcName=\"夜之民导师\" },\r\n                { fateName=\"缅楠的巡逻之补充弓箭\", npcName=\"散弓音 缅楠\" },\r\n                { fateName=\"传说诞生\", npcName=\"法诺的看守\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"吉梅与萨梅\", npcName=\"血红枪 吉梅\" }, --24 防御\r\n                { fateName=\"死相陆鸟——刻莱诺\", npcName=\"法诺的猎人\" } --22 boss\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"黑风海\",\r\n        zoneId = 818,\r\n        aetheryteList = {\r\n            { aetheryteName=\"鳍人潮池\", x=561, y=352, z=-199 },\r\n            { aetheryteName=\"马克连萨斯广场\", x=-141, y=-280, z=218 },\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"灾厄的古塔尼亚之收集红血珊瑚\", npcName=\"提乌嘶·澳恩\" },\r\n                { fateName=\"珍珠永恒\", npcName=\"鳍人族捕鱼人\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"灾厄的古塔尼亚之开始追踪\", npcName=\"提乌嘶·澳恩\" }, --23 一般\r\n                { fateName=\"灾厄的古塔尼亚之兹姆嘶登场\", npcName=\"提乌嘶·澳恩\" }, --23 一般\r\n                { fateName=\"灾厄的古塔尼亚之保护提乌嘶\", npcName=\"提乌嘶·澳恩\" }, --24 防御\r\n                { fateName=\"灾厄的古塔尼亚之护卫提乌嘶\", npcName=\"提乌嘶·澳恩\" }, --护送\r\n                { fateName=\"灾厄的古塔尼亚之准备决战\", npcName=\"提乌嘶·澳恩\" } --24 防御\r\n            },\r\n            fatesWithContinuations = {},\r\n            specialFates = {\r\n                \"灾厄的古塔尼亚之深海讨伐战\" -- 古塔尼亚（特殊FATE）\r\n            },\r\n            blacklistedFates= {\r\n                \"贝汁物语\", --护送\r\n                \"灾厄的古塔尼亚之护卫提乌嘶\" --护送\r\n            }\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"迷津\",\r\n        zoneId = 956,\r\n        aetheryteList = {\r\n            { aetheryteName=\"公堂保管院\", x=443, y=170, z=-476 },\r\n            { aetheryteName=\"小萨雷安\", x=8, y=-27, z=-46 },\r\n            { aetheryteName=\"无路总部\", x=-729, y=-27, z=302 },\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"迷津风玫瑰\", npcName=\"束手无策的研究员\" },\r\n                { fateName=\"纯天然保湿护肤品\", npcName=\"皮肤很好的研究员\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"牧羊人的日常\", npcName=\"种畜研究所的驯兽人\" } --24 タワーディフェンス\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"萨维奈岛\",\r\n        zoneId = 957,\r\n        aetheryteList = {\r\n            { aetheryteName=\"新港\", x=193, y=6, z=629 },\r\n            { aetheryteName=\"代米尔遗烈乡\", x=-527, y=4, z=36 },\r\n            { aetheryteName=\"波洛伽护法村\", x=405, y=5, z=-244 },\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"芳香的炼金术士：危险的芬芳\", npcName=\"调香师 萨加巴缇\" }\r\n            },\r\n            otherNpcFates= {\r\n               { fateName=\"猴子军团\", npcName=\"采草药的女孩\" },\r\n               { fateName=\"少年与海\", npcName=\"渔夫的儿子\" } --24 防御\r\n            },\r\n            fatesWithContinuations = {},\r\n            specialFates = {\r\n                \"兽道诸神信仰：伪神降临\" -- 兽道神明灯天王（特殊FATE）\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"加雷马\",\r\n        zoneId = 958,\r\n        aetheryteList = {\r\n            { aetheryteName=\"碎璃营地\", x=-408, y=24, z=479 },\r\n            { aetheryteName=\"第三站\", x=518, y=-35, z=-178 },\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"资源回收分秒必争\", npcName=\"沦为难民的魔导技师\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"魔导技师的归乡之旅：启程\", npcName=\"柯尔特隆纳协漩尉\" }, --22 boss\r\n                { fateName=\"魔导技师的归乡之旅：落入陷阱\", npcName=\"埃布雷尔诺\" }, --24 防御\r\n                { fateName=\"魔导技师的归乡之旅：实弹射击\", npcName=\"柯尔特隆纳协漩尉\" }, --23 一般\r\n                { fateName=\"雪原的巨魔\", npcName=\"幸存的难民\" } --24 防御\r\n            },\r\n            fatesWithContinuations = {\r\n                { fateName=\"魔导技师的归乡之旅：指挥机梅塔特隆\", continuationIsBoss=true }\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"叹息海\",\r\n        zoneId = 959,\r\n        aetheryteList = {\r\n            { aetheryteName=\"泪湾\", x=-566, y=134, z=650 },\r\n            { aetheryteName=\"最佳威兔洞\", x=0, y=-128, z=-512 },\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"如何追求兔生刺激\", npcName=\"担惊威\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"叹息的白兔之轰隆隆大爆炸\", npcName=\"战兵威\" }, --24 タワーディフェンス\r\n                { fateName=\"叹息的白兔之乱糟糟大失控\", npcName=\"落名威\" }, --23 通常\r\n                { fateName=\"叹息的白兔之怒冲冲大处理\", npcName=\"落名威\" } --22 ボス\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {\r\n                \"跨海而来的老饕\", --由于斜坡上视野不佳，可能什么都做不了就呆站着\r\n            }\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"天外天垓\",\r\n        zoneId = 960,\r\n        aetheryteList = {\r\n            { aetheryteName=\"半途终旅\", x=-544, y=74, z=269 },\r\n            { aetheryteName=\"异亚村落\", x=64, y=272, z=-657 },\r\n            { aetheryteName=\"奥密克戎基地\", x=-489, y=437, z=333 },\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"侵略兵器召回指令：扩建通信设备\", npcName=\"N-6205\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"荣光之翼——阿尔·艾因\", npcName=\"阿尔·艾因的朋友\" }, --22 boss\r\n                { fateName=\"侵略兵器召回指令：保护N-6205\", npcName=\"N-6205\"}, --24 防御\r\n                { fateName=\"走向永恒的结局\", npcName=\"米克·涅尔\" } --24 防御\r\n            },\r\n            fatesWithContinuations = {},\r\n            specialFates = {\r\n                \"\t侵略兵器召回指令：破坏侵略兵器希\" -- 希（特殊FATE）\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"厄尔庇斯\",\r\n        zoneId = 961,\r\n        aetheryteList = {\r\n            { aetheryteName=\"醒悟天测园\", x=159, y=11, z=126 },\r\n            { aetheryteName=\"十二奇园\", x=-633, y=-19, z=542 },\r\n            { aetheryteName=\"创作者之家\", x=-529, y=161, z=-222 },\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"望请索克勒斯先生谅解\", npcName=\"负责植物的观察者\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"创造计划：过于新颖的理念\", npcName=\"神秘莫测 莫勒图斯\" }, --23 一般\r\n                { fateName=\"创造计划：伊娥观察任务\", npcName=\"神秘莫测 莫勒图斯\" }, --23 一般\r\n                { fateName=\"告死鸟\", npcName=\"一角兽的观察者\" }, --24 防御\r\n            },\r\n            fatesWithContinuations = {\r\n                { fateName=\"创造计划：过于新颖的理念\", continuationIsBoss=true },\r\n                { fateName=\"创造计划：伊娥观察任务\", continuationIsBoss=true }\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"奥阔帕恰山\",\r\n        zoneId = 1187,\r\n        aetheryteList = {\r\n            { aetheryteName=\"瓦丘恩佩洛\", x=335, y=-160, z=-415 },\r\n            { aetheryteName=\"沃拉的回响\", x=465, y=115, z=635 },\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {\r\n                { fateName=\"牧场关门\", npcName=\"健步如飞 基维利\" }, --23 一般\r\n                { fateName=\"跃动的火热——山火\", npcName=\"健步如飞 基维利\" }, --22 boss\r\n                { fateName=\"不死之人\", npcName=\"扫墓的尤卡巨人\" }, --23 一般\r\n                { fateName=\"失落的山顶都城\", npcName=\"守护遗迹的尤卡巨人\" }, --24 防御\r\n                { fateName=\"咖啡豆岌岌可危\", npcName=\"咖啡农园的工作人员\" }, --24 防御\r\n                { fateName=\"千年孤独\", npcName=\"其瓦固佩刀者\" }, --23 一般\r\n                { fateName=\"飞天魔厨——佩鲁的天敌\", npcName=\"佩鲁佩鲁的旅行商人\" }, --22 boss\r\n                { fateName=\"狼之家族\", npcName=\"佩鲁佩鲁族旅行商人\" }  --23 一般\r\n            },\r\n            fatesWithContinuations = {\r\n                { fateName=\"不死之人\", continuationIsBoss=true },\r\n                { fateName=\"千年孤独\", continuationIsBoss=true }\r\n            },\r\n            blacklistedFates= {\r\n                \"只有爆炸\", -- 不知道为什么过不去\r\n                --\"狼之家族\", -- 由于同一地点有多个同名NPC存在\r\n                --\"飞天魔厨——佩鲁的天敌\", -- 由于同一地点有多个同名NPC存在\r\n                \"跃动的火热——山火\" -- 会抽搐\r\n            }\r\n        }\r\n    },\r\n    {\r\n        zoneName=\"克扎玛乌卡湿地\",\r\n        zoneId=1188,\r\n        aetheryteList={\r\n            { aetheryteName=\"哈努聚落\", x=-170, y=6, z=-470 },\r\n            { aetheryteName=\"朋友的灯火\", x=541, y=117, z=203 },\r\n            { aetheryteName=\"土陶郡\", x=-477, y=124, z=311 }\r\n        },\r\n        fatesList={\r\n            collectionsFates={\r\n                { fateName=\"密林淘金\", npcName=\"莫布林族采集者\" },\r\n                { fateName=\"巧若天工\", npcName=\"哈努族手艺人\" },\r\n                \r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"怪力大肚王——非凡飔戮龙\", npcName=\"哈努族捕鱼人\" }, --22 boss\r\n                { fateName=\"芦苇荡的时光\", npcName=\"哈努族农夫\" }, --23 一般\r\n                { fateName=\"贡品小偷\", npcName=\"哈努族巫女\" }, --24 防御\r\n                { fateName=\"横征暴敛？\", npcName=\"佩鲁佩鲁族商人\" }, --24 防御\r\n                { fateName=\"美丽菇世界\", npcName=\"贴心巧匠 巴诺布罗坷\" }  --23 一般\r\n            },\r\n            fatesWithContinuations = {\r\n                { fateName=\"美丽菇世界\", continuationIsBoss=true }\r\n            },\r\n            blacklistedFates= {\r\n                --\"横征暴敛？\" -- 由于同一地点有多个同名NPC存在\r\n            }\r\n        }\r\n    },\r\n    {\r\n        zoneName=\"亚克特尔树海\",\r\n        zoneId=1189,\r\n        aetheryteList={\r\n            { aetheryteName=\"红豹村\", x=-400, y=24, z=-431 },\r\n            { aetheryteName=\"玛穆克\", x=720, y=-132, z=527 }\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"逃离恐怖菇\", npcName=\"霍比格族采集者\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"顶击大貒猪\", npcName=\"灵豹之民猎人\" }, --23 一般\r\n                { fateName=\"血染利爪——米尤鲁尔\", npcName=\"灵豹之民猎人\" }, --22 boss\r\n                { fateName=\"致命螳螂\", npcName=\"灵豹之民猎人\" }, --23 一般\r\n                { fateName=\"辉鳞族不法之徒袭击事件\", npcName=\"朵普罗族枪手\" }, --23 一般\r\n                { fateName=\"守护秘药之战\", npcName=\"霍比格族运货人\" }  --24 防御\r\n            },\r\n            fatesWithContinuations = {\r\n                { fateName=\"顶击大貒猪\", continuationIsBoss=false },\r\n                { fateName=\"辉鳞族不法之徒袭击事件\", continuationIsBoss=true }\r\n            },\r\n            blacklistedFates= {\r\n                --\"顶击大貒猪\", -- 由于同一地点有多个同名NPC存在\r\n                --\"血染利爪——米尤鲁尔\", -- 由于同一地点有多个同名NPC存在\r\n                --\"致命螳螂\" -- 由于同一地点有多个同名NPC存在\r\n            }\r\n        }\r\n    },\r\n    {\r\n        zoneName=\"夏劳尼荒野\",\r\n        zoneId=1190,\r\n        aetheryteList= {\r\n            { aetheryteName=\"胡萨塔伊驿镇\", x=390, y=0, z=465 },\r\n            { aetheryteName=\"谢申内青磷泉\", x=-295, y=19, z=-115 },\r\n            { aetheryteName=\"美花黑泽恩\", x=310, y=-15, z=-567 }\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"剃毛时间\", npcName=\"迎曦之民采集者\" },\r\n                { fateName=\"蛇王得酷热涅：狩猎前的准备\", npcName=\"夕阳尚红 布鲁克·瓦\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"死而复生的恶棍——阴魂不散 扎特夸\", npcName=\"迎曦之民劳动者\" }, --22 boss\r\n                { fateName=\"不甘的冲锋者——灰达奇\", npcName=\"崇灵之民男性\" }, --22 boss\r\n                { fateName=\"和牛一起旅行\", npcName=\"崇灵之民女性\" }, --23 一般\r\n                { fateName=\"大湖之恋\", npcName=\"崇灵之民渔夫\" }, --24 防御\r\n                { fateName=\"神秘翼龙荒野奇谈\", npcName=\"佩鲁佩鲁族旅行商人\" }  --23 一般\r\n            },\r\n            fatesWithContinuations = {\r\n                { fateName=\"蛇王得酷热涅：狩猎的杀手锏\", continuationIsBoss=false }\r\n            },\r\n            specialFates = {\r\n                \"蛇王得酷热涅：荒野的死斗\" -- 得酷热涅（特殊FATE）\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName=\"遗产之地\",\r\n        zoneId=1191,\r\n        aetheryteList= {\r\n            { aetheryteName=\"亚斯拉尼站\", x=515, y=145, z=210 },\r\n            { aetheryteName=\"边郊镇\", x=-221, y=32, z=-583 },\r\n            { aetheryteName=\"雷转质矿场\", x=-222, y=31,  z=123 }\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"药师的工作\", npcName=\"迎曦之民栽培者\" },\r\n                { fateName=\"亮闪闪的可回收资源\", npcName=\"英姿飒爽的再造者\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"机械迷城\", npcName=\"初出茅庐的狩猎者\" }, --23 一般\r\n                { fateName=\"你来我往\", npcName=\"初出茅庐的狩猎者\" }, --23 一般\r\n                { fateName=\"剥皮行者\", npcName=\"陷入危机的狩猎者\" }, --23 一般\r\n                { fateName=\"机械公敌\", npcName=\"走投无路的再造者\" }, --23 一般\r\n                { fateName=\"铭刻于灵魂中的恐惧\", npcName=\"终流地的再造者\" }, --23 一般\r\n                { fateName=\"前路多茫然\", npcName=\"害怕的运送者\" }  --23 一般\r\n            },\r\n            fatesWithContinuations = {\r\n                { fateName=\"机械公敌\", continuationIsBoss=false }\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName=\"活着的记忆\",\r\n        zoneId=1192,\r\n        aetheryteList= {\r\n            { aetheryteName=\"地场节点·忆\", x=0, y=56, z=796 },\r\n            { aetheryteName=\"地场节点·火\", x=659, y=27, z=-285 },\r\n            { aetheryteName=\"地场节点·风\", x=-253, y=56, z=-400 }\r\n        },\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"良种难求\", npcName=\"无失哨兵GX\" },\r\n                { fateName=\"记忆的碎片\", npcName=\"无失哨兵GX\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"为了运河镇的安宁\", npcName=\"无失哨兵GX\" }, --24 防御\r\n                { fateName=\"亩鼠米卡：盛装巡游开始\", npcName=\"滑稽巡游主宰\" }  --23 一般\r\n            },\r\n            fatesWithContinuations =\r\n            {\r\n                { fateName=\"水城噩梦\", continuationIsBoss=ture },\r\n                { fateName=\"亩鼠米卡：盛装巡游开始\", continuationIsBoss=ture }\r\n            },\r\n            specialFates =\r\n            {\r\n                \"亩鼠米卡：盛装巡游皆大欢喜\"\r\n            },\r\n            blacklistedFates= {\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n--#endregion Data\r\n\r\n--#region Fate Functions\r\nfunction IsCollectionsFate(fateName)\r\n    for i, collectionsFate in ipairs(SelectedZone.fatesList.collectionsFates) do\r\n        if collectionsFate.fateName == fateName then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction IsBossFate(fateId)\r\n    local fateIcon = GetFateIconId(fateId)\r\n    return fateIcon == 60722\r\nend\r\n\r\nfunction IsOtherNpcFate(fateName)\r\n    for i, otherNpcFate in ipairs(SelectedZone.fatesList.otherNpcFates) do\r\n        if otherNpcFate.fateName == fateName then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction IsSpecialFate(fateName)\r\n    if SelectedZone.fatesList.specialFates == nil then\r\n        return false\r\n    end\r\n    for i, specialFate in ipairs(SelectedZone.fatesList.specialFates) do\r\n        if specialFate == fateName then\r\n            return true\r\n        end\r\n    end\r\nend\r\n\r\nfunction IsBlacklistedFate(fateName)\r\n    for i, blacklistedFate in ipairs(SelectedZone.fatesList.blacklistedFates) do\r\n        if blacklistedFate == fateName then\r\n            return true\r\n        end\r\n    end\r\n    if not JoinCollectionsFates then\r\n        for i, collectionsFate in ipairs(SelectedZone.fatesList.collectionsFates) do\r\n            if collectionsFate.fateName == fateName then\r\n                return true\r\n            end\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction GetFateNpcName(fateName)\r\n    for i, fate in ipairs(SelectedZone.fatesList.otherNpcFates) do\r\n        if fate.fateName == fateName then\r\n            return fate.npcName\r\n        end\r\n    end\r\n    for i, fate in ipairs(SelectedZone.fatesList.collectionsFates) do\r\n        if fate.fateName == fateName then\r\n            return fate.npcName\r\n        end\r\n    end\r\nend\r\n\r\nfunction IsFateActive(fateId)\r\n    local activeFates = GetActiveFates()\r\n    for i = 0, activeFates.Count-1 do\r\n        if fateId == activeFates[i] then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction EorzeaTimeToUnixTime(eorzeaTime)\r\n    return eorzeaTime/(144/7) -- 24h Eorzea Time equals 70min IRL\r\nend\r\n\r\n--[[\r\n    Given two fates, picks the better one based on priority progress -> is bonus -> time left -> distance\r\n]]\r\nfunction SelectNextFateHelper(tempFate, nextFate)\r\n    if tempFate.timeLeft < MinTimeLeftToIgnoreFate or tempFate.progress > CompletionToIgnoreFate then\r\n        return nextFate\r\n    else\r\n        if nextFate == nil then\r\n                LogInfo(\"[FATE] Selecting #\"..tempFate.fateId..\" because no other options so far.\")\r\n                return tempFate\r\n        -- elseif nextFate.startTime == 0 and tempFate.startTime > 0 then -- nextFate is an unopened npc fate\r\n        --     LogInfo(\"[FATE] Selecting #\"..tempFate.fateId..\" because other fate #\"..nextFate.fateId..\" is an unopened npc fate.\")\r\n        --     return tempFate\r\n        -- elseif tempFate.startTime == 0 and nextFate.startTime > 0 then -- tempFate is an unopened npc fate\r\n        --     return nextFate\r\n        elseif nextFate.timeLeft < MinTimeLeftToIgnoreFate or nextFate.progress > CompletionToIgnoreFate then\r\n            return tempFate\r\n        else -- select based on progress\r\n            if nextFate.isBonusFate then\r\n                return nextFate\r\n            elseif tempFate.isBonusFate then\r\n                return tempFate\r\n            elseif tempFate.progress > nextFate.progress then\r\n                LogInfo(\"[FATE] Selecting #\"..tempFate.fateId..\" because other fate #\"..nextFate.fateId..\" has less progress.\")\r\n                return tempFate\r\n            elseif tempFate.progress < nextFate.progress then\r\n                LogInfo(\"[FATE] Selecting #\"..nextFate.fateId..\" because other fate #\"..tempFate.fateId..\" has less progress.\")\r\n                return nextFate\r\n            else\r\n                if (nextFate.isBonusFate and tempFate.isBonusFate) or (not nextFate.isBonusFate and not tempFate.isBonusFate) then\r\n                    if tempFate.timeLeft < nextFate.timeLeft and FatePriority == \"Timeleft\" then -- select based on time left\r\n                        LogInfo(\"[FATE] Selecting #\"..tempFate.fateId..\" because other fate #\"..nextFate.fateId..\" has more time left.\")\r\n                        return tempFate\r\n                    elseif tempFate.timeLeft > nextFate.timeLeft and FatePriority == \"Timeleft\" then\r\n                        LogInfo(\"[FATE] Selecting #\"..tempFate.fateId..\" because other fate #\"..nextFate.fateId..\" has more time left.\")\r\n                        return nextFate\r\n                    else\r\n                        tempFatePlayerDistance = GetDistanceToPoint(tempFate.x, tempFate.y, tempFate.z)\r\n                        nextFatePlayerDistance = GetDistanceToPoint(nextFate.x, nextFate.y, nextFate.z)\r\n                        if tempFatePlayerDistance < nextFatePlayerDistance then\r\n                            LogInfo(\"[FATE] Selecting #\"..tempFate.fateId..\" because other fate #\"..nextFate.fateId..\" is farther.\")\r\n                            return tempFate\r\n                        elseif tempFatePlayerDistance > nextFatePlayerDistance then\r\n                            LogInfo(\"[FATE] Selecting #\"..nextFate.fateId..\" because other fate #\"..nextFate.fateId..\" is farther.\")\r\n                            return nextFate\r\n                        else\r\n                            if tempFate.fateId < nextFate.fateId then\r\n                                return tempFate\r\n                            else\r\n                                return nextFate\r\n                            end\r\n                        end\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    return nextFate\r\nend\r\n\r\nfunction BuildFateTable(fateId)\r\n    local fateTable = {\r\n        fateId = fateId,\r\n        fateName = GetFateName(fateId),\r\n        progress = GetFateProgress(fateId),\r\n        duration = GetFateDuration(fateId),\r\n        startTime = GetFateStartTimeEpoch(fateId),\r\n        x = GetFateLocationX(fateId),\r\n        y = GetFateLocationY(fateId),\r\n        z = GetFateLocationZ(fateId),\r\n        isBonusFate = GetFateIsBonus(fateId),\r\n    }\r\n    fateTable.npcName = GetFateNpcName(fateTable.fateName)\r\n\r\n    local currentTime = EorzeaTimeToUnixTime(GetCurrentEorzeaTimestamp())\r\n    if fateTable.startTime == 0 then\r\n        fateTable.timeLeft = 900\r\n    else\r\n        fateTable.timeElapsed = currentTime - fateTable.startTime\r\n        fateTable.timeLeft = fateTable.duration - fateTable.timeElapsed\r\n    end\r\n\r\n    fateTable.isCollectionsFate = IsCollectionsFate(fateTable.fateName)\r\n    fateTable.isBossFate = IsBossFate(fateTable.fateId)\r\n    fateTable.isOtherNpcFate = IsOtherNpcFate(fateTable.fateName)\r\n    fateTable.isSpecialFate = IsSpecialFate(fateTable.fateName)\r\n    fateTable.isBlacklistedFate = IsBlacklistedFate(fateTable.fateName)\r\n\r\n    fateTable.continuationIsBoss = false\r\n    fateTable.hasContinuation = false\r\n    for _, continuationFate in ipairs(SelectedZone.fatesList.fatesWithContinuations) do\r\n        if fateTable.fateName == continuationFate.fateName then\r\n            fateTable.hasContinuation = true\r\n            fateTable.continuationIsBoss = continuationFate.continuationIsBoss\r\n        end\r\n    end\r\n\r\n    return fateTable\r\nend\r\n\r\n--Gets the Location of the next Fate. Prioritizes anything with progress above 0, then by shortest time left\r\nfunction SelectNextFate()\r\n    local fates = GetActiveFates()\r\n    if fates == nil then\r\n        return\r\n    end\r\n\r\n    local nextFate = nil\r\n    for i = 0, fates.Count-1 do\r\n        local tempFate = BuildFateTable(fates[i])\r\n        LogInfo(\"[FATE] Considering fate #\"..tempFate.fateId..\" \"..tempFate.fateName)\r\n        LogInfo(\"[FATE] Time left on fate #:\"..tempFate.fateId..\": \"..math.floor(tempFate.timeLeft//60)..\"min, \"..math.floor(tempFate.timeLeft%60)..\"s\")\r\n        \r\n        if not (tempFate.x == 0 and tempFate.z == 0) then -- sometimes game doesn't send the correct coords\r\n            if not tempFate.isBlacklistedFate then -- check fate is not blacklisted for any reason\r\n                if tempFate.isBossFate then\r\n                    if (tempFate.isSpecialFate and tempFate.progress >= CompletionToJoinSpecialBossFates) or\r\n                        (not tempFate.isSpecialFate and tempFate.progress >= CompletionToJoinBossFate) then\r\n                        nextFate = SelectNextFateHelper(tempFate, nextFate)\r\n                    else\r\n                        LogInfo(\"[FATE] Skipping fate #\"..tempFate.fateId..\" \"..tempFate.fateName..\" due to boss fate with not enough progress.\")\r\n                    end\r\n                elseif (tempFate.isOtherNpcFate or tempFate.isCollectionsFate) and tempFate.startTime == 0 then\r\n                    if nextFate == nil then -- pick this if there's nothing else\r\n                        nextFate = tempFate\r\n                    elseif tempFate.isBonusFate then\r\n                        nextFate = SelectNextFateHelper(tempFate, nextFate)\r\n                    elseif nextFate.startTime == 0 then -- both fates are unopened npc fates\r\n                        nextFate = SelectNextFateHelper(tempFate, nextFate)\r\n                    end\r\n                elseif tempFate.duration ~= 0 then -- else is normal fate. avoid unlisted talk to npc fates\r\n                    nextFate = SelectNextFateHelper(tempFate, nextFate)\r\n                end\r\n                LogInfo(\"[FATE] Finished considering fate #\"..tempFate.fateId..\" \"..tempFate.fateName)\r\n            else\r\n                LogInfo(\"[FATE] Skipping fate #\"..tempFate.fateId..\" \"..tempFate.fateName..\" due to blacklist.\")\r\n            end\r\n        end\r\n    end\r\n\r\n    LogInfo(\"[FATE] Finished considering all fates\")\r\n\r\n    if nextFate == nil then\r\n        LogInfo(\"[FATE] 没有找到合适的FATE\")\r\n        if Echo == 2 then\r\n            yield(\"/echo [FATE] 没有找到合适的FATE\")\r\n        end\r\n    else\r\n        LogInfo(\"[FATE] Final selected fate #\"..nextFate.fateId..\" \"..nextFate.fateName)\r\n    end\r\n    yield(\"/wait 1\")\r\n\r\n    return nextFate\r\nend\r\n\r\nfunction RandomAdjustCoordinates(x, y, z, maxDistance)\r\n    local angle = math.random() * 2 * math.pi\r\n    local x_adjust = maxDistance * math.random()\r\n    local z_adjust = maxDistance * math.random()\r\n\r\n    local randomX = x + (x_adjust * math.cos(angle))\r\n    local randomY = y + maxDistance\r\n    local randomZ = z + (z_adjust * math.sin(angle))\r\n\r\n    return randomX, randomY, randomZ\r\nend\r\n\r\n--#endregion Fate Functions\r\n\r\n--#region Movement Functions\r\n\r\nfunction GetClosestAetheryte(x, y, z, teleportTimePenalty)\r\n    local closestAetheryte = nil\r\n    local closestTravelDistance = math.maxinteger\r\n    for _, aetheryte in ipairs(SelectedZone.aetheryteList) do\r\n        local distanceAetheryteToFate = DistanceBetween(aetheryte.x, aetheryte.y, aetheryte.z, x, y, z)\r\n        local comparisonDistance = distanceAetheryteToFate + teleportTimePenalty\r\n        LogInfo(\"[FATE] Distance via \"..aetheryte.aetheryteName..\" adjusted for tp penalty is \"..tostring(comparisonDistance))\r\n\r\n        if comparisonDistance < closestTravelDistance then\r\n            LogInfo(\"[FATE] Updating closest aetheryte to \"..aetheryte.aetheryteName)\r\n            closestTravelDistance = comparisonDistance\r\n            closestAetheryte = aetheryte\r\n        end\r\n    end\r\n\r\n    return closestAetheryte\r\nend\r\n\r\nfunction GetClosestAetheryteToPoint(x, y, z, teleportTimePenalty)\r\n    local directFlightDistance = GetDistanceToPoint(x, y, z)\r\n    LogInfo(\"[FATE] Direct flight distance is: \"..directFlightDistance)\r\n    local closestAetheryte = GetClosestAetheryte(x, y, z, teleportTimePenalty)\r\n    if closestAetheryte ~= nil then\r\n        local closestAetheryteDistance = DistanceBetween(x, y, z, closestAetheryte.x, closestAetheryte.y, closestAetheryte.z) + teleportTimePenalty\r\n\r\n        if closestAetheryteDistance < directFlightDistance then\r\n            return closestAetheryte\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\nfunction TeleportToClosestAetheryteToFate(nextFate)\r\n    local aetheryteForClosestFate = GetClosestAetheryteToPoint(nextFate.x, nextFate.y, nextFate.z, 200)\r\n    if aetheryteForClosestFate ~=nil then\r\n        TeleportTo(aetheryteForClosestFate.aetheryteName)\r\n        return true\r\n    end\r\n    return false\r\nend\r\n\r\nfunction AcceptTeleportOfferLocation(destinationAetheryte)\r\n    if IsAddonVisible(\"_NotificationTelepo\") then\r\n        local location = GetNodeText(\"_NotificationTelepo\", 3, 4)\r\n        yield(\"/callback _Notification true 0 16 \"..location)\r\n        yield(\"/wait 1\")\r\n    end\r\n\r\n    if IsAddonVisible(\"SelectYesno\") then\r\n        local teleportOfferMessage = GetNodeText(\"SelectYesno\", 15)\r\n        if type(teleportOfferMessage) == \"string\" then\r\n            local teleportOfferLocation = teleportOfferMessage:match(\"Accept Teleport to (.+)%?\")\r\n            if teleportOfferLocation ~= nil then\r\n                if string.lower(teleportOfferLocation) == string.lower(destinationAetheryte) then\r\n                    yield(\"/callback SelectYesno true 0\") -- accept teleport\r\n                    return\r\n                else\r\n                    LogInfo(\"Offer for \"..teleportOfferLocation..\" and destination \"..destinationAetheryte..\" are not the same. Declining teleport.\")\r\n                end\r\n            end\r\n            yield(\"/callback SelectYesno true 2\") -- decline teleport\r\n            return\r\n        end\r\n    end\r\nend\r\n\r\nfunction AcceptNPCFateOrRejectOtherYesno()\r\n    if IsAddonVisible(\"SelectYesno\") then\r\n        local dialogBox = GetNodeText(\"SelectYesno\", 15)\r\n        if type(dialogBox) == \"string\" and dialogBox:find(\"这个FATE的推荐等级是\") then\r\n            yield(\"/callback SelectYesno true 1\") --accept fate\r\n        else\r\n            yield(\"/callback SelectYesno true 0\") --decline all other boxes\r\n        end\r\n    end\r\nend\r\n\r\nfunction TeleportTo(aetheryteName)\r\n    AcceptTeleportOfferLocation(aetheryteName)\r\n\r\n    while EorzeaTimeToUnixTime(GetCurrentEorzeaTimestamp()) - LastTeleportTimeStamp < 5 do\r\n        LogInfo(\"[FATE] Too soon since last teleport. Waiting...\")\r\n        yield(\"/wait 5\")\r\n    end\r\n\r\n    yield(\"/tp \"..aetheryteName)\r\n    yield(\"/wait 1\") -- wait for casting to begin\r\n    while GetCharacterCondition(CharacterCondition.casting) do\r\n        LogInfo(\"[FATE] Casting teleport...\")\r\n        yield(\"/wait 1\")\r\n    end\r\n    yield(\"/wait 1\") -- wait for that microsecond in between the cast finishing and the transition beginning\r\n    while GetCharacterCondition(CharacterCondition.betweenAreas) do\r\n        LogInfo(\"[FATE] Teleporting...\")\r\n        yield(\"/wait 1\")\r\n    end\r\n    yield(\"/wait 1\")\r\n    LastTeleportTimeStamp = EorzeaTimeToUnixTime(GetCurrentEorzeaTimestamp())\r\nend\r\n\r\nfunction ChangeInstance()\r\n    if SuccessiveInstanceChanges >= 3 then\r\n        yield(\"/wait 1\")\r\n        SuccessiveInstanceChanges = 0\r\n        return\r\n    end\r\n\r\n    yield(\"/target 以太之光\") -- search for nearby aetheryte\r\n    if not HasTarget() or GetTargetName() ~= \"以太之光\" then -- if no aetheryte within targeting range, teleport to it\r\n        LogInfo(\"[FATE] Aetheryte not within targetable range\")\r\n        local closestAetheryte = nil\r\n        local closestAetheryteDistance = math.maxinteger\r\n        for i, aetheryte in ipairs(SelectedZone.aetheryteList) do\r\n            -- GetDistanceToPoint is implemented with raw distance instead of distance squared\r\n            local distanceToAetheryte = GetDistanceToPoint(aetheryte.x, aetheryte.y, aetheryte.z)\r\n            if distanceToAetheryte < closestAetheryteDistance then\r\n                closestAetheryte = aetheryte\r\n                closestAetheryteDistance = distanceToAetheryte\r\n            end\r\n        end\r\n        TeleportTo(closestAetheryte.aetheryteName)\r\n        return\r\n    end\r\n\r\n    if WaitingForCollectionsFate ~= 0 then\r\n        yield(\"/wait 10\")\r\n        return\r\n    end\r\n\r\n    if GetDistanceToTarget() > 10 then\r\n        LogInfo(\"[FATE] Targeting aetheryte, but greater than 10 distance\")\r\n        if GetDistanceToTarget() > 20 and not GetCharacterCondition(CharacterCondition.flying) then\r\n            State = CharacterState.mounting\r\n            LogInfo(\"[FATE] State Change: Mounting\")\r\n        elseif not (PathfindInProgress() or PathIsRunning()) then\r\n            PathfindAndMoveTo(GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos(), GetCharacterCondition(CharacterCondition.flying))\r\n        end\r\n        return\r\n    end\r\n\r\n    LogInfo(\"[FATE] Within 10 distance\")\r\n    if PathfindInProgress() or PathIsRunning() then\r\n        yield(\"/vnav stop\")\r\n        return\r\n    end\r\n\r\n    if GetCharacterCondition(CharacterCondition.mounted) then\r\n        State = CharacterState.changeInstanceDismount\r\n        LogInfo(\"[FATE] State Change: ChangeInstanceDismount\")\r\n        return\r\n    end\r\n\r\n    LogInfo(\"[FATE] Transferring to next instance\")\r\n    local nextInstance = (GetZoneInstance() % 3) + 1\r\n    yield(\"/li \"..nextInstance) -- start instance transfer\r\n    yield(\"/wait 1\") -- wait for instance transfer to register\r\n    State = CharacterState.ready\r\n    SuccessiveInstanceChanges = SuccessiveInstanceChanges + 1\r\n    LogInfo(\"[FATE] State Change: Ready\")\r\nend\r\n\r\nfunction WaitForContinuation()\r\n    if IsInFate() then\r\n        LogInfo(\"WaitForContinuation IsInFate\")\r\n        local nextFateId = GetNearestFate()\r\n        if nextFateId ~= CurrentFate.fateId then\r\n            CurrentFate = BuildFateTable(nextFateId)\r\n            State = CharacterState.doFate\r\n            LogInfo(\"State Change: DoFate\")\r\n        end\r\n    elseif os.clock() - LastFateEndTime > 30 then\r\n        LogInfo(\"WaitForContinuation Abort\")\r\n        LogInfo(\"Over 30s since end of last fate. Giving up on part 2.\")\r\n        State = CharacterState.ready\r\n        LogInfo(\"State Change: Ready\")\r\n    else\r\n        LogInfo(\"WaitForContinuation Else\")\r\n        if BossFatesClass ~= nil then\r\n            local currentClass = GetClassJobId()\r\n            LogInfo(\"WaitForContinuation \"..CurrentFate.fateName)\r\n            if not IsPlayerOccupied() then\r\n                if CurrentFate.continuationIsBoss and currentClass ~= BossFatesClass.classId then\r\n                    LogInfo(\"WaitForContinuation SwitchToBoss\")\r\n                    yield(\"/gs change \"..BossFatesClass.className)\r\n                elseif not CurrentFate.continuationIsBoss and currentClass ~= MainClass.classId then\r\n                    LogInfo(\"WaitForContinuation SwitchToMain\")\r\n                    yield(\"/gs change \"..MainClass.className)\r\n                end\r\n            end\r\n        end\r\n\r\n        yield(\"/wait 1\")\r\n    end\r\nend\r\n\r\nfunction FlyBackToAetheryte()\r\n    NextFate = SelectNextFate()\r\n    if NextFate ~= nil then\r\n        yield(\"/vnav stop\")\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        return\r\n    end\r\n\r\n    yield(\"/target 以太之光\")\r\n\r\n    if HasTarget() and GetTargetName() == \"以太之光\" and GetDistanceToTarget() <= 20 then\r\n        if PathfindInProgress() or PathIsRunning() then\r\n            yield(\"/vnav stop\")\r\n        end\r\n\r\n        if GetCharacterCondition(CharacterCondition.flying) then\r\n            yield(\"/mount\") -- land but don't actually dismount, to avoid running chocobo timer\r\n        elseif GetCharacterCondition(CharacterCondition.mounted) then\r\n            State = CharacterState.ready\r\n            LogInfo(\"[FATE] State Change: Ready\")\r\n        else\r\n            if MountToUse == \"随机飞行坐骑\" then\r\n                yield(\"/gaction 随机飞行坐骑\")\r\n            else\r\n                yield('/mount \"' .. MountToUse)\r\n            end\r\n        end\r\n        return\r\n    end\r\n\r\n    if not GetCharacterCondition(CharacterCondition.mounted) then\r\n        State = CharacterState.mounting\r\n        LogInfo(\"[FATE] State Change: Mounting\")\r\n        return\r\n    end\r\n    \r\n    if not (PathfindInProgress() or PathIsRunning()) then\r\n        local closestAetheryte = GetClosestAetheryte(GetPlayerRawXPos(), GetPlayerRawYPos(), GetPlayerRawZPos(), 0)\r\n        if closestAetheryte ~= nil then\r\n            PathfindAndMoveTo(closestAetheryte.x, closestAetheryte.y, closestAetheryte.z, GetCharacterCondition(CharacterCondition.flying))\r\n        end\r\n    end\r\nend\r\n\r\nfunction Mount()\r\n    if GetCharacterCondition(CharacterCondition.flying) then\r\n        State = CharacterState.moveToFate\r\n        LogInfo(\"[FATE] State Change: MoveToFate\")\r\n    elseif GetCharacterCondition(CharacterCondition.mounted) then\r\n        yield(\"/gaction 跳跃\")\r\n    else\r\n        if MountToUse == \"随机飞行坐骑\" then\r\n            yield(\"/gaction 随机飞行坐骑\")\r\n        else\r\n            yield('/mount \"' .. MountToUse)\r\n        end\r\n    end\r\n    yield(\"/wait 0.1\")\r\nend\r\n\r\nfunction Dismount()\r\n    if PathIsRunning() or PathfindInProgress() then\r\n        yield(\"/vnav stop\")\r\n        return\r\n    end\r\n\r\n    if GetCharacterCondition(CharacterCondition.flying) then\r\n        yield(\"/mount\")\r\n\r\n        local now = os.clock()\r\n        if now - LastStuckCheckTime > 1 then\r\n            local x = GetPlayerRawXPos()\r\n            local y = GetPlayerRawYPos()\r\n            local z = GetPlayerRawZPos()\r\n\r\n            if GetCharacterCondition(CharacterCondition.flying) and GetDistanceToPoint(LastStuckCheckPosition.x, LastStuckCheckPosition.y, LastStuckCheckPosition.z) < 2 then\r\n                LogInfo(\"[FATE] Unable to dismount here. Moving to another spot.\")\r\n                local random_x, random_y, random_z = RandomAdjustCoordinates(x, y, z, 10)\r\n                local nearestPointX = QueryMeshNearestPointX(random_x, random_y, random_z, 100, 100)\r\n                local nearestPointY = QueryMeshNearestPointY(random_x, random_y, random_z, 100, 100)\r\n                local nearestPointZ = QueryMeshNearestPointZ(random_x, random_y, random_z, 100, 100)\r\n                if nearestPointX ~= nil and nearestPointY ~= nil and nearestPointZ ~= nil then\r\n                    PathfindAndMoveTo(nearestPointX, nearestPointY, nearestPointZ, GetCharacterCondition(CharacterCondition.flying))\r\n                    yield(\"/wait 1\")\r\n                end\r\n            end\r\n\r\n            LastStuckCheckTime = now\r\n            LastStuckCheckPosition = {x=x, y=y, z=z}\r\n        end\r\n    elseif GetCharacterCondition(CharacterCondition.mounted) then\r\n        yield(\"/mount\")\r\n    end\r\nend\r\n\r\nfunction MiddleOfFateDismount()\r\n    if not IsFateActive(CurrentFate.fateId) then\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        return\r\n    end\r\n\r\n    if HasTarget() then\r\n        if DistanceBetween(GetPlayerRawXPos(), 0, GetPlayerRawZPos(), GetTargetRawXPos(), 0, GetTargetRawZPos()) > (MaxDistance + GetTargetHitboxRadius()) then\r\n            if not (PathfindInProgress() or PathIsRunning()) then\r\n                LogInfo(\"[FATE DEBUG] MiddleOfFateDismount PathfindAndMoveTo\")\r\n                PathfindAndMoveTo(GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos(), GetCharacterCondition(CharacterCondition.flying))\r\n            end\r\n        else\r\n            if GetCharacterCondition(CharacterCondition.mounted) then\r\n                LogInfo(\"[FATE DEBUG] MiddleOfFateDismount Dismount()\")\r\n                Dismount()\r\n            else\r\n                State = CharacterState.doFate\r\n                LogInfo(\"[FATE] State Change: DoFate\")\r\n            end\r\n        end\r\n    else\r\n        TargetClosestFateEnemy()\r\n    end\r\nend\r\n\r\nfunction NPCDismount()\r\n    if GetCharacterCondition(CharacterCondition.mounted) then\r\n        Dismount()\r\n    else\r\n        State = CharacterState.interactWithNpc\r\n        LogInfo(\"[FATE] State Change: InteractWithFateNpc\")\r\n    end\r\nend\r\n\r\nfunction ChangeInstanceDismount()\r\n    if GetCharacterCondition(CharacterCondition.mounted) then\r\n        Dismount()\r\n    else\r\n        State = CharacterState.changingInstances\r\n        LogInfo(\"[FATE] State Change: ChangingInstance\")\r\n    end\r\nend\r\n\r\n--Paths to the Fate NPC Starter\r\nfunction MoveToNPC()\r\n    yield(\"/target \"..CurrentFate.npcName)\r\n    if HasTarget() and GetTargetName()==CurrentFate.npcName then\r\n        if GetDistanceToTarget() > 5 then\r\n            PathfindAndMoveTo(GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos(), GetCharacterCondition(CharacterCondition.flying))\r\n        else\r\n            yield(\"/vnav stop\")\r\n        end\r\n        return\r\n    end\r\nend\r\n\r\n--Paths to the Fate. CurrentFate is set here to allow MovetoFate to change its mind,\r\n--so CurrentFate is possibly nil.\r\nfunction MoveToFate()\r\n    SuccessiveInstanceChanges = 0\r\n\r\n    if not IsPlayerAvailable() then\r\n        yield(\"/echo [FATE] 玩家不可用\")\r\n        return\r\n    end\r\n\r\n    if CurrentFate~=nil and not IsFateActive(CurrentFate.fateId) then\r\n        LogInfo(\"[FATE] Next Fate is dead, selecting new Fate.\")\r\n        yield(\"/vnav stop\")\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        return\r\n    end\r\n\r\n    NextFate = SelectNextFate()\r\n    if NextFate == nil then -- when moving to next fate, CurrentFate == NextFate\r\n        yield(\"/vnav stop\")\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        return\r\n    elseif CurrentFate == nil or NextFate.fateId ~= CurrentFate.fateId then\r\n        yield(\"/vnav stop\")\r\n        CurrentFate = NextFate\r\n        if HasPlugin(\"ChatCoordinates\") then\r\n            SetMapFlag(SelectedZone.zoneId, CurrentFate.x, CurrentFate.y, CurrentFate.z)\r\n            yield(\"/\"..ChatCommandType..\" <flag>\")\r\n        end\r\n        return\r\n    end\r\n\r\n    -- change to secondary class if it's a boss fate\r\n    if BossFatesClass ~= nil then\r\n        local currentClass = GetClassJobId()\r\n        if CurrentFate.isBossFate and currentClass ~= BossFatesClass.classId then\r\n            yield(\"/gs change \"..BossFatesClass.className)\r\n            return\r\n        elseif not CurrentFate.isBossFate and currentClass ~= MainClass.classId then\r\n            yield(\"/gs change \"..MainClass.className)\r\n            return\r\n        end\r\n    end\r\n\r\n    -- upon approaching fate, pick a target and switch to pathing towards target\r\n    if HasTarget() then\r\n        if GetTargetName() == CurrentFate.npcName then\r\n            yield(\"/vnav stop\")\r\n            State = CharacterState.interactWithNpc\r\n        elseif GetTargetFateID() == CurrentFate.fateId then\r\n            yield(\"/vnav stop\")\r\n            State = CharacterState.middleOfFateDismount\r\n            LogInfo(\"[FATE] State Change: MiddleOfFateDismount\")\r\n        else\r\n            ClearTarget()\r\n        end\r\n        return\r\n    elseif GetDistanceToPoint(CurrentFate.x, CurrentFate.y, CurrentFate.z) < 40 then\r\n        if (CurrentFate.isOtherNpcFate or CurrentFate.isCollectionsFate) and not IsInFate() then\r\n            yield(\"/target \"..CurrentFate.npcName)\r\n        else\r\n            TargetClosestFateEnemy()\r\n        end\r\n\r\n        if HasTarget() and GetDistanceToTarget() < 30 then\r\n            yield(\"/vnav stop\")\r\n        end\r\n        return\r\n    end\r\n\r\n    -- if not PathIsRunning() and IsInFate() and GetFateProgress(CurrentFate.fateId) < 100 then\r\n    --     State = CharacterState.doFate\r\n    --     LogInfo(\"[FATE] State Change: DoFate\")\r\n    --     return\r\n    -- end\r\n\r\n    -- check for stuck\r\n    if (PathIsRunning() or PathfindInProgress()) and GetCharacterCondition(CharacterCondition.mounted) then\r\n        local now = os.clock()\r\n        if now - LastStuckCheckTime > 10 then\r\n            local x = GetPlayerRawXPos()\r\n            local y = GetPlayerRawYPos()\r\n            local z = GetPlayerRawZPos()\r\n\r\n            if GetDistanceToPoint(LastStuckCheckPosition.x, LastStuckCheckPosition.y, LastStuckCheckPosition.z) < 3 then\r\n                yield(\"/vnav stop\")\r\n                yield(\"/wait 1\")\r\n                LogInfo(\"[FATE] Antistuck\")\r\n                PathfindAndMoveTo(x, y + 10, z, GetCharacterCondition(CharacterCondition.flying)) -- fly up 10 then try again\r\n            end\r\n            \r\n            LastStuckCheckTime = now\r\n            LastStuckCheckPosition = {x=x, y=y, z=z}\r\n        end\r\n        return\r\n    end\r\n\r\n    -- if GetDistanceToPoint(CurrentFate.x, CurrentFate.y, CurrentFate.z) < GetFateRadius(CurrentFate.fateId) + 20 then\r\n    --     if (IsOtherNpcFate(CurrentFate.fateName) or IsCollectionsFate(CurrentFate.fateName)) and CurrentFate.startTime == 0 then\r\n    --         State = CharacterState.interactWithNpc\r\n    --         LogInfo(\"[FATE] State Change: InteractWithFateNpc\")\r\n    --         return\r\n    --     else\r\n    --         if not PathIsRunning() and GetFateProgress(CurrentFate.fateId) < 100 then\r\n    --             State = CharacterState.doFate\r\n    --             LogInfo(\"[FATE] State Change: DoFate\")\r\n    --             return\r\n    --         end\r\n    --     end\r\n    --     return\r\n    -- end\r\n\r\n    if not GetCharacterCondition(CharacterCondition.flying) then\r\n        State = CharacterState.mounting\r\n        LogInfo(\"[FATE] State Change: Mounting\")\r\n        return\r\n    end\r\n\r\n    LogInfo(\"[FATE] 移动到FATE #\"..CurrentFate.fateId..\" \"..CurrentFate.fateName)\r\n    if Echo == 2 then\r\n        yield(\"/echo [FATE] 移动到FATE #\"..CurrentFate.fateId..\" \"..CurrentFate.fateName)\r\n    end\r\n\r\n    local nearestLandX, nearestLandY, nearestLandZ = CurrentFate.x, CurrentFate.y, CurrentFate.z\r\n    if not (CurrentFate.isCollectionsFate or CurrentFate.isOtherNpcFate) then\r\n        nearestLandX, nearestLandY, nearestLandZ = RandomAdjustCoordinates(CurrentFate.x, CurrentFate.y, CurrentFate.z, 10)\r\n    end\r\n\r\n    if TeleportToClosestAetheryteToFate(CurrentFate) then\r\n        return\r\n    end\r\n\r\n    PathfindAndMoveTo(nearestLandX, nearestLandY + 10, nearestLandZ, HasFlightUnlocked(SelectedZone.zoneId))\r\nend\r\n\r\nfunction InteractWithFateNpc()\r\n    \r\n\r\n    if IsInFate() or GetFateStartTimeEpoch(CurrentFate.fateId) > 0 then\r\n        State = CharacterState.doFate\r\n        LogInfo(\"[FATE] State Change: DoFate\")\r\n        yield(\"/wait 1\") -- give the fate a second to register before dofate and lsync\r\n    elseif not IsFateActive(CurrentFate.fateId) then\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n    elseif PathfindInProgress() or PathIsRunning() then\r\n        if HasTarget() and GetTargetName() == CurrentFate.npcName and GetDistanceToTarget() < 5 then\r\n            yield(\"/vnav stop\")\r\n        end\r\n        return\r\n    else\r\n        -- if target is already selected earlier during pathing, avoids having to target and move again\r\n        if (not HasTarget() or GetTargetName()~=CurrentFate.npcName) then\r\n            yield(\"/target \"..CurrentFate.npcName)\r\n            return\r\n        end\r\n\r\n        if GetDistanceToPoint(GetTargetRawXPos(), GetPlayerRawYPos(), GetTargetRawZPos()) > 5 then\r\n            MoveToNPC()\r\n            return\r\n        end\r\n\r\n        if GetCharacterCondition(CharacterCondition.mounted) then\r\n            State = CharacterState.npcDismount\r\n            LogInfo(\"[FATE] State Change: NPCDismount\")\r\n            return\r\n        end\r\n\r\n        if IsAddonVisible(\"SelectYesno\") then\r\n            AcceptNPCFateOrRejectOtherYesno()\r\n        elseif not GetCharacterCondition(CharacterCondition.occupied) then\r\n            yield(\"/interact\")\r\n        end\r\n    end\r\nend\r\n\r\nfunction CollectionsFateTurnIn()\r\n    AcceptNPCFateOrRejectOtherYesno()\r\n\r\n    if CurrentFate ~= nil and not IsFateActive(CurrentFate.fateId) then\r\n        CurrentFate = nil\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        return\r\n\r\n    end\r\n\r\n    if GetDistanceToPoint(GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos()) > 5 then\r\n        if not (PathfindInProgress() or PathIsRunning()) then\r\n            MoveToNPC()\r\n        end\r\n    else\r\n        if GetItemCount(GetFateEventItem(CurrentFate.fateId)) >= 7 then\r\n            GotCollectionsFullCredit = true\r\n        end\r\n\r\n        yield(\"/vnav stop\")\r\n        yield(\"/interact\")\r\n        yield(\"/wait 3\")\r\n\r\n        if GetFateProgress(CurrentFate.fateId) < 100 then\r\n\r\n            State = CharacterState.doFate\r\n            LogInfo(\"[FATE] State Change: DoFate\")\r\n        else\r\n            if GotCollectionsFullCredit then\r\n                State = CharacterState.unexpectedCombat\r\n                LogInfo(\"[FATE] State Change: UnexpectedCombat\")\r\n            end\r\n        end\r\n\r\n        if CurrentFate ~=nil and CurrentFate.npcName ~=nil and GetTargetName() == CurrentFate.npcName then\r\n            LogInfo(\"[FATE] Attempting to clear target.\")\r\n            ClearTarget()\r\n            yield(\"/wait 1\")\r\n        end\r\n    end\r\nend\r\n\r\n--#endregion\r\n\r\n--#region Combat Functions\r\n\r\nfunction GetClassJobTableFromId(jobId)\r\n    if jobId == nil then\r\n        LogInfo(\"[FATE] JobId is nil\")\r\n        return nil\r\n    end\r\n    for _, classJob in pairs(ClassList) do\r\n        if classJob.classId == jobId then\r\n            return classJob\r\n        end\r\n    end\r\n    LogInfo(\"[FATE] Cannot recognize combat job.\")\r\n    return nil\r\nend\r\n\r\nfunction GetClassJobTableFromAbbrev(classString)\r\n    if classString == \"\" then\r\n        LogInfo(\"[FATE] No class set\")\r\n        return nil\r\n    end\r\n    for classJobAbbrev, classJob in pairs(ClassList) do\r\n        if classJobAbbrev == string.lower(classString) then\r\n            return classJob\r\n        end\r\n    end\r\n    LogInfo(\"[FATE] Cannot recognize combat job.\")\r\n    return nil\r\nend\r\n\r\nfunction SummonChocobo()\r\n    if GetCharacterCondition(CharacterCondition.mounted) then\r\n        Dismount()\r\n        return\r\n    end\r\n\r\n    if ShouldSummonChocobo and GetBuddyTimeRemaining() == 0 then\r\n        if GetItemCount(4868) > 0 then\r\n            yield(\"/item 基萨尔野菜\")\r\n        elseif ShouldAutoBuyGysahlGreens then\r\n            State = CharacterState.autoBuyGysahlGreens\r\n            LogInfo(\"[State] State Change: AutoBuyGysahlGreens\")\r\n            return\r\n        end\r\n    end\r\n    State = CharacterState.ready\r\n    LogInfo(\"[State] State Change: Ready\")\r\nend\r\n\r\nfunction AutoBuyGysahlGreens()\r\n    if GetItemCount(4868) > 0 then -- don't need to buy\r\n        if IsAddonVisible(\"Shop\") then\r\n            yield(\"/callback Shop true -1\")\r\n        elseif IsInZone(SelectedZone.zoneId) then\r\n            yield(\"/item 基萨尔野菜\")\r\n        else\r\n            State = CharacterState.ready\r\n            LogInfo(\"State Change: ready\")\r\n        end\r\n        return\r\n    else\r\n        if not IsInZone(129) then\r\n            yield(\"/vnav stop\")\r\n            TeleportTo(\"利姆萨·罗敏萨下层甲板\")\r\n            return\r\n        else\r\n            local gysahlGreensVendor = { x=-62.1, y=18.0, z=9.4, npcName=\"布鲁盖尔商会 班戈·赞戈\" }\r\n            if GetDistanceToPoint(gysahlGreensVendor.x, gysahlGreensVendor.y, gysahlGreensVendor.z) > 5 then\r\n                if not (PathIsRunning() or PathfindInProgress()) then\r\n                    PathfindAndMoveTo(gysahlGreensVendor.x, gysahlGreensVendor.y, gysahlGreensVendor.z)\r\n                end\r\n            elseif HasTarget() and GetTargetName() == gysahlGreensVendor.npcName then\r\n                yield(\"/vnav stop\")\r\n                yield(\"/echo 有目标\")\r\n                if IsAddonVisible(\"SelectYesno\") then\r\n                    yield(\"/callback SelectYesno true 0\")\r\n                elseif IsAddonVisible(\"SelectIconString\") then\r\n                    yield(\"/callback SelectIconString true 0\")\r\n                    return\r\n                elseif IsAddonVisible(\"Shop\") then\r\n                    yield(\"/callback Shop true 0 2 99\")\r\n                    return\r\n                elseif not GetCharacterCondition(CharacterCondition.occupied) then\r\n                    yield(\"/interact\")\r\n                    yield(\"/wait 1\")\r\n                    return\r\n                end\r\n            else\r\n                yield(\"/vnav stop\")\r\n                yield(\"/target \"..gysahlGreensVendor.npcName)\r\n            end\r\n        end\r\nend\r\nend\r\n\r\n--Paths to the enemy (for Meele)\r\nfunction EnemyPathing()\r\n    while HasTarget() and GetDistanceToTarget() > (GetTargetHitboxRadius() + MaxDistance) do\r\n        local enemy_x = GetTargetRawXPos()\r\n        local enemy_y = GetTargetRawYPos()\r\n        local enemy_z = GetTargetRawZPos()\r\n        if PathIsRunning() == false then\r\n            PathfindAndMoveTo(enemy_x, enemy_y, enemy_z, GetCharacterCondition(CharacterCondition.flying))\r\n        end\r\n        yield(\"/wait 0.1\")\r\n    end\r\nend\r\n\r\n-- function AvoidEnemiesWhileFlying()\r\n--     --If you get attacked it flies up\r\n--     if GetCharacterCondition(CharacterCondition.inCombat) then\r\n--         Name = GetCharacterName()\r\n--         PlocX = GetPlayerRawXPos(Name)\r\n--         PlocY = GetPlayerRawYPos(Name)+40\r\n--         PlocZ = GetPlayerRawZPos(Name)\r\n--         yield(\"/gaction jump\")\r\n--         yield(\"/wait 0.5\")\r\n--         yield(\"/vnavmesh stop\")\r\n--         yield(\"/wait 1\")\r\n--         PathfindAndMoveTo(PlocX, PlocY, PlocZ, true)\r\n--         PathStop()\r\n--         yield(\"/wait 2\")\r\n--     end\r\n-- end\r\n\r\n\r\n\r\nfunction SetMaxDistance()\r\n    MaxDistance = MeleeDist --default to melee distance\r\n    --ranged and casters have a further max distance so not always running all way up to target\r\n    local currentClass = GetClassJobTableFromId(GetClassJobId())\r\n    if not currentClass.isMelee then\r\n        MaxDistance = RangedDist\r\n    end\r\nend\r\n\r\n\r\n\r\n\r\nfunction HandleUnexpectedCombat()\r\n\r\n\r\n    if IsInFate() and GetFateProgress(GetNearestFate()) < 100 then\r\n        CurrentFate = BuildFateTable(GetNearestFate())\r\n        State = CharacterState.doFate\r\n        LogInfo(\"[FATE] State Change: DoFate\")\r\n        return\r\n    elseif not GetCharacterCondition(CharacterCondition.inCombat) then\r\n        yield(\"/vnav stop\")\r\n        ClearTarget()\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        local randomWait = math.floor(math.random()*3 * 1000)/1000 -- truncated to 3 decimal places\r\n        yield(\"/wait \"..randomWait)\r\n        return\r\n    end\r\n\r\n    if GetCharacterCondition(CharacterCondition.flying) then\r\n        if not (PathfindInProgress() or PathIsRunning()) then\r\n            PathfindAndMoveTo(GetPlayerRawXPos(), GetPlayerRawYPos() + 10, GetPlayerRawZPos(), true)\r\n        end\r\n        yield(\"/wait 10\")\r\n        return\r\n    elseif GetCharacterCondition(CharacterCondition.mounted) then\r\n        yield(\"/gaction jump\")\r\n        return\r\n    end\r\n\r\n    -- targets whatever is trying to kill you\r\n    if not HasTarget() then\r\n        yield(\"/battletarget\")\r\n    end\r\n\r\n    --Paths to enemys when Bossmod is disabled\r\n    if not UseBM then\r\n        EnemyPathing()\r\n    end\r\n\r\n    -- pathfind closer if enemies are too far\r\n    if HasTarget() then\r\n        if GetDistanceToTarget() > (MaxDistance + GetTargetHitboxRadius()) then\r\n            if not (PathfindInProgress() or PathIsRunning()) then\r\n                PathfindAndMoveTo(GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos(), GetCharacterCondition(CharacterCondition.flying))\r\n            end\r\n        else\r\n            if PathfindInProgress() or PathIsRunning() then\r\n                yield(\"/vnav stop\")\r\n            elseif not GetCharacterCondition(CharacterCondition.inCombat) then\r\n                --inch closer 3 seconds\r\n                PathfindAndMoveTo(GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos(), GetCharacterCondition(CharacterCondition.flying))\r\n                yield(\"/wait 3\")\r\n            end\r\n        end\r\n    end\r\n    yield(\"/wait 0.5\")\r\nend\r\n\r\nfunction DoFate()\r\n    local currentClass = GetClassJobId()\r\n    -- switch classes (mostly for continutation fates that pop you directly into the next one)\r\n    if CurrentFate.isBossFate and BossFatesClass ~= nil and currentClass ~= BossFatesClass.classId and not IsPlayerOccupied() then\r\n        yield(\"/gs change \"..BossFatesClass.className)\r\n        yield(\"/wait 1\")\r\n        return\r\n    elseif not CurrentFate.isBossFate and BossFatesClass ~= nil and currentClass ~= MainClass.classId and not IsPlayerOccupied() then\r\n\r\n        yield(\"/gs change \"..MainClass.className)\r\n        yield(\"/wait 1\")\r\n        return\r\n    elseif IsInFate() and (GetFateMaxLevel(CurrentFate.fateId) < GetLevel()) and not IsLevelSynced() then\r\n        yield(\"/lsync\")\r\n        yield(\"/wait 0.5\") -- give it a second to register\r\n    elseif IsFateActive(CurrentFate.fateId) and not IsInFate() and GetFateProgress(CurrentFate.fateId) < 100 and\r\n        (GetDistanceToPoint(CurrentFate.x, CurrentFate.y, CurrentFate.z) < GetFateRadius(CurrentFate.fateId) + 10) and\r\n        not GetCharacterCondition(CharacterCondition.mounted) and not (PathIsRunning() or PathfindInProgress())\r\n    then -- got pushed out of fate. go back\r\n        yield(\"/vnav stop\")\r\n        yield(\"/wait 0.5\")\r\n        PathfindAndMoveTo(CurrentFate.x, CurrentFate.y, CurrentFate.z, GetCharacterCondition(CharacterCondition.flying))\r\n        return\r\n    elseif not IsFateActive(CurrentFate.fateId) then\r\n        yield(\"/vnav stop\")\r\n        ClearTarget()\r\n        if not LogInfo(\"[FATE] HasContintuation check\") and CurrentFate.hasContinuation then\r\n            LastFateEndTime = os.clock()\r\n            State = CharacterState.waitForContinuation\r\n            LogInfo(\"[FATE] State Change: WaitForContinuation\")\r\n        else\r\n            LogInfo(\"[FATE] No continuation for \"..CurrentFate.fateName)\r\n\r\n            State = CharacterState.ready\r\n            LogInfo(\"[FATE] State Change: Ready\")\r\n            local randomWait = math.floor(math.random()*3 * 1000)/1000 -- truncated to 3 decimal places\r\n            yield(\"/wait \"..randomWait)\r\n        end\r\n        return\r\n    elseif GetCharacterCondition(CharacterCondition.mounted) then\r\n        State = CharacterState.middleOfFateDismount\r\n        LogInfo(\"[FATE] State Change: MiddleOfFateDismount\")\r\n        return\r\n    elseif CurrentFate.isCollectionsFate then\r\n        WaitingForCollectionsFate = CurrentFate.fateId\r\n        yield(\"/wait 1\") -- needs a moment after start of fate for GetFateEventItem to populate\r\n        if GetItemCount(GetFateEventItem(CurrentFate.fateId)) >= 7 or (GotCollectionsFullCredit and GetFateProgress(CurrentFate.fateId) == 100) then\r\n            yield(\"/vnav stop\")\r\n            State = CharacterState.collectionsFateTurnIn\r\n            LogInfo(\"[FATE] State Change: CollectionsFatesTurnIn\")\r\n        end\r\n    end\r\n\r\n    LogInfo(\"DoFate->Finished transition checks\")\r\n\r\n    -- do not target fate npc during combat\r\n    if CurrentFate.npcName ~=nil and GetTargetName() == CurrentFate.npcName then\r\n        LogInfo(\"[FATE] Attempting to clear target.\")\r\n        ClearTarget()\r\n        yield(\"/wait 1\")\r\n    end\r\n\r\n\r\n\r\n    GemAnnouncementLock = false\r\n\r\n    -- switches to targeting forlorns for bonus (if present)\r\n    yield(\"/target 迷失少女\")\r\n    yield(\"/target 迷失者\")\r\n\r\n    if (GetTargetName() == \"迷失者\" or GetTargetName() == \"迷失少女\") then\r\n        if GetTargetHP() > 0 then\r\n            if not ForlornMarked then\r\n--                yield(\"/enemysign attack1\")\r\n--                yield(\"/echo 发现 迷失者! <se.3>\")\r\n\r\n                ForlornMarked = true\r\n            end\r\n        else\r\n            ClearTarget()\r\n\r\n        end\r\n    else\r\n\r\n    end\r\n\r\n    -- targets whatever is trying to kill you\r\n    if not HasTarget() then\r\n        yield(\"/battletarget\")\r\n    end\r\n\r\n    -- clears target\r\n    if GetTargetFateID() ~= CurrentFate.fateId and not IsTargetInCombat() then\r\n        ClearTarget()\r\n    end\r\n\r\n    --Paths to enemys when Bossmod is disabled\r\n    if not UseBM then\r\n        EnemyPathing()\r\n    end\r\n\r\n    -- pathfind closer if enemies are too far\r\n    if not GetCharacterCondition(CharacterCondition.inCombat) then\r\n        if HasTarget() then\r\n            if GetDistanceToTarget() <= (1 + GetTargetHitboxRadius()) then\r\n                yield(\"/vnav stop\")\r\n            elseif not (PathfindInProgress() or PathIsRunning()) then\r\n                yield(\"/wait 1\")\r\n                local x,y,z = GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos()\r\n                if x ~= 0 and z~=0 then\r\n                    PathfindAndMoveTo(x,y,z, GetCharacterCondition(CharacterCondition.flying))\r\n                end\r\n            end\r\n            return\r\n        else\r\n            TargetClosestFateEnemy()\r\n            if not HasTarget() then\r\n                PathfindAndMoveTo(CurrentFate.x, CurrentFate.y, CurrentFate.z)\r\n            end\r\n        end\r\n    else\r\n        if HasTarget() and (GetDistanceToTarget() <= (MaxDistance + GetTargetHitboxRadius())) then\r\n            yield(\"/vnav stop\")\r\n        else\r\n            if not (PathfindInProgress() or PathIsRunning()) and not UseBM then\r\n                yield(\"/wait 1\")\r\n                local x,y,z = GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos()\r\n                if x ~= 0 and z~=0 then\r\n                    PathfindAndMoveTo(x,y,z, GetCharacterCondition(CharacterCondition.flying))\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--#endregion\r\n\r\n--#region State Transition Functions\r\n\r\nfunction FoodCheck()\r\n    --food usage\r\n    if not HasStatusId(48) and Food ~= \"\" then\r\n        yield(\"/item \" .. Food)\r\n    end\r\nend\r\n\r\nfunction PotionCheck()\r\n    --pot usage\r\n    if not HasStatusId(49) and Potion ~= \"\" then\r\n        yield(\"/item \" .. Potion)\r\n    end\r\nend\r\n\r\nfunction Ready()\r\n    FoodCheck()\r\n    PotionCheck()\r\n    \r\n    CombatModsOn = false -- expect RSR to turn off after every fate\r\n    GotCollectionsFullCredit = false\r\n    ForlornMarked = false\r\n\r\n    local shouldWaitForBonusBuff = WaitIfBonusBuff and HasStatusId(1289)\r\n\r\n    NextFate = SelectNextFate()\r\n    if CurrentFate ~= nil and not IsFateActive(CurrentFate.fateId) then\r\n        CurrentFate = nil\r\n    end\r\n\r\n    if CurrentFate == nil then\r\n        LogInfo(\"[FATE] CurrentFate is nil\")\r\n    else\r\n        LogInfo(\"[FATE] CurrentFate is \"..CurrentFate.fateName)\r\n    end\r\n\r\n    if NextFate == nil then\r\n        LogInfo(\"[FATE] NextFate is nil\")\r\n    else\r\n        LogInfo(\"[FATE] NextFate is \"..NextFate.fateName)\r\n    end\r\n\r\n    if not LogInfo(\"[FATE] Ready -> IsPlayerAvailable()\") and not IsPlayerAvailable() then\r\n        return\r\n    elseif not LogInfo(\"[FATE] Ready -> Repair\") and RepairAmount > 0 and NeedsRepair(RepairAmount) and\r\n        (not shouldWaitForBonusBuff or (SelfRepair and GetItemCount(33916) > 0)) then\r\n        State = CharacterState.repair\r\n        LogInfo(\"[FATE] State Change: Repair\")\r\n    elseif not LogInfo(\"[FATE] Ready -> ExtractMateria\") and ShouldExtractMateria and CanExtractMateria(100) and GetInventoryFreeSlotCount() > 1 then\r\n        State = CharacterState.extractMateria\r\n        LogInfo(\"[FATE] State Change: ExtractMateria\")\r\n    elseif not LogInfo(\"[FATE] Ready -> WaitBonusBuff\") and NextFate == nil and shouldWaitForBonusBuff then\r\n        if not HasTarget() or GetTargetName() ~= \"以太之光\" or GetDistanceToTarget() > 20 then\r\n            State = CharacterState.flyBackToAetheryte\r\n            LogInfo(\"[FATE] State Change: FlyBackToAetheryte\")\r\n        else\r\n            yield(\"/wait 3\")\r\n        end\r\n        return\r\n    elseif not LogInfo(\"[FATE] Ready -> ExchangingVouchers\") and WaitingForCollectionsFate == 0 and\r\n        ShouldExchangeBicolorVouchers and (BicolorGemCount >= 1400) and not shouldWaitForBonusBuff\r\n    then\r\n        State = CharacterState.exchangingVouchers\r\n        LogInfo(\"[FATE] State Change: ExchangingVouchers\")\r\n    elseif not LogInfo(\"[FATE] Ready -> ProcessRetainers\") and WaitingForCollectionsFate == 0 and\r\n        Retainers and ARRetainersWaitingToBeProcessed() and GetInventoryFreeSlotCount() > 1  and not shouldWaitForBonusBuff\r\n    then\r\n        State = CharacterState.processRetainers\r\n        LogInfo(\"[FATE] State Change: ProcessingRetainers\")\r\n    elseif not LogInfo(\"[FATE] Ready -> GC TurnIn\") and ShouldGrandCompanyTurnIn and\r\n        GetInventoryFreeSlotCount() < InventorySlotsLeft and not shouldWaitForBonusBuff\r\n    then\r\n        State = CharacterState.gcTurnIn\r\n        LogInfo(\"[FATE] State Change: GCTurnIn\")\r\n    elseif not LogInfo(\"[FATE] Ready -> TeleportBackToFarmingZone\") and not IsInZone(SelectedZone.zoneId) then\r\n        TeleportTo(SelectedZone.aetheryteList[1].aetheryteName)\r\n        return\r\n    elseif not LogInfo(\"[FATE] Ready -> SummonChocobo\") and ShouldSummonChocobo and GetBuddyTimeRemaining() == 0 and\r\n        (not shouldWaitForBonusBuff or GetItemCount(4868) > 0) then\r\n        State = CharacterState.summonChocobo\r\n    elseif not LogInfo(\"[FATE] Ready -> ChangingInstances\") and NextFate == nil then\r\n        if EnableChangeInstance and GetZoneInstance() > 0 and not shouldWaitForBonusBuff then\r\n            State = CharacterState.changingInstances\r\n            LogInfo(\"[FATE] State Change: ChangingInstances\")\r\n        elseif not HasTarget() or GetTargetName() ~= \"以太之光\" or GetDistanceToTarget() > 20 then\r\n            State = CharacterState.flyBackToAetheryte\r\n            LogInfo(\"[FATE] State Change: FlyBackToAetheryte\")\r\n        else\r\n            yield(\"/wait 10\")\r\n        end\r\n        return\r\n    elseif not LogInfo(\"[FATE] Ready -> MovingToFate\") then -- and ((CurrentFate == nil) or (GetFateProgress(CurrentFate.fateId) == 100) and NextFate ~= nil) then\r\n        CurrentFate = NextFate\r\n        if HasPlugin(\"ChatCoordinates\") then\r\n            SetMapFlag(SelectedZone.zoneId, CurrentFate.x, CurrentFate.y, CurrentFate.z)\r\n            yield(\"/\"..ChatCommandType..\" <flag>\")\r\n        end\r\n        State = CharacterState.moveToFate\r\n        LogInfo(\"[FATE] State Change: MovingtoFate \"..CurrentFate.fateName)\r\n    end\r\n\r\n    if not GemAnnouncementLock and Echo >= 1 then\r\n        GemAnnouncementLock = true\r\n        if BicolorGemCount >= 1400 then\r\n            yield(\"/echo [FATE] 你已经有了 \"..tostring(BicolorGemCount)..\"/1500 gems! <se.3>\")\r\n        else\r\n            yield(\"/echo [FATE] 双色宝石: \"..tostring(BicolorGemCount)..\"/1500\")\r\n        end\r\n    end\r\nend\r\n\r\n\r\nfunction HandleDeath()\r\n    CurrentFate = nil\r\n\r\n    if GetCharacterCondition(CharacterCondition.dead) then --Condition Dead\r\n        if Echo and not DeathAnnouncementLock then\r\n            DeathAnnouncementLock = true\r\n            yield(\"/echo [FATE] 你死了 回以太水晶吧\")\r\n        end\r\n\r\n        if AutoResurrect and IsAddonVisible(\"SelectYesno\") then\r\n            yield(\"/callback SelectYesno true 0\")\r\n            yield(\"/wait 0.1\")\r\n        else\r\n            State = CharacterState.ready\r\n            LogInfo(\"[FATE] 复活已禁用，等待手动复活。\")\r\n        end\r\n    else\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        DeathAnnouncementLock = false\r\n    end\r\nend\r\n\r\nfunction ExchangeOldVouchers()\r\n    if not IsInZone(962) then\r\n        TeleportTo(\"旧萨雷安\")\r\n        return\r\n    end\r\n\r\n    if PathfindInProgress() or PathIsRunning() then\r\n        return\r\n    end\r\n\r\n    local gadfrid = { x=74.17, y=5.15, z=-37.44}\r\n    if GetDistanceToPoint(gadfrid.x, gadfrid.y, gadfrid.z) > 5 then\r\n        PathfindAndMoveTo(gadfrid.x, gadfrid.y, gadfrid.z)\r\n        yield(\"/ac 冲刺\")\r\n    else\r\n        if not HasTarget() or GetTargetName() ~= \"广域交易商 加德弗里德\" then\r\n            yield(\"/target 广域交易商 加德弗里德\")\r\n        elseif not GetCharacterCondition(CharacterCondition.occupiedShopkeeper) then\r\n            yield(\"/interact\")\r\n        end\r\n    end\r\nend\r\n\r\nfunction ExchangeNewVouchers()\r\n    if not IsInZone(1186) then\r\n        TeleportTo(\"九号解决方案\")\r\n        return\r\n    end\r\n\r\n    local beryl = { x=-198.47, y=0.92, z=-6.95 }\r\n    local nexusArcade = { x=-157.74, y=0.29, z=17.43 }\r\n    if GetDistanceToPoint(beryl.x, beryl.y, beryl.z) > (DistanceBetween(nexusArcade.x, nexusArcade.y, nexusArcade.z, beryl.x, beryl.y, beryl.z) + 10) then\r\n        LogInfo(\"Distance to Beryl is too far. Using mini aetheryte.\")\r\n        yield(\"/li 联合商城\")\r\n        yield(\"/wait 1\") -- give it a moment to register\r\n        return\r\n    elseif IsAddonVisible(\"TelepotTown\") then\r\n            LogInfo(\"TelepotTown open\")\r\n            yield(\"/callback TelepotTown false -1\")\r\n    elseif GetDistanceToPoint(beryl.x, beryl.y, beryl.z) > 5 then\r\n        LogInfo(\"Distance to Beryl is too far. Walking there.\")\r\n        if not (PathfindInProgress() or PathIsRunning()) then\r\n            LogInfo(\"Path not running\")\r\n            PathfindAndMoveTo(beryl.x, beryl.y, beryl.z)\r\n            yield(\"/ac 冲刺\")\r\n        end\r\n    else\r\n        LogInfo(\"广域交易商 贝瑞尔\")\r\n        if not HasTarget() or GetTargetName() ~= \"广域交易商 贝瑞尔\" then\r\n            yield(\"/target 广域交易商 贝瑞尔\")\r\n        elseif not GetCharacterCondition(CharacterCondition.occupiedShopkeeper) then\r\n            yield(\"/vnav stop\")\r\n            yield(\"/interact\")\r\n        end\r\n    end\r\nend\r\n\r\nfunction ExchangeVouchers()\r\n    CurrentFate = nil\r\n\r\n    if BicolorGemCount >= 1400 then\r\n        if IsAddonVisible(\"SelectYesno\") then\r\n            yield(\"/callback SelectYesno true 0\")\r\n            return\r\n        end\r\n\r\n        if IsAddonVisible(\"ShopExchangeCurrency\") then\r\n            yield(\"/callback ShopExchangeCurrency false 0 5 \"..(BicolorGemCount//100))\r\n            return\r\n        end\r\n\r\n        if VoucherTown == \"旧萨雷安\" then\r\n            ExchangeOldVouchers()\r\n        else\r\n            ExchangeNewVouchers()\r\n        end\r\n    else\r\n        if IsAddonVisible(\"ShopExchangeCurrency\") then\r\n            yield(\"/callback ShopExchangeCurrency true -1\")\r\n            return\r\n        end\r\n\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        return\r\n    end\r\nend\r\n\r\nfunction ProcessRetainers()\r\n    CurrentFate = nil\r\n\r\n    LogInfo(\"[FATE] Handling retainers...\")\r\n    if ARRetainersWaitingToBeProcessed() and GetInventoryFreeSlotCount() > 1 then\r\n    \r\n        if PathfindInProgress() or PathIsRunning() then\r\n            return\r\n        end\r\n\r\n        if not IsInZone(129) then\r\n            yield(\"/vnav stop\")\r\n            TeleportTo(\"利姆萨·罗敏萨下层甲板\")\r\n            return\r\n        end\r\n\r\n        local summoningBell = {\r\n            x = -122.72,\r\n            y = 18.00,\r\n            z = 20.39\r\n        }\r\n        if GetDistanceToPoint(summoningBell.x, summoningBell.y, summoningBell.z) > 4.5 then\r\n            PathfindAndMoveTo(summoningBell.x, summoningBell.y, summoningBell.z)\r\n            return\r\n        end\r\n\r\n        if not HasTarget() or GetTargetName() ~= \"传唤铃\" then\r\n            yield(\"/target 传唤铃\")\r\n            return\r\n        end\r\n\r\n        if not GetCharacterCondition(CharacterCondition.occupiedSummoningBell) then\r\n            yield(\"/interact\")\r\n            if IsAddonVisible(\"RetainerList\") then\r\n                yield(\"/ays e\")\r\n                yield(\"/echo [FATE] Processing retainers\")\r\n                yield(\"/wait 1\")\r\n            end\r\n        end\r\n    else\r\n        if IsAddonVisible(\"RetainerList\") then\r\n            yield(\"/callback RetainerList true -1\")\r\n        elseif not GetCharacterCondition(CharacterCondition.occupiedSummoningBell) then\r\n            State = CharacterState.ready\r\n            LogInfo(\"[FATE] 切换状态: 准备\")\r\n        end\r\n    end\r\nend\r\n\r\nfunction GrandCompanyTurnIn()\r\n    if GetInventoryFreeSlotCount() <= InventorySlotsLeft then\r\n        local playerGC = GetPlayerGC()\r\n        local gcZoneIds = {\r\n            128, --利姆萨·罗敏萨下层甲板\r\n            132, --格里达尼亚新街\r\n            130 --乌尔达哈现世回廊\r\n        }\r\n        local GCVendor = { npcName=\"从补给负责人\", x=95.75, y=40.25, z=76.67 }\r\n        if not IsInZone(gcZoneIds[playerGC]) then\r\n            yield(\"/li gc\")\r\n            yield(\"/wait 1\")\r\n        elseif GetDistanceToPoint(GCVendor.x, GCVendor.y, GCVendor.z) > 4 then\r\n            return\r\n        elseif DeliverooIsTurnInRunning() then\r\n            return\r\n        else\r\n            yield(\"/deliveroo enable\")\r\n        end\r\n    else\r\n        State = CharacterState.ready\r\n        LogInfo(\"State Change: Ready\")\r\n    end\r\nend\r\n\r\nfunction Repair()\r\n    if IsAddonVisible(\"SelectYesno\") then\r\n        yield(\"/callback SelectYesno true 0\")\r\n        return\r\n    end\r\n\r\n    if IsAddonVisible(\"Repair\") then\r\n        if not NeedsRepair(RepairAmount) then\r\n            yield(\"/callback Repair true -1\") -- if you don't need repair anymore, close the menu\r\n        else\r\n            yield(\"/callback Repair true 0\") -- select repair\r\n        end\r\n        return\r\n    end\r\n\r\n    -- if occupied by repair, then just wait\r\n    if GetCharacterCondition(CharacterCondition.occupiedMateriaExtraction) then\r\n        LogInfo(\"[FATE] Repairing...\")\r\n        yield(\"/wait 1\")\r\n        return\r\n    end\r\n    \r\n    local hawkersAlleyAethernetShard = { x=-213.95, y=15.99, z=49.35 }\r\n    if SelfRepair then\r\n        if GetItemCount(33916) > 0 then\r\n            if IsAddonVisible(\"Shop\") then\r\n                yield(\"/callback Shop true -1\")\r\n                return\r\n            end\r\n\r\n            if not IsInZone(SelectedZone.zoneId) then\r\n                TeleportTo(SelectedZone.aetheryteList[1].aetheryteName)\r\n                return\r\n            end\r\n\r\n            if GetCharacterCondition(CharacterCondition.mounted) then\r\n                Dismount()\r\n                LogInfo(\"[FATE] State Change: Dismounting\")\r\n                return\r\n            end\r\n\r\n            if NeedsRepair(RepairAmount) then\r\n                if not IsAddonVisible(\"Repair\") then\r\n                    LogInfo(\"[FATE] Opening repair menu...\")\r\n                    yield(\"/generalaction 修理\")\r\n                end\r\n            else\r\n                State = CharacterState.ready\r\n                LogInfo(\"[FATE] State Change: Ready\")\r\n            end\r\n        elseif ShouldAutoBuyDarkMatter then\r\n            if not IsInZone(129) then\r\n                yield(\"/echo 没有暗物质了！去下层甲板买点吧\")\r\n                TeleportTo(\"利姆萨·罗敏萨下层甲板\")\r\n                return\r\n            end\r\n\r\n            local darkMatterVendor = { npcName=\"乌恩辛雷尔\", x=-257.71, y=16.19, z=50.11, wait=0.08 }\r\n            if GetDistanceToPoint(darkMatterVendor.x, darkMatterVendor.y, darkMatterVendor.z) > (DistanceBetween(hawkersAlleyAethernetShard.x, hawkersAlleyAethernetShard.y, hawkersAlleyAethernetShard.z,darkMatterVendor.x, darkMatterVendor.y, darkMatterVendor.z) + 10) then\r\n                yield(\"/li 市场（国际广场）\")\r\n                yield(\"/wait 1\") -- give it a moment to register\r\n            elseif IsAddonVisible(\"TelepotTown\") then\r\n                yield(\"/callback TelepotTown false -1\")\r\n            elseif GetDistanceToPoint(darkMatterVendor.x, darkMatterVendor.y, darkMatterVendor.z) > 5 then\r\n                if not (PathfindInProgress() or PathIsRunning()) then\r\n                    PathfindAndMoveTo(darkMatterVendor.x, darkMatterVendor.y, darkMatterVendor.z)\r\n                end\r\n            else\r\n                if not HasTarget() or GetTargetName() ~= darkMatterVendor.npcName then\r\n                    yield(\"/target \"..darkMatterVendor.npcName)\r\n                elseif not GetCharacterCondition(CharacterCondition.occupiedShopkeeper) then\r\n                    yield(\"/interact\")\r\n                elseif IsAddonVisible(\"SelectYesno\") then\r\n                    yield(\"/callback SelectYesno true 0\")\r\n                elseif IsAddonVisible(\"Shop\") then\r\n                    yield(\"/callback Shop true 0 40 99\")\r\n                end\r\n            end\r\n        else\r\n            yield(\"/echo Out of Dark Matter and ShouldAutoBuyDarkMatter is false. Switching to Limsa mender.\")\r\n            SelfRepair = false\r\n        end\r\n    else\r\n        if NeedsRepair(RepairAmount) then\r\n            if not IsInZone(129) then\r\n                TeleportTo(\"利姆萨·罗敏萨下层甲板\")\r\n                return\r\n            end\r\n\r\n            local mender = { npcName=\"阿里斯特尔\", x=-246.87, y=16.19, z=49.83 }\r\n            if GetDistanceToPoint(mender.x, mender.y, mender.z) > (DistanceBetween(hawkersAlleyAethernetShard.x, hawkersAlleyAethernetShard.y, hawkersAlleyAethernetShard.z, mender.x, mender.y, mender.z) + 10) then                yield(\"/li Hawkers' Alley\")\r\n                yield(\"/li 市场（国际广场）\")\r\n                yield(\"/wait 1\") -- give it a moment to register\r\n            elseif IsAddonVisible(\"TelepotTown\") then\r\n                yield(\"/callback TelepotTown false -1\")\r\n            elseif GetDistanceToPoint(mender.x, mender.y, mender.z) > 5 then\r\n                if not (PathfindInProgress() or PathIsRunning()) then\r\n                    PathfindAndMoveTo(mender.x, mender.y, mender.z)\r\n                end\r\n            else\r\n                if not HasTarget() or GetTargetName() ~= mender.npcName then\r\n                    yield(\"/target \"..mender.npcName)\r\n                elseif not GetCharacterCondition(CharacterCondition.occupiedShopkeeper) then\r\n                    yield(\"/interact\")\r\n                end\r\n            end\r\n        else\r\n            State = CharacterState.ready\r\n            LogInfo(\"[FATE] State Change: Ready\")\r\n        end\r\n    end\r\nend\r\n\r\nfunction ExtractMateria()\r\n    if GetCharacterCondition(CharacterCondition.mounted) then\r\n        Dismount()\r\n        LogInfo(\"[FATE] State Change: Dismounting\")\r\n        return\r\n    end\r\n\r\n    if GetCharacterCondition(CharacterCondition.occupiedMateriaExtraction) then\r\n        return\r\n    end\r\n\r\n    if CanExtractMateria(100) and GetInventoryFreeSlotCount() > 1 then\r\n        if not IsAddonVisible(\"Materialize\") then\r\n            yield(\"/gaction 精制魔晶石\")\r\n            return\r\n        end\r\n\r\n        LogInfo(\"[FATE] Extracting materia...\")\r\n            \r\n        if IsAddonVisible(\"MaterializeDialog\") then\r\n            yield(\"/callback MaterializeDialog true 0\")\r\n        else\r\n            yield(\"/callback Materialize true 2 0\")\r\n        end\r\n    else\r\n        if IsAddonVisible(\"Materialize\") then\r\n            yield(\"/callback Materialize true -1\")\r\n        else\r\n            State = CharacterState.ready\r\n            LogInfo(\"[FATE] State Change: Ready\")\r\n        end\r\n    end\r\nend\r\n\r\nCharacterState = {\r\n    ready = Ready,\r\n    dead = HandleDeath,\r\n    unexpectedCombat = HandleUnexpectedCombat,\r\n    mounting = Mount,\r\n    npcDismount = NPCDismount,\r\n    middleOfFateDismount = MiddleOfFateDismount,\r\n    moveToFate = MoveToFate,\r\n    interactWithNpc = InteractWithFateNpc,\r\n    collectionsFateTurnIn = CollectionsFateTurnIn,\r\n    doFate = DoFate,\r\n    waitForContinuation = WaitForContinuation,\r\n    changingInstances = ChangeInstance,\r\n    changeInstanceDismount = ChangeInstanceDismount,\r\n    flyBackToAetheryte = FlyBackToAetheryte,\r\n    extractMateria = ExtractMateria,\r\n    repair = Repair,\r\n    exchangingVouchers = ExchangeVouchers,\r\n    processRetainers = ProcessRetainers,\r\n    gcTurnIn = GrandCompanyTurnIn,\r\n    summonChocobo = SummonChocobo,\r\n    autoBuyGysahlGreens = AutoBuyGysahlGreens\r\n}\r\n\r\n--#endregion State Transition Functions\r\n\r\n--#region Main\r\n\r\nGemAnnouncementLock = false\r\nDeathAnnouncementLock = false\r\nSuccessiveInstanceChanges = 0\r\nLastInstanceChangeTimestamp = 0\r\nLastTeleportTimeStamp = 0\r\nGotCollectionsFullCredit = false -- needs 7 items for  full credit\r\nLastStuckCheckTime = os.clock()\r\nLastStuckCheckPosition = {x=GetPlayerRawXPos(), y=GetPlayerRawYPos(), z=GetPlayerRawZPos()}\r\nMainClass = GetClassJobTableFromId(GetClassJobId())\r\nBossFatesClass = nil\r\nif ClassForBossFates ~= \"\" then\r\n    BossFatesClass = GetClassJobTableFromAbbrev(ClassForBossFates)\r\nend\r\nSetMaxDistance()\r\n\r\nlocal selectedZoneId = GetZoneID()\r\nfor i, zone in ipairs(FatesData) do\r\n    if selectedZoneId == zone.zoneId then\r\n        SelectedZone = zone\r\n    end\r\nend\r\nif SelectedZone == nil then\r\n    yield(\"/echo [FATE] 当前区域仅部分支持 死亡或离开时不会传送回去\")\r\n    SelectedZone = {\r\n        zoneName = \"Unknown Zone Name\",\r\n        zoneId = selectedZoneId,\r\n        aetheryteList = {},\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            bossFates= {},\r\n            blacklistedFates= {}\r\n        }\r\n    }\r\nend\r\n\r\n\r\n-- variable to track collections fates that you have completed but are still active.\r\n-- will not leave area or change instance if value ~= 0\r\nWaitingForCollectionsFate = 0\r\nLastFateEndTime = os.clock()\r\nState = CharacterState.ready\r\nCurrentFate = nil\r\nif IsInFate() and GetFateProgress(GetNearestFate()) < 100 then\r\n    CurrentFate = BuildFateTable(GetNearestFate())\r\nend\r\n\r\nLogInfo(\"[FATE] Starting fate farming script.\")\r\nwhile true do\r\n    if NavIsReady() then\r\n        if State ~= CharacterState.dead and GetCharacterCondition(CharacterCondition.dead) then\r\n            State = CharacterState.dead\r\n            LogInfo(\"[FATE] State Change: Dead\")\r\n        elseif State ~= CharacterState.unexpectedCombat and State ~= CharacterState.doFate and\r\n            State ~= CharacterState.waitForContinuation and State ~= CharacterState.collectionsFateTurnIn and\r\n            (not IsInFate() or (IsInFate() and IsCollectionsFate(GetFateName(GetNearestFate())) and GetFateProgress(GetNearestFate()) == 100)) and\r\n            GetCharacterCondition(CharacterCondition.inCombat)\r\n        then\r\n            State = CharacterState.unexpectedCombat\r\n            LogInfo(\"[FATE] State Change: UnexpectedCombat\")\r\n        end\r\n        \r\n        BicolorGemCount = GetItemCount(26807)\r\n\r\n        if not (IsPlayerCasting() or\r\n            GetCharacterCondition(CharacterCondition.betweenAreas) or\r\n            GetCharacterCondition(CharacterCondition.jumping48) or\r\n            GetCharacterCondition(CharacterCondition.jumping61) or\r\n            GetCharacterCondition(CharacterCondition.mounting57) or\r\n            GetCharacterCondition(CharacterCondition.mounting64) or\r\n            GetCharacterCondition(CharacterCondition.beingmoved70) or\r\n            GetCharacterCondition(CharacterCondition.beingmoved75) or\r\n            GetCharacterCondition(CharacterCondition.occupiedMateriaExtraction) or\r\n            LifestreamIsBusy())\r\n        then\r\n            if WaitingForCollectionsFate ~= 0 and not IsFateActive(WaitingForCollectionsFate) then\r\n                WaitingForCollectionsFate = 0\r\n            end\r\n            State()\r\n        end\r\n    end\r\n    yield(\"/wait 0.3\")\r\nend\r\n\r\n--#endregion Main\r\n",
        "CraftingLoop": false,
        "CraftLoopCount": 0,
        "IsLua": false,
        "Language": 2
      },
      {
        "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
        "Name": "清末触发",
        "Contents": "/青魔法技能 狂风暴雪 <wait.10>\n/loop",
        "CraftingLoop": false,
        "CraftLoopCount": 0,
        "IsLua": false,
        "Language": 0
      },
      {
        "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
        "Name": "钓鱼",
        "Contents": "----------基于SND官库双采收藏品脚本LegendaryFarmer-1.0.4修改----------\n----------https://github.com/Jaksuhn/SomethingNeedDoing/blob/a9514320a836f6800682066721c8ecc1d8c46d12/Community%20Scripts/Gathering/LegendaryFarmer-1.0.4.lua----------\n\n\n----------以下部分可以自行设置 默认为钓橙票秃鹰----------\n\nLoop = 999\n-- 设置循环几次就结束\n\nFishingAetheryte = \"胡萨塔伊驿镇\"\n-- 填写离钓场最近的以太之光名字\n\nFishingZoneID = 1190\n\nUnmountPosition = {-79.51,-24.55,739.49}\n-- 下坐骑位置\n\nFishingPosition = {-82.69,-29.39,748.39}\n-- 钓场位置，确保从下坐骑位置走到钓场位置时，你的面向是可以抛竿的\n\nadditional_scrip_exchange = true\n--使用自定义提交收藏品地点，默认为九号解决方案，如果为false则前往军队所在主城提交收藏品\n\nadditional_scrip_exchange_location    = \"九号解决方案\" \n--自定义提交收藏品的大水晶名称\n\nadditional_scrip_exchange_sublocation = \"联合商城\"   \n--自定义城内小水晶名称，当需要使用城内小水晶移动时使用\n\ninterval_rate = 0.5\n--兑换时交互速度，单位为s，如果会卡住可以适当增大\n\nnum_inventory_free_slot_threshold = 5\n--当背包剩余空间小于该值时将停止钓鱼前往兑换票据\n\ndo_extract = true\n--是否自动精炼\ndo_repair = true\n--是否自动修理（如果开启了DR的自动修理则不用启用）\n\nfood_to_eat = \"\"\n--吃什么食物（不想使用请留空 \"\" ）脚本不会检查你是否有这种道具，没有的话会自动跳过。\nmedicine_to_use = \"极精炼药 <hq>\" \n--吃什么药（不想使用请留空 \"\" ）脚本不会检查你是否有这种道具，没有的话会自动跳过。\n\nconsume_threshold = 10 \n--食物剩余多少分钟后补充\nRepairAmount = 50 \n--修理阈值\n\nstart_fishing_command_1 = \"/e 空天姬预设 佐戈秃鹰\"\nstart_fishing_command_2 = \"\"\n--开始钓鱼时使用的指令，按顺序执行，如不需要可留空\n\nstop_fishing_command_1 = \"/e 停止\"\nstop_fishing_command_2 = \"/ac 中断\"\n--停止钓鱼时使用的指令，按顺序执行，如不需要可留空\n\njob_change_command = \"/gearset change 捕鱼人\"\n--填写你捕鱼人职业套装列表的序号或者套装名字 如\"/gearset change 3\" 可自行在聊天栏测试能不能切换到捕鱼人职业\n\nexchange_item_table      = {\n    { 4, 8, 6, 1000 }, --橙票用于兑换 (默认为犎牛角笛的交换票据)\n    { 4, 1, 0, 20 },  --紫票用于兑换 (默认为高级强心剂)\n} --只能分别设置一个要兑换的物品\n\ncollectible_item_table   ={ --用于提交的收藏品列表\n    --橙票收藏品\n    { 6, 43761, 10, 39 }, --佐戈秃鹰\n    --紫票收藏品\n    { 28, 44233, 10, 38 }, --灵岩之剑\n    --格式为{ 收藏品在提交界面所在行数 , 物品id , 提交职业（捕鱼人为10）, 票据id（橙票为39，紫票为38） }\n}\n\n\nmin_items_before_turnins = 1             \n--how many collectibles before turining in\nscrip_overcap_limit      = 3900          \n--橙票/紫票大于该值时停止提交收藏品，以防止溢出\n\n\n----------以下设置，除非你知道你在做什么，否则请保持原样----------\n\npaths_to_scrip                        = { --票据兑换的路径\n    { -258.09,  16.079, 42.089,  129 }, -- 利姆萨·罗敏萨下层甲板\n    { 142.15,   13.74,  -105.39, 132 },-- 格里达尼亚新街\n    { 149.349,  4,      -18.722, 130 },-- 乌尔达哈现世回廊\n    { -158.019, 0.922, -37.884, 1186} -- 九号解决方案\n\n}\n\nmsgDelay = 10\ntimeout_threshold = 10\n\nstop_main = false\n\nfunction Dismount()-- 下坐骑\n    if GetCharacterCondition(77) then\n        yield('/gaction 随机坐骑')\n        local muuv = 1\n        local muuvX = GetPlayerRawXPos()\n        local muuvY = GetPlayerRawYPos()\n        local muuvZ = GetPlayerRawZPos()\n        while muuv == 1 do\n           yield(\"/wait \" .. interval_rate*5)\n           if muuvX == GetPlayerRawXPos() and muuvY == GetPlayerRawYPos() and muuvZ == GetPlayerRawZPos() then\n               muuv = 0\n           end\n           muuvX = GetPlayerRawXPos()\n           muuvY = GetPlayerRawYPos()\n           muuvZ = GetPlayerRawZPos()\n        end\n\n        if GetCharacterCondition(77) then\n            local random_j = 0\n            ::DISMOUNT_START::\n            CheckNavmeshReady()\n\n            local land_x\n            local land_y\n            local land_z\n            local i = 0\n            while not land_x or not land_y or not land_z do\n                land_x = QueryMeshPointOnFloorX(GetPlayerRawXPos() + math.random(0, random_j),\n                    GetPlayerRawYPos() + math.random(0, random_j), GetPlayerRawZPos() + math.random(0, random_j), false, i)\n                land_y = QueryMeshPointOnFloorY(GetPlayerRawXPos() + math.random(0, random_j),\n                    GetPlayerRawYPos() + math.random(0, random_j), GetPlayerRawZPos() + math.random(0, random_j), false, i)\n                land_z = QueryMeshPointOnFloorZ(GetPlayerRawXPos() + math.random(0, random_j),\n                    GetPlayerRawYPos() + math.random(0, random_j), GetPlayerRawZPos() + math.random(0, random_j), false, i)\n                i = i + 1\n            end\n            NodeMoveFly(\"land,\" .. land_x .. \",\" .. land_y .. \",\" .. land_z)\n\n\n            local timeout_start = os.clock()\n            repeat\n                yield(\"/wait \" .. interval_rate)\n                if os.clock() - timeout_start > timeout_threshold then\n                    Id_Print(\"未能导航到可下坐骑的地形\")\n                    Id_Print(\"尝试前往其他位置\")\n                    random_j = random_j + 1\n                    goto DISMOUNT_START\n                end\n            until not PathIsRunning()\n\n            yield('/gaction 随机坐骑')\n\n            timeout_start = os.clock()\n            repeat\n                yield(\"/wait \" .. interval_rate)\n                if os.clock() - timeout_start > timeout_threshold then\n                    Id_Print(\"下坐骑失败\")\n                    Id_Print(\"尝试前往其他位置\")\n                    random_j = random_j + 1\n                    goto DISMOUNT_START\n                end\n            until not GetCharacterCondition(77)\n        end\n    end\n\n    if GetCharacterCondition(4) then\n        yield(\"/wait \" .. interval_rate*10)\n        yield('/gaction 随机坐骑')\n        repeat\n            yield(\"/wait \" .. interval_rate)\n        until not GetCharacterCondition(4)\n    end\nend\n\nfunction ParseNodeDataString(string)\n    return Split(string, \",\")\nend\n\nfunction PrintNode(node)\n    local printable_node = node or \"\"\n    if truncate then\n        local data = ParseNodeDataString(node)\n        local x = Truncate1Dp(data[2])\n        local y = Truncate1Dp(data[3])\n        local z = Truncate1Dp(data[4])\n        printable_node = data[1] .. \",\" .. x .. \",\" .. y .. \",\" .. z\n    end\n    return printable_node\nend\n\nfunction Split(inputstr, sep)\n    if sep == nil then sep = \"%s\" end\n    local t = {}\n    for str in string.gmatch(inputstr, \"([^\" .. sep .. \"]+)\") do\n        table.insert(t, str)\n    end\n    return t\nend\n\nfunction NodeMoveFly(node, force_moveto)\n    local force_moveto = force_moveto or false\n    local x = tonumber(ParseNodeDataString(node)[2]) or 0\n    local y = tonumber(ParseNodeDataString(node)[3]) or 0\n    local z = tonumber(ParseNodeDataString(node)[4]) or 0\n    last_move_type = last_move_type or \"NA\"\n\n    CheckNavmeshReady()\n    start_pos = Truncate1Dp(GetPlayerRawXPos()) ..\n        \",\" .. Truncate1Dp(GetPlayerRawYPos()) .. \",\" .. Truncate1Dp(GetPlayerRawZPos())\n    if not force_moveto and ((GetCharacterCondition(4) and GetCharacterCondition(77)) or GetCharacterCondition(81)) then\n        last_move_type = \"fly\"\n        PathfindAndMoveTo(x, y, z, true)\n    else\n        last_move_type = \"walk\"\n        PathfindAndMoveTo(x, y, z)\n    end\nend\n\nfunction UseMedicine()--Wrapper for eating food, and if want to consume, consume if not fooded\n    if type(medicine_to_use) ~= \"string\" and type(medicine_to_use) ~= \"table\" then return end\n    if medicine_to_use == \"\" then return end\n\n    if not HasStatus(\"强化药\") then\n        local timeout_start = os.clock()\n        local user_settings = { GetSNDProperty(\"UseItemStructsVersion\"), GetSNDProperty(\"StopMacroIfItemNotFound\"),\n            GetSNDProperty(\"StopMacroIfCantUseItem\") }\n        SetSNDProperty(\"UseItemStructsVersion\", \"true\")\n        SetSNDProperty(\"StopMacroIfItemNotFound\", \"false\")\n        SetSNDProperty(\"StopMacroIfCantUseItem\", \"false\")\n        repeat\n            if type(medicine_to_use) == \"string\" then\n                Id_Print(\"尝试使用 \" .. medicine_to_use)\n                yield(\"/item \" .. medicine_to_use)\n            elseif type(medicine_to_use) == \"table\" then\n                for _, medicine in ipairs(medicine_to_use) do\n                    Id_Print(\"尝试使用 \" .. medicine, verbose)\n                    yield(\"/item \" .. medicine)\n                    yield(\"/wait \" .. math.max(interval_rate, 1))\n                    if HasStatus(\"强化药\") then break end\n                end\n            end\n\n            yield(\"/wait \" .. math.max(interval_rate, 1))\n        until HasStatus(\"强化药\") or os.clock() - timeout_start > consume_threshold\n        SetSNDProperty(\"UseItemStructsVersion\", tostring(user_settings[1]))\n        SetSNDProperty(\"StopMacroIfItemNotFound\", tostring(user_settings[2]))\n        SetSNDProperty(\"StopMacroIfCantUseItem\", tostring(user_settings[3]))\n    end\nend\n\nfunction EatFood()\n    if type(food_to_eat) ~= \"string\" and type(food_to_eat) ~= \"table\" then return end\n    if food_to_eat == \"\" then return end\n\n    if not HasStatus(\"进食\") then\n        local timeout_start = os.clock()\n        local user_settings = { GetSNDProperty(\"UseItemStructsVersion\"), GetSNDProperty(\"StopMacroIfItemNotFound\"),\n            GetSNDProperty(\"StopMacroIfCantUseItem\") }\n        SetSNDProperty(\"UseItemStructsVersion\", \"true\")\n        SetSNDProperty(\"StopMacroIfItemNotFound\", \"false\")\n        SetSNDProperty(\"StopMacroIfCantUseItem\", \"false\")\n        repeat\n            if type(food_to_eat) == \"string\" then\n                Id_Print(\"尝试使用 \" .. food_to_eat)\n                yield(\"/item \" .. food_to_eat)\n            elseif type(food_to_eat) == \"table\" then\n                for _, food in ipairs(food_to_eat) do\n                    Id_Print(\"尝试使用 \" .. food, verbose)\n                    yield(\"/item \" .. food)\n                    yield(\"/wait \" .. math.max(interval_rate, 1))\n                    if HasStatus(\"进食\") then break end\n                end\n            end\n\n            yield(\"/wait \" .. math.max(interval_rate, 1))\n        until HasStatus(\"进食\") or os.clock() - timeout_start > consume_threshold\n        SetSNDProperty(\"UseItemStructsVersion\", tostring(user_settings[1]))\n        SetSNDProperty(\"StopMacroIfItemNotFound\", tostring(user_settings[2]))\n        SetSNDProperty(\"StopMacroIfCantUseItem\", tostring(user_settings[3]))\n    end\nend\n\nfunction RepairExtractCheck()--修理装备与精炼\n\n    function SelfRepair()\n        if do_repair and NeedsRepair(RepairAmount) then\n            StopMoveFly()\n            if GetCharacterCondition(4) then\n                Id_Print(\"[自动钓收藏品] 尝试下坐骑\")\n                Dismount()\n            end\n            while not IsAddonVisible(\"Repair\") do\n                yield(\"/gaction 修理\")\n                yield(\"/wait \" .. interval_rate * 5)\n            end\n            yield(\"/callback Repair true 0\")\n            yield(\"/wait \" .. interval_rate)\n            if GetNodeText(\"_TextError\", 1) == \"没有修理所必需的暗物质。\" and\n                IsAddonVisible(\"_TextError\") then\n                LogInfo(\"[自动钓收藏品] 修理所必需的暗物质不足\")\n            end\n            if IsAddonVisible(\"SelectYesno\") then\n                yield(\"/callback SelectYesno true 0\")\n            end\n            while GetCharacterCondition(39) do\n                yield(\"/wait \" .. interval_rate * 10)\n            end\n            yield(\"/wait \" .. interval_rate * 10)\n            if IsAddonVisible(\"Repair\") then\n                yield(\"/callback Repair true -1\")\n            end\n            Id_Print(\"[自动钓收藏品] 修理完成\")\n        end\n    end\n\n    SelfRepair()\n    \n    function MateriaExtract()\n        if do_extract and CanExtractMateria(100) then\n            StopMoveFly()\n            if GetCharacterCondition(4) then\n                Id_Print(\"[自动钓收藏品] 尝试下坐骑\")\n                Dismount()\n            end\n            Id_Print(\"尝试精制魔晶石\")\n            yield(\"/gaction 精制魔晶石\")\n            yield(\"/waitaddon Materialize\")\n\n            while CanExtractMateria(100) == true do\n                yield(\"/callback Materialize true 2 0\")\n                yield(\"/wait \" .. interval_rate * 5)\n                if IsAddonVisible(\"MaterializeDialog\") then\n                    yield(\"/callback MaterializeDialog true 0\")\n                end\n                while GetCharacterCondition(39) do\n                    yield(\"/wait \" .. interval_rate * 30)\n                end\n                yield(\"/wait \" .. interval_rate * 20)\n            end\n\n            yield(\"/wait \" .. interval_rate * 10)\n            yield(\"/callback Materialize true -1\")\n            Id_Print(\"[自动钓收藏品] 精制魔晶石完成\")\n        end\n    end\n    MateriaExtract()\nend\n\nfunction CollectableAppraiser()--提交收藏品\n    while not IsAddonVisible(\"CollectablesShop\") and not IsAddonReady(\"CollectablesShop\") do\n        if GetTargetName() ~= \"收藏品交易员\" then\n            yield(\"/target 收藏品交易员\")\n        elseif not IsAddonVisible(\"SelectIconString\") then\n            yield(\"/interact\")\n        else\n            yield(\"/callback SelectIconString true 0\")\n        end\n        yield(\"/wait \" .. interval_rate)\n    end\n    yield(\"/wait \" .. interval_rate * 10)\n\n\n    local orange_scrips_raw = GetNodeText(\"CollectablesShop\", 39, 1):gsub(\",\", \"\"):match(\"^([%d,]+)/\")\n    local purple_scrips_raw = GetNodeText(\"CollectablesShop\", 38, 1):gsub(\",\", \"\"):match(\"^([%d,]+)/\")\n\n    local orange_scrips = tonumber(orange_scrips_raw)\n    local purple_scrips = tonumber(purple_scrips_raw)\n\n    if (orange_scrips < scrip_overcap_limit) or (purple_scrips < scrip_overcap_limit) then\n        for i, item in ipairs(collectible_item_table) do\n            local collectible_to_turnin_row = item[1]\n            local collectible_item_id = item[2]\n            local job_for_turnin = item[3]\n            local turnins_scrip_type = item[4]\n            yield(\"/e 提交道具: \" .. collectible_item_id)\n            if GetItemCount(collectible_item_id) > 0 then\n                yield(\"/callback CollectablesShop true 14 \" .. job_for_turnin)\n                yield(\"/wait \" .. interval_rate * 2)\n                yield(\"/callback CollectablesShop true 12 \" .. collectible_to_turnin_row)\n                yield(\"/wait \" .. interval_rate * 2)\n                scrips_owned = tonumber(GetNodeText(\"CollectablesShop\", turnins_scrip_type, 1):gsub(\",\", \"\"):match(\n                \"^([%d,]+)/\"))\n                while (scrips_owned <= scrip_overcap_limit) and (not IsAddonVisible(\"SelectYesno\")) and (GetItemCount(collectible_item_id) > 0) do\n                    --iyield(\"ITEM: \" .. collectible_item_id .. \" Qty: \" .. GetItemCount(collectible_item_id))\n                    yield(\"/callback CollectablesShop true 15 0\")\n                    yield(\"/wait \" .. interval_rate * 2)\n                    scrips_owned = tonumber(GetNodeText(\"CollectablesShop\", turnins_scrip_type, 1):gsub(\",\", \"\"):match(\n                    \"^([%d,]+)/\"))\n                end --will break if either orange or purple scrip limit cap reached\n                yield(\"/wait \" .. interval_rate * 2)\n            end\n            yield(\"/wait \" .. interval_rate)\n            if IsAddonVisible(\"SelectYesno\") then\n                yield(\"/callback SelectYesno true 1\")\n                break\n            end\n        end\n    end\n    yield(\"/wait \" .. interval_rate * 2)\n    yield(\"/callback CollectablesShop true -1\")\n\n    if GetTargetName() ~= \"\" then\n        ClearTarget()\n        yield(\"/wait \" .. interval_rate)\n    end\nend\n\nfunction ScripExchange()-- 兑换票据\n    --打开兑换界面--\n    while not IsAddonVisible(\"InclusionShop\") and not IsAddonReady(\"InclusionShop\") do\n        if GetTargetName() ~= \"工票交易员\" then\n            yield(\"/target 工票交易员\")\n        elseif not IsAddonVisible(\"SelectIconString\") then\n            yield(\"/interact\")\n        else\n            yield(\"/callback SelectIconString true 0\")\n        end\n        yield(\"/wait \" .. interval_rate)\n    end\n\n    yield(\"/wait \" .. interval_rate * 10)\n\n    --打开对应目录--\n    for i, reward in ipairs(exchange_item_table) do\n        local scrip_exchange_category = reward[1]\n        local scrip_exchange_subcategory = reward[2]\n        local scrip_exchange_item_to_buy_row = reward[3]\n        local collectible_scrip_price = reward[4]\n        yield(\"需要票据:\" .. collectible_scrip_price)\n\n        yield(\"/wait \" .. interval_rate * 5)\n        yield(\"/callback InclusionShop true 12 \" .. scrip_exchange_category)\n        yield(\"/wait \" .. interval_rate)\n        yield(\"/callback InclusionShop true 13 \" .. scrip_exchange_subcategory)\n        yield(\"/wait \" .. interval_rate)\n\n        --开始兑换--\n        scrips_owned_str = GetNodeText(\"InclusionShop\", 21):gsub(\",\", \"\")\n        scrips_owned = tonumber(scrips_owned_str)\n        if scrips_owned >= collectible_scrip_price then\n            scrip_shop_item_row = scrip_exchange_item_to_buy_row + 21\n            scrip_item_number_to_buy = scrips_owned // collectible_scrip_price\n            local scrip_item_number_to_buy_final = math.min(scrip_item_number_to_buy, 99)\n            yield(\"/callback InclusionShop true 14 \" ..\n                scrip_exchange_item_to_buy_row .. \" \" .. scrip_item_number_to_buy_final)\n            yield(\"/wait \" .. interval_rate * 5)\n            if IsAddonVisible(\"ShopExchangeItemDialog\") then\n                yield(\"/callback ShopExchangeItemDialog true 0\")\n                yield(\"/wait \" .. interval_rate)\n            end\n        end\n    end\n    --结束兑换--\n    yield(\"/wait \" .. interval_rate)\n    yield(\"/callback InclusionShop true -1\")\n\n    if GetTargetName() ~= \"\" then\n        ClearTarget()\n        yield(\"/wait \" .. interval_rate)\n    end\nend\n\nfunction PathToScrip()-- 前往收藏品交易位置\n    if additional_scrip_exchange then\n        local x = paths_to_scrip[4][1]\n        local y = paths_to_scrip[4][2]\n        local z = paths_to_scrip[4][3]\n\n        local zoneid = paths_to_scrip[4][4]\n        yield(\"/vnav stop\")\n\n        yield(\"/tp \" .. additional_scrip_exchange_location)\n        yield(\"/wait \" .. interval_rate * 15)\n        repeat\n            yield(\"/wait \" .. interval_rate)\n        until (zoneid == GetZoneID()) and (not GetCharacterCondition(27)) and (not GetCharacterCondition(45)) and (not GetCharacterCondition(51))\n        yield(\"/wait \" .. interval_rate * 10)\n        yield(\"/li \" .. additional_scrip_exchange_sublocation)\n        yield(\"/wait \" .. interval_rate * 30)\n        MoveTo(x, y, z, 0.1, false)\n        yield(\"/wait \" .. interval_rate * 10)\n    else\n        TeleportToGCTown()\n        local gc_no = GetPlayerGC()\n        if gc_no == 1 then\n            local zoneid = paths_to_scrip[1][4]\n            local x = paths_to_scrip[1][1]\n            local y = paths_to_scrip[1][2]\n            local z = paths_to_scrip[1][3]\n            repeat\n                yield(\"/wait \" .. interval_rate)\n            until (zoneid == GetZoneID()) and (not GetCharacterCondition(27)) and (not GetCharacterCondition(45)) and (not GetCharacterCondition(51))\n            --yield(\"/wait \" .. interval_rate * 20)\n            --yield(\"/li hawkers\")\n            yield(\"/wait \" .. interval_rate * 50)\n            PathfindAndMoveTo(x, y, z, false)\n        elseif gc_no == 2 then\n            local zoneid = paths_to_scrip[2][4]\n            local x = paths_to_scrip[2][1]\n            local y = paths_to_scrip[2][2]\n            local z = paths_to_scrip[2][3]\n            repeat\n                yield(\"/wait \" .. interval_rate)\n            until (zoneid == GetZoneID()) and (not GetCharacterCondition(27)) and (not GetCharacterCondition(45)) and (not GetCharacterCondition(51))\n            yield(\"/li leatherworker\")\n            yield(\"/wait \" .. interval_rate * 50)\n            PathfindAndMoveTo(x, y, z, false)\n        elseif gc_no == 3 then\n            local zoneid = paths_to_scrip[3][4]\n            local x = paths_to_scrip[3][1]\n            local y = paths_to_scrip[3][2]\n            local z = paths_to_scrip[3][3]\n            repeat\n                yield(\"/wait \" .. interval_rate)\n            until (zoneid == GetZoneID()) and (not GetCharacterCondition(27)) and (not GetCharacterCondition(45)) and (not GetCharacterCondition(51))\n            yield(\"/li sapphire\")\n            yield(\"/wait \" .. interval_rate * 50)\n            PathfindAndMoveTo(x, y, z, false)\n        end\n        yield(\"/wait \" .. interval_rate)\n        if PathIsRunning() then\n            repeat\n                yield(\"/wait \" .. interval_rate)\n            until not PathIsRunning()\n        end\n    end\nend\n\nfunction CanTurnin()-- 可以提交收藏品\n    local flag = false\n    for i, item in ipairs(collectible_item_table) do\n        local collectible_item_id = item[2]\n        if GetItemCount(collectible_item_id) >= min_items_before_turnins then\n            flag = true --turnin even if one item is available for turnins\n        end\n    end\n    return flag\nend\n\nfunction CollectableAppraiserScripExchange()-- 提交然后兑换\n    if IsPlayerAvailable() then\n        PathToScrip()\n        yield(\"/wait \" .. interval_rate * 2)\n        while CanTurnin() do\n            CollectableAppraiser()\n            yield(\"/wait \" .. interval_rate * 5)\n            ScripExchange()\n            yield(\"/wait \" .. interval_rate * 5)\n        end\n        yield(\"/wait \" .. interval_rate * 1)\n        ScripExchange()\n    end\nend\n\nfunction PluginsCheck()-- 检查需要插件\n    if not HasPlugin(\"Lifestream\") then\n    yield(\"/e 请安装Lifestream\")\n    Check= false\n    end\n\n    if not HasPlugin(\"vnavmesh\") then\n    yield(\"/e 请安装vnavmesh\")\n    Check= false\n    end\n\n    if not HasPlugin(\"TeleporterPlugin\") then\n    yield(\"/e 请安装Teleporter\")\n    Check= false\n    end\nend\n\nfunction StopMoveFly()\n    PathStop()\n    while PathIsRunning() do\n        yield(\"/wait \" .. interval_rate)\n    end\nend\n\nfunction VNavMovement() -- Used to Do NOTHING While Moving\n    repeat\n        yield(\"/wait \" .. interval_rate * 10)\n    until not PathIsRunning()\nend\n\nfunction CheckNavmeshReady()\n    was_ready = NavIsReady()\n    while not NavIsReady() do\n        Id_Print(\"Building navmesh, currently at \" .. Truncate1Dp(NavBuildProgress() * 100) .. \"%\")\n        yield(\"/wait \" .. (interval_rate * 10))\n    end\n    if not was_ready then Id_Print(\"Navmesh is ready!\") end\nend\n\nfunction MoveTo(valuex, valuey, valuez, stopdistance, FlyOrWalk)\n    function MeshCheck()\n        function Truncate1Dp(num)\n            return truncate and (\"%.1f\"):format(num) or num\n        end\n\n        local was_ready = NavIsReady()\n        if not NavIsReady() then\n            while not NavIsReady() do\n                LogInfo(\"[Debug]Building navmesh, currently at \" .. Truncate1Dp(NavBuildProgress() * 100) .. \"%\")\n                yield(\"/wait 1\")\n                local was_ready = NavIsReady()\n                if was_ready then\n                    LogInfo(\"[Debug]Navmesh ready!\")\n                end\n            end\n        else\n            LogInfo(\"[Debug]Navmesh ready!\")\n        end\n    end\n\n    MeshCheck()\n    \n    local CastingMount = false\n    \n    if FlyOrWalk then\n        if TerritorySupportsMounting() then\n            while GetCharacterCondition(4, false) do\n                yield(\"/wait 2\")\n                -- 检查是否正在读条或坐骑中\n                if GetCharacterCondition(27) then\n                    yield(\"/wait 1\")\n                    repeat\n                    yield(\"/wait 0.5\")\n                    until not GetCharacterCondition(27) -- 等待读条状态结束\n                    yield(\"/wait 1\")\n\n                    -- 如果未开始上坐骑且不在飞行中\n                    elseif not CastingMount and not GetCharacterCondition(4) then\n                    yield('/gaction 随机坐骑') -- 触发上坐骑\n                    CastingMount = true        -- 标志为已经尝试上坐骑\n                    yield(\"/wait 1\")\n\n                -- 如果已经尝试过上坐骑，等待状态稳定\n                else\n                    yield(\"/wait 1\")\n                end\n\n                -- 如果检测到角色已经上坐骑，重置标志\n                if GetCharacterCondition(4) then\n                    CastingMount = false\n                end\n            end\n\n\n\n        if HasFlightUnlocked(GetZoneID()) then\n            PathfindAndMoveTo(valuex, valuey, valuez, true) -- flying\n        else\n            LogInfo(\"[MoveTo] 无法飞行，尝试行走\")\n            PathfindAndMoveTo(valuex, valuey, valuez, false) -- walking\n        end\n    else\n        LogInfo(\"[MoveTo] 无法上坐骑，尝试行走\")\n        PathfindAndMoveTo(valuex, valuey, valuez, false) -- walking\n    end\nelse\n    PathfindAndMoveTo(valuex, valuey, valuez, false) -- walking\nend\nwhile ((PathIsRunning() or PathfindInProgress()) and GetDistanceToPoint(valuex, valuey, valuez) > stopdistance) do\n    yield(\"/wait 0.3\")\nend\nPathStop()\nLogInfo(\"[MoveTo] 完成\")\nend\n\nfunction setSNDPropertyIfNotSet(propertyName)\n    if GetSNDProperty(propertyName) == false then\n        SetSNDProperty(propertyName, \"true\")\n        LogInfo(\"[SetSNDPropertys] \" .. propertyName .. \" set to True\")\n    end\nend\n\nfunction unsetSNDPropertyIfSet(propertyName)\n    if GetSNDProperty(propertyName) then\n        SetSNDProperty(propertyName, \"false\")\n        LogInfo(\"[SetSNDPropertys] \" .. propertyName .. \" set to False\")\n    end\nend\n\nfunction Truncate1Dp(num)\n    return truncate and (\"%.1f\"):format(num) or num\nend\n\nfunction Set(list)\n    local set = {}\n    for _, l in ipairs(list) do set[l] = true end\n    return set\nend\n\nfunction AddToSet(set, key)\n    set[key] = true\nend\n\nfunction Id_Print(string, print, debug)-- 打印调试信息\n    local time = -msgDelay\n    if print == nil then print = true end\n    if debug == nil then debug = false end\n    print_history = print_history or Set {}\n    script_start = script_start or os.clock()\n\n    if debug then\n        LogDebug(\"[自动钓收藏品] [DEBUG] \" .. string)\n        return\n    end\n\n    for k, _ in pairs(print_history) do\n        entry = Split(k, \"_\")\n        if entry and time < tonumber(entry[1]) and entry[2] == string then\n            time = tonumber(entry[1])\n        end\n    end\n\n    if print and os.clock() - script_start >= time + msgDelay then\n        yield(\"/echo [自动钓收藏品] \" .. string)\n        AddToSet(print_history, (os.clock() - script_start) .. \"_\" .. string)\n    end\nend\n\nfunction StopFishing()\n\n  yield(\"/wait \" .. interval_rate)\n    if (GetCharacterCondition(6) or GetCharacterCondition(42) or GetCharacterCondition(27) or GetCharacterCondition(51)) then\n        yield(\"/e 下次上钩后停止钓鱼\")\n        repeat  \n            yield(\"/wait \" .. interval_rate)\n        until GetCharacterCondition(42)\n        yield(stop_fishing_command_1)\n        yield(\"/wait \" .. interval_rate)\n        repeat  \n            yield(\"/wait \" .. interval_rate*10)\n            yield(\"/wait \" .. interval_rate)\n            yield(stop_fishing_command_2)\n        until not GetCharacterCondition(6) and not GetCharacterCondition(42) \n        \n    else    \n        yield(stop_fishing_command_1)\n        yield(\"/wait \" .. interval_rate)\n        yield(stop_fishing_command_2)\n        yield(\"/wait \" .. interval_rate*10)\n    end\n\nend    \n\nfunction ContinueFishing()\n    while not (IsInZone(FishingZoneID)) do\n            yield(\"/wait \" .. interval_rate*10)\n        if GetCharacterCondition(27) or GetCharacterCondition(45) or GetCharacterCondition(51) then\n            yield(\"/wait \" .. interval_rate*10)\n        else\n            yield(\"/tp \"..FishingAetheryte)\n        end\n    end\n    \n    if GetDistanceToPoint(UnmountPosition[1],UnmountPosition[2],UnmountPosition[3]) > 20 then\n    MoveTo(UnmountPosition[1],UnmountPosition[2],UnmountPosition[3],0,true)\n    yield(\"/wait \" .. interval_rate)\n    end\n    Dismount()\n    yield(\"/wait \" .. interval_rate)\n    MoveTo(FishingPosition[1],FishingPosition[2],FishingPosition[3],0,false)\n    yield(\"/wait \" .. interval_rate)\n    yield(start_fishing_command_1)\n    yield(\"/wait \" .. interval_rate)\n    yield(start_fishing_command_2)\n\nend\n\nfunction Main()\n    -----------------------------------------------------------------------------\n    i_count = tonumber(GetInventoryFreeSlotCount())\n    --wait while gathering status\n    while (not (i_count < num_inventory_free_slot_threshold)) and (not CanExtractMateria(100)) do\n        yield(\"/wait \" .. interval_rate * 200)\n        i_count = tonumber(GetInventoryFreeSlotCount())\n    end\n    ---------------------------------------------------------------------------------\n\n    --waiting to complete last bit of gathering status\n    if (GetCharacterCondition(6) or GetCharacterCondition(42)) then\n        yield(\"/wait \" .. interval_rate * 24)\n    end\n\n    yield(\"/echo [自动钓收藏品] 停止钓鱼，执行其他任务\")\n    yield(\"/echo [自动钓收藏品] 正在检查食药, 精制魔晶石, 修理装备并提交收藏品\")\n    StopFishing()\n    yield(\"/wait \" .. interval_rate * 10)\n\n    --On site tasks\n    yield(\"/wait \" .. interval_rate * 10)\n    Dismount()\n    yield(\"/wait \" .. interval_rate * 10)\n    RepairExtractCheck()\n    yield(\"/wait \" .. interval_rate * 10)\n    UseMedicine()\n    yield(\"/wait \" .. interval_rate * 15)\n    EatFood()\n    yield(\"/wait \" .. interval_rate * 15)\n\n    i_count = tonumber(GetInventoryFreeSlotCount())\n    if i_count < num_inventory_free_slot_threshold then\n        yield(\"/echo [自动钓收藏品] 正在前往收藏品交易位置\")\n        CollectableAppraiserScripExchange()\n    end\n    yield(\"/wait \" .. interval_rate * 20)\n    yield(\"/echo [自动钓收藏品] 继续钓鱼\")\n    ContinueFishing()\n\n    -------------------------------------------------------------------------------\nend\n\ni_count = tonumber(GetInventoryFreeSlotCount())\nDismount()\nPluginsCheck()\n\nif not Check then\n    if (GetClassJobId()~=18) then\n        yield(job_change_command)\n    end\n    yield(\"/wait \" .. interval_rate * 10)\n    yield(\"/wait \" .. interval_rate * 10)\n    yield(\"/echo [自动钓收藏品] 开始自动钓收藏品\")\n    yield(\"/wait \" .. interval_rate * 10)\n    RepairExtractCheck()\n    yield(\"/wait \" .. interval_rate * 10)\n    UseMedicine()\n    yield(\"/wait \" .. interval_rate * 10)\n    EatFood()\n    yield(\"/wait \" .. interval_rate * 10)\n    --inventory after reduce\n    i_count = tonumber(GetInventoryFreeSlotCount())\n    if (i_count < num_inventory_free_slot_threshold) and CanTurnin() then\n        yield(\"/echo [自动钓收藏品] 前往提交收藏品并兑换\")\n        CollectableAppraiserScripExchange()\n        yield(\"/wait \" .. interval_rate * 30)\n    end\n\n    ContinueFishing()\n    setSNDPropertyIfNotSet(\"UseSNDTargeting\")\n    unsetSNDPropertyIfSet(\"StopMacroIfTargetNotFound\")\n    while not stop_main do\n        i_count = tonumber(GetInventoryFreeSlotCount())\n        yield(\"/echo [自动钓收藏品] 开始钓鱼\")\n        yield(\"/wait \" .. interval_rate)\n                Loop = Loop - 1\n                Main()\n                if Loop == 0 then\n                    stop_main = true\n                    yield(\"/echo [自动钓收藏品] 完成指定次数，结束任务\")\n                end\n        yield(\"/echo [自动钓收藏品] 剩余循环次数： \" .. Loop)\n        yield(\"/wait \" .. interval_rate)\n    end\nelse\n    yield(\"/e 请安装对应插件\")\nend",
        "CraftingLoop": false,
        "CraftLoopCount": 0,
        "IsLua": false,
        "Language": 2
      },
      {
        "$type": "SomethingNeedDoing.MacroNode, SomethingNeedDoing",
        "Name": "fate2",
        "Contents": "--[[\r\n\r\n********************************************************************************\r\n*                                Fate Farming                                  *\r\n*                               Version 2.21.6                                 *\r\n********************************************************************************\r\n\r\n\r\n********************************************************************************\r\n*                               必要插件                                       *\r\n********************************************************************************\r\n\r\nPlugins that are needed for it to work:\r\n\r\n    -> Something Need Doing [Expanded Edition] : (核心插件)   https://puni.sh/api/repository/croizat\r\n    -> VNavmesh :   (用于规划路线和移动)    https://puni.sh/api/repository/veyn\r\n    -> 某种形式的循环插件，用于攻击敌人。选一即可:\r\n        -> RotationSolver Reborn: https://raw.githubusercontent.com/FFXIV-CombatReborn/CombatRebornRepo/main/pluginmaster.json       \r\n        -> BossMod Reborn: https://raw.githubusercontent.com/FFXIV-CombatReborn/CombatRebornRepo/main/pluginmaster.json\r\n        -> Veyn's BossMod: https://puni.sh/api/repository/veyn\r\n        -> Wrath Combo: https://love.puni.sh/ment.json\r\n    -> 各种各样的AI躲避。选一即可: \r\n        -> BossMod Reborn: https://raw.githubusercontent.com/FFXIV-CombatReborn/CombatRebornRepo/main/pluginmaster.json\r\n        -> Veyn's BossMod: https://puni.sh/api/repository/veyn\r\n    -> TextAdvance: (用来和fate里的NPC互动) \r\n    -> Teleporter :  (用来传送)\r\n    -> Lifestream :  (用于更改实例[ChangeInstance][Exchange]（看不懂）) \r\n    https://raw.githubusercontent.com/NightmareXIV/MyDalamudPlugins/main/pluginmaster.json\r\n\r\n********************************************************************************\r\n*                                可选插件                                      *\r\n********************************************************************************\r\n\r\nThis Plugins are Optional and not needed unless you have it enabled in the settings:\r\n\r\n    -> AutoRetainer : (自动收雇员)   https://love.puni.sh/ment.json\r\n    -> Deliveroo : (自动交换军票)   https://plugins.carvel.li/\r\n    -> YesAlready : (自动确认选项)\r\n\r\n--------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n]]\r\n\r\n--#region Settings\r\n\r\n--[[\r\n********************************************************************************\r\n*                                   设置                                       *\r\n********************************************************************************\r\n]]\r\n\r\n--Pre Fate Settings\r\nFood                                = \"\"            --如果不想用任何食物，就将 \"\" 内留空. 如果想自动使用HQ食物就添加 <hq> 在食物后面，例如 \"烧烤暗色茄子 <hq>\"\r\nPotion                              = \"\"            --如果不想用任何药就将 \"\" 内留空.\r\nShouldSummonChocobo                 = true          --召唤陆行鸟吗？如果不召唤将true改为false\r\n    ResummonChocoboTimeLeft         = 3 * 60        --设置一个数字，如果搭档的剩余时间不足这几秒，自动召唤。\r\n    ChocoboStance                   = \"治疗战术\"      --设置搭档状态:跟随/自由战术/防护战术/治疗战术/进攻战术\r\n    ShouldAutoBuyGysahlGreens       = true          --如果你背包里没有基萨尔野菜则在海都自动购买99个基萨尔野菜（false为关闭）\r\nMountToUse                          = \"仙子猪大王\"    --前往fate时你想要使用的坐骑\r\n\r\n--Fate Combat Settings\r\nCompletionToIgnoreFate              = 80            --设置一个阈值，如果当前地区已完成的fate数量高于这个阈值，则跳过\r\nMinTimeLeftToIgnoreFate             = 3*60          --设置一个时间，如果fate剩余时间比这个时间少，则跳过（几个*60秒）\r\nCompletionToJoinBossFate            = 0             --设置一个数字，如果fate的进度低于这个数字，则跳过 (用于避免单挑boss)\r\n    CompletionToJoinSpecialBossFates = 20           --设置一个数字，如果是特殊fate则等待到这个时间\r\n    ClassForBossFates               = \"\"            --如果你想用特定的职业单挑boss，就在\"\"内设置为三个字母的职业缩写（国际服缩写）\r\n                                                      --例如骑士为 Ex: \"PLD\"\r\nJoinCollectionsFates                = true          --如果你不想打连续类型的fate则设置为 fates\r\nBonusFatesOnly                      = fates         --如果为true，将只打双倍fate\r\n\r\nMeleeDist                           = 2.5           --设置boss mod AI 近战攻击距离. 近战攻击 (自动攻击) 最大距离为 2.59y, 2.60 则会 \"超出攻击范围\"\r\nRangedDist                          = 20            --设置boss mod AI 远程攻击距离. 远敏和法系的最大攻击距离为 25.49y, 25.5 则会 \"超出攻击范围\"=\r\n\r\nRotationPlugin                      = \"BMR\"         --设置: RSR/BMR/VBM/Wrath/None\r\n    RSRAoeType                      = \"Ful\"         --设置: Cleave/Full/Off\r\n\r\n    -- For BMR/VBM only\r\n    RotationSingleTargetPreset      = \"autoduty\"    --2个猜想，一种可能是具有单目标策略的预设（用于迷失系列），另一种是用于单挑场景。\r\n    RotationAoePreset               = \"autoduty\"    --包含AOE+增益效果的策略预设。\r\n    RotationHoldBuffPreset          = \"autoduty\"    --预设在进度达到选定百分比时留存2分钟的技能。\r\n    PorcentageToHoldBuff            = 65            --理想情况下应充分利用增益效果，高于70%时若进度推进过快仍会浪费数秒。\r\nDodgingPlugin                       = \"BMR\"         --设置: BMR/VBM/None. 如果你的循环插件是BMR/VBM，那么这将被覆盖。\r\n\r\nIgnoreForlorns                      = false\r\n    IgnoreBigForlornOnly            = false\r\n\r\n--Post Fate Settings\r\nWaitUpTo                            = 10            --进行下一个FATE前等待上坐骑的最大秒数\r\n                                                        --实际等待时间将在3秒到该值之间随机生成\r\nEnableChangeInstance                = true          --当没有fate时是否切换副本区域 (只作用于 DT)\r\n    WaitIfBonusBuff                 = true          --如果你有\"危命奖励提高\"buff，则不切换副本区\r\n    NumberOfInstances               = 2\r\nShouldExchangeBicolorGemstones      = true          --是否自动兑换双色宝石收据\r\n    ItemToPurchase                  = \"图拉尔双色宝石的收据\"        -- 双色宝石的收据/图拉尔双色宝石的收据\r\nSelfRepair                          = false         --自己修理选项，如果设置为 false, 就去 海都找修理工\r\n    RepairAmount                    = 20            --设置一个阈值，低于此阈值将会自动修理装备 (如果不需要自动修理，请将其设置为0)\r\n    ShouldAutoBuyDarkMatter         = true          --如果你没有8级暗物质，则会自动从利姆萨的商人购买一组99个\r\nShouldExtractMateria                = true          --是否要自动精炼魔晶石\r\nRetainers                           = true          --是否自动收雇员\r\nShouldGrandCompanyTurnIn            = false         --是否自动交军票 (需要 Deliveroo 插件)\r\n    InventorySlotsLeft              = 5             --在执行上交前需要多少空余的背包空间\r\n\r\nEcho                                = \"All\"         --设置: All/Gems/None\r\nChatCommandType                     = \"e\"           -- 发送下一个fate的目标到聊天 可以改成 `e`  `p` 或其他 与游戏原生宏相同\r\n\r\nCompanionScriptMode                 = false         --如果您将fate脚本与配套脚本（如Atma Farmer）一起使用，则设置为true\r\n\r\n--#endregion Settings\r\n\r\n--[[\r\n********************************************************************************\r\n*           这里是代码：除非你知道你在做什么不然不要动它                       *\r\n********************************************************************************\r\n]]\r\n\r\n--#region Plugin Checks and Setting Init\r\n\r\nif not HasPlugin(\"vnavmesh\") then\r\n    yield(\"/echo [FATE] 请安装 vnavmesh\")\r\nend\r\n\r\nif not HasPlugin(\"BossMod\") and not HasPlugin(\"BossModReborn\") then\r\n    yield(\"/echo [FATE] 请安装一个AI躲避插件，无论是Veyn的BossMod还是BossMod Reborn\")\r\nend\r\n\r\nif not HasPlugin(\"TextAdvance\") then\r\n    yield(\"/echo [FATE] 请安装 TextAdvance\")\r\nend\r\n\r\nif EnableChangeInstance == true  then\r\n    if HasPlugin(\"Lifestream\") == false then\r\n        yield(\"/echo [FATE] 请安装 Lifestream 或在设置中禁用 ChangeInstance\")\r\n    end\r\nend\r\nif Retainers then\r\n    if not HasPlugin(\"AutoRetainer\") then\r\n        yield(\"/echo [FATE] 请安装 AutoRetainer\")\r\n    end\r\nend\r\nif ShouldGrandCompanyTurnIn then\r\n    if not HasPlugin(\"Deliveroo\") then\r\n        ShouldGrandCompanyTurnIn = false\r\n        yield(\"/echo [FATE] 请安装 Deliveroo\")\r\n    end\r\nend\r\nif ShouldExtractMateria then\r\n    if HasPlugin(\"YesAlready\") == false then\r\n        yield(\"/echo [FATE] 请安装 YesAlready\")\r\n    end\r\nend\r\nif DodgingPlugin == \"None\" then\r\n    -- do nothing\r\nelseif RotationPlugin == \"BMR\" and DodgingPlugin ~= \"BMR\" then\r\n    DodgingPlugin = \"BMR\"\r\nelseif RotationPlugin == \"VBM\" and DodgingPlugin ~= \"VBM\"  then\r\n    DodgingPlugin = \"VBM\"\r\nend\r\n\r\nyield(\"/at y\")\r\n\r\n--snd property\r\nfunction setSNDProperty(propertyName, value)\r\n    local currentValue = GetSNDProperty(propertyName)\r\n    if currentValue ~= value then\r\n        SetSNDProperty(propertyName, tostring(value))\r\n        LogInfo(\"[SetSNDProperty] \" .. propertyName .. \" set to \" .. tostring(value))\r\n    end\r\nend\r\n\r\nsetSNDProperty(\"UseItemStructsVersion\", true)\r\nsetSNDProperty(\"UseSNDTargeting\", true)\r\nsetSNDProperty(\"StopMacroIfTargetNotFound\", false)\r\nsetSNDProperty(\"StopMacroIfCantUseItem\", false)\r\nsetSNDProperty(\"StopMacroIfItemNotFound\", false)\r\nsetSNDProperty(\"StopMacroIfAddonNotFound\", false)\r\nsetSNDProperty(\"StopMacroIfAddonNotVisible\", false)\r\n\r\n--#endregion Plugin Checks and Setting Init\r\n\r\n--#region Data\r\n\r\nCharacterCondition = {\r\n    dead=2,\r\n    mounted=4,\r\n    inCombat=26,\r\n    casting=27,\r\n    occupiedInEvent=31,\r\n    occupiedInQuestEvent=32,\r\n    occupied=33,\r\n    boundByDuty34=34,\r\n    occupiedMateriaExtractionAndRepair=39,\r\n    betweenAreas=45,\r\n    jumping48=48,\r\n    jumping61=61,\r\n    occupiedSummoningBell=50,\r\n    betweenAreasForDuty=51,\r\n    boundByDuty56=56,\r\n    mounting57=57,\r\n    mounting64=64,\r\n    beingMoved=70,\r\n    flying=77\r\n}\r\n\r\nClassList =\r\n{\r\n    gla = { classId=1, className=\"Gladiator\", isMelee=true, isTank=true },\r\n    pgl = { classId=2, className=\"Pugilist\", isMelee=true, isTank=false },\r\n    mrd = { classId=3, className=\"Marauder\", isMelee=true, isTank=true },\r\n    lnc = { classId=4, className=\"Lancer\", isMelee=true, isTank=false },\r\n    arc = { classId=5, className=\"Archer\", isMelee=false, isTank=false },\r\n    cnj = { classId=6, className=\"Conjurer\", isMelee=false, isTank=false },\r\n    thm = { classId=7, className=\"Thaumaturge\", isMelee=false, isTank=false },\r\n    pld = { classId=19, className=\"骑士\", isMelee=true, isTank=true },\r\n    mnk = { classId=20, className=\"武僧\", isMelee=true, isTank=false },\r\n    war = { classId=21, className=\"战士\", isMelee=true, isTank=true },\r\n    drg = { classId=22, className=\"龙骑士\", isMelee=true, isTank=false },\r\n    brd = { classId=23, className=\"吟游诗人\", isMelee=false, isTank=false },\r\n    whm = { classId=24, className=\"白魔法师\", isMelee=false, isTank=false },\r\n    blm = { classId=25, className=\"黑魔法师\", isMelee=false, isTank=false },\r\n    acn = { classId=26, className=\"Arcanist\", isMelee=false, isTank=false },\r\n    smn = { classId=27, className=\"召唤师\", isMelee=false, isTank=false },\r\n    sch = { classId=28, className=\"学者\", isMelee=false, isTank=false },\r\n    rog = { classId=29, className=\"Rogue\", isMelee=false, isTank=false },\r\n    nin = { classId=30, className=\"忍者\", isMelee=true, isTank=false },\r\n    mch = { classId=31, className=\"机工士\", isMelee=false, isTank=false},\r\n    drk = { classId=32, className=\"暗黑骑士\", isMelee=true, isTank=true },\r\n    ast = { classId=33, className=\"占星术士\", isMelee=false, isTank=false },\r\n    sam = { classId=34, className=\"武士\", isMelee=true, isTank=false },\r\n    rdm = { classId=35, className=\"赤魔法师\", isMelee=false, isTank=false },\r\n    blu = { classId=36, className=\"青魔法师\", isMelee=false, isTank=false },\r\n    gnb = { classId=37, className=\"绝枪战士\", isMelee=true, isTank=true },\r\n    dnc = { classId=38, className=\"舞者\", isMelee=false, isTank=false },\r\n    rpr = { classId=39, className=\"钐镰客\", isMelee=true, isTank=false },\r\n    sge = { classId=40, className=\"贤者\", isMelee=false, isTank=false },\r\n    vpr = { classId=41, className=\"蝰蛇剑士\", isMelee=true, isTank=false },\r\n    pct = { classId=42, className=\"绘灵法师\", isMelee=false, isTank=false }\r\n}\r\n\r\nBicolorExchangeData =\r\n{\r\n    {\r\n        shopKeepName = \"广域交易商 加德弗里德\",\r\n        zoneName = \"旧萨雷安\",\r\n        zoneId = 962,\r\n        aetheryteName = \"旧萨雷安\",\r\n        x=78, y=5, z=-37,\r\n        shopItems =\r\n        {\r\n            { itemName = \"双色宝石的收据\", itemIndex = 5, price = 100 }\r\n        }\r\n    },\r\n    {\r\n        shopKeepName = \"广域交易商 贝瑞尔\",\r\n        zoneName = \"九号解决方案\",\r\n        zoneId = 1186,\r\n        aetheryteName = \"九号解决方案\",\r\n        x=-198.47, y=0.92, z=-6.95,\r\n        miniAethernet = {\r\n            name = \"联合商城\",\r\n            x=-157.74, y=0.29, z=17.43\r\n        },\r\n        shopItems =\r\n        {\r\n            { itemName = \"图拉尔双色宝石的收据\", itemIndex = 5, price = 100 }\r\n        }\r\n    }\r\n}\r\n\r\nFatesData = {\r\n    {\r\n        zoneName = \"中拉诺西亚\",\r\n        zoneId = 134,\r\n        fatesList = {\r\n            collectionsFates= {},\r\n            otherNpcFates= {\r\n                { fateName=\"Thwack-a-Mole\" , npcName=\"Troubled Tiller\" },\r\n                { fateName=\"Yellow-bellied Greenbacks\", npcName=\"Yellowjacket Drill Sergeant\"},\r\n                { fateName=\"The Orange Boxes\", npcName=\"Farmer in Need\" }\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"Lower La Noscea\",\r\n        zoneId = 135,\r\n        fatesList = {\r\n            collectionsFates= {},\r\n            otherNpcFates= {\r\n                { fateName=\"Away in a Bilge Hold\" , npcName=\"Yellowjacket Veteran\" },\r\n                { fateName=\"Fight the Flower\", npcName=\"Furious Farmer\" }\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"Central Thanalan\",\r\n        zoneId = 141,\r\n        fatesList = {\r\n            collectionsFates= {\r\n                { fateName=\"Let them Eat Cactus\", npcName=\"Hungry Hobbledehoy\"},\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"A Few Arrows Short of a Quiver\" , npcName=\"Crestfallen Merchant\" },\r\n                { fateName=\"Wrecked Rats\", npcName=\"Coffer & Coffin Heavy\" },\r\n                { fateName=\"Something to Prove\", npcName=\"Cowardly Challenger\" }\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"Eastern Thanalan\",\r\n        zoneId = 145,\r\n        fatesList = {\r\n            collectionsFates= {},\r\n            otherNpcFates= {\r\n                { fateName=\"Attack on Highbridge: Denouement\" , npcName=\"Brass Blade\" }\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"Southern Thanalan\",\r\n        zoneId = 146,\r\n        fatesList = {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        },\r\n        flying = false\r\n    },\r\n    {\r\n        zoneName = \"Outer La Noscea\",\r\n        zoneId = 180,\r\n        fatesList = {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        },\r\n        flying = false\r\n    },\r\n    {\r\n        zoneName = \"库尔札斯中央高地\",\r\n        zoneId = 155,\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            specialFates = {\r\n                \"He Taketh It with His Eyes\" --behemoth\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"库尔札斯西部高地\",\r\n        zoneId = 397,\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"摩杜纳\",\r\n        zoneId = 156,\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"阿巴拉提亚云海\",\r\n        zoneId = 401,\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"魔大陆阿济兹拉\",\r\n        zoneId = 402,\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"龙堡参天高地\",\r\n        zoneId = 398,\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            specialFates = {\r\n                \"Coeurls Chase Boys Chase Coeurls\" --coeurlregina\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"龙堡内陆低地\",\r\n        zoneId=399,\r\n        tpZoneId = 478,\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"翻云雾海\",\r\n        zoneId=400,\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"The Fringes\",\r\n        zoneId = 612,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"Showing The Recruits What For\", npcName=\"Storm Commander Bharbennsyn\" },\r\n                { fateName=\"Get Sharp\", npcName=\"M Tribe Youth\" },\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"The Mail Must Get Through\", npcName=\"Storm Herald\" },\r\n                { fateName=\"The Antlion's Share\", npcName=\"M Tribe Ranger\" },\r\n                { fateName=\"Double Dhara\", npcName=\"Resistence Fighter\" },\r\n                { fateName=\"Keeping the Peace\", npcName=\"Resistence Fighter\" }\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"The Peaks\",\r\n        zoneId = 620,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"Fletching Returns\", npcName=\"Sorry Sutler\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"Resist, Die, Repeat\", npcName=\"Wounded Fighter\" },\r\n                { fateName=\"And the Bandits Played On\", npcName=\"Frightened Villager\" },\r\n                { fateName=\"Forget-me-not\", npcName=\"Coldhearth Resident\" },\r\n                { fateName=\"Of Mice and Men\", npcName=\"Furious Farmer\" }\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {\r\n                \"The Magitek Is Back\", --escort\r\n                \"A New Leaf\" --escort\r\n            }\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"The Lochs\",\r\n        zoneId = 621,\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            specialFates = {\r\n                \"A Horse Outside\" --ixion\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"The Ruby Sea\",\r\n        zoneId = 613,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"Treasure Island\", npcName=\"Blue Avenger\" },\r\n                { fateName=\"The Coral High Ground\", npcName=\"Busy Beachcomber\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"Another One Bites The Dust\", npcName=\"Pirate Youth\" },\r\n                { fateName=\"Ray Band\", npcName=\"Wounded Confederate\" },\r\n                { fateName=\"Bilge-hold Jin\", npcName=\"Green Confederate\" }\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"Yanxia\",\r\n        zoneId = 614,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"Rice and Shine\", npcName=\"Flabbergasted Farmwife\" },\r\n                { fateName=\"More to Offer\", npcName=\"Ginko\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"Freedom Flies\", npcName=\"Kinko\" },\r\n                { fateName=\"A Tisket, a Tasket\", npcName=\"Gyogun of the Most Bountiful Catch\" }\r\n            },\r\n            specialFates = {\r\n                \"Foxy Lady\" --foxyyy\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"The Azim Steppe\",\r\n        zoneId = 622,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"The Dataqi Chronicles: Duty\", npcName=\"Altani\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"Rock for Food\", npcName=\"Oroniri Youth\" },\r\n                { fateName=\"Killing Dzo\", npcName=\"Olkund Dzotamer\" },\r\n                { fateName=\"They Shall Not Want\", npcName=\"Mol Shepherd\" },\r\n                { fateName=\"A Good Day to Die\", npcName=\"Qestiri Merchant\" }\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"雷克兰德\",\r\n        zoneId = 813,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"樵夫之歌\", npcName=\"雷克兰德的樵夫\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"与紫叶团的战斗之卑鄙陷阱\", npcName=\"像是旅行商人的男子\" }, --24 防御\r\n                { fateName=\"污秽之血\", npcName=\"乔布要塞的卫兵\" } --24 防御\r\n            },\r\n            fatesWithContinuations = {\r\n                \"高度进化\"\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"珂露西亚岛\",\r\n        zoneId = 814,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"制作战士之自走人偶\", npcName=\"图尔家族的技师\" }\r\n            },\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            specialFates = {\r\n                \"激斗畏惧装甲之秘密武器\" -- 畏惧装甲（特殊FATE）\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"安穆·艾兰\",\r\n        zoneId = 815,\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {},\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {\r\n                \"托尔巴龟最棒\" -- 去的的路上难打\r\n            }\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"伊尔美格\",\r\n        zoneId = 816,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"仙子尾巴之金黄花蜜\", npcName=\"寻找花蜜的仙子\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"仙子尾巴之魔物包围网\", npcName=\"寻找花蜜的仙子\" }\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"拉凯提卡大森林\",\r\n        zoneId = 817,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"粉红鹳\", npcName=\"夜之民导师\" },\r\n                { fateName=\"缅楠的巡逻之补充弓箭\", npcName=\"散弓音 缅楠\" },\r\n                { fateName=\"传说诞生\", npcName=\"法诺的看守\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"吉梅与萨梅\", npcName=\"血红枪 吉梅\" }, --24 防御\r\n                { fateName=\"死相陆鸟——刻莱诺\", npcName=\"法诺的猎人\" } --22 boss\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"黑风海\",\r\n        zoneId = 818,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"灾厄的古塔尼亚之收集红血珊瑚\", npcName=\"提乌嘶·澳恩\" },\r\n                { fateName=\"珍珠永恒\", npcName=\"鳍人族捕鱼人\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"灾厄的古塔尼亚之开始追踪\", npcName=\"提乌嘶·澳恩\" }, --23 一般\r\n                { fateName=\"灾厄的古塔尼亚之兹姆嘶登场\", npcName=\"提乌嘶·澳恩\" }, --23 一般\r\n                { fateName=\"灾厄的古塔尼亚之保护提乌嘶\", npcName=\"提乌嘶·澳恩\" }, --24 防御\r\n                { fateName=\"灾厄的古塔尼亚之护卫提乌嘶\", npcName=\"提乌嘶·澳恩\" }, --护送\r\n                { fateName=\"灾厄的古塔尼亚之准备决战\", npcName=\"提乌嘶·澳恩\" } --24 防御\r\n            },\r\n            fatesWithContinuations = {},\r\n            specialFates = {\r\n                \"灾厄的古塔尼亚之深海讨伐战\" -- 古塔尼亚（特殊FATE）\r\n            },\r\n            blacklistedFates= {\r\n                \"贝汁物语\", --护送\r\n                \"灾厄的古塔尼亚之护卫提乌嘶\" --护送\r\n            }\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"迷津\",\r\n        zoneId = 956,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"迷津风玫瑰\", npcName=\"束手无策的研究员\" },\r\n                { fateName=\"纯天然保湿护肤品\", npcName=\"皮肤很好的研究员\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"牧羊人的日常\", npcName=\"种畜研究所的驯兽人\" } --24 タワーディフェンス\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"萨维奈岛\",\r\n        zoneId = 957,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"芳香的炼金术士：危险的芬芳\", npcName=\"调香师 萨加巴缇\" }\r\n            },\r\n            otherNpcFates= {\r\n               { fateName=\"猴子军团\", npcName=\"采草药的女孩\" },\r\n               { fateName=\"少年与海\", npcName=\"渔夫的儿子\" } --24 防御\r\n            },\r\n            fatesWithContinuations = {},\r\n            specialFates = {\r\n                \"兽道诸神信仰：伪神降临\" -- 兽道神明灯天王（特殊FATE）\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"加雷马\",\r\n        zoneId = 958,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"资源回收分秒必争\", npcName=\"沦为难民的魔导技师\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"魔导技师的归乡之旅：启程\", npcName=\"柯尔特隆纳协漩尉\" }, --22 boss\r\n                { fateName=\"魔导技师的归乡之旅：落入陷阱\", npcName=\"埃布雷尔诺\" }, --24 防御\r\n                { fateName=\"魔导技师的归乡之旅：实弹射击\", npcName=\"柯尔特隆纳协漩尉\" }, --23 一般\r\n                { fateName=\"雪原的巨魔\", npcName=\"幸存的难民\" } --24 防御\r\n            },\r\n            fatesWithContinuations = {\r\n                { fateName=\"魔导技师的归乡之旅：指挥机梅塔特隆\", continuationIsBoss=true }\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"叹息海\",\r\n        zoneId = 959,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"如何追求兔生刺激\", npcName=\"担惊威\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"叹息的白兔之轰隆隆大爆炸\", npcName=\"战兵威\" }, --24 タワーディフェンス\r\n                { fateName=\"叹息的白兔之乱糟糟大失控\", npcName=\"落名威\" }, --23 通常\r\n                { fateName=\"叹息的白兔之怒冲冲大处理\", npcName=\"落名威\" } --22 ボス\r\n            },\r\n            fatesWithContinuations = {},\r\n            blacklistedFates= {\r\n                \"跨海而来的老饕\", --由于斜坡上视野不佳，可能什么都做不了就呆站着\r\n            }\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"天外天垓\",\r\n        zoneId = 960,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"侵略兵器召回指令：扩建通信设备\", npcName=\"N-6205\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"荣光之翼——阿尔·艾因\", npcName=\"阿尔·艾因的朋友\" }, --22 boss\r\n                { fateName=\"侵略兵器召回指令：保护N-6205\", npcName=\"N-6205\"}, --24 防御\r\n                { fateName=\"走向永恒的结局\", npcName=\"米克·涅尔\" } --24 防御\r\n            },\r\n            fatesWithContinuations = {},\r\n            specialFates = {\r\n                \"\t侵略兵器召回指令：破坏侵略兵器希\" -- 希（特殊FATE）\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"厄尔庇斯\",\r\n        zoneId = 961,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"望请索克勒斯先生谅解\", npcName=\"负责植物的观察者\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"创造计划：过于新颖的理念\", npcName=\"神秘莫测 莫勒图斯\" }, --23 一般\r\n                { fateName=\"创造计划：伊娥观察任务\", npcName=\"神秘莫测 莫勒图斯\" }, --23 一般\r\n                { fateName=\"告死鸟\", npcName=\"一角兽的观察者\" }, --24 防御\r\n            },\r\n            fatesWithContinuations = {\r\n                { fateName=\"创造计划：过于新颖的理念\", continuationIsBoss=true },\r\n                { fateName=\"创造计划：伊娥观察任务\", continuationIsBoss=true }\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName = \"奥阔帕恰山\",\r\n        zoneId = 1187,\r\n        fatesList= {\r\n            collectionsFates= {},\r\n            otherNpcFates= {\r\n                { fateName=\"牧场关门\", npcName=\"健步如飞 基维利\" }, --23 一般\r\n                { fateName=\"跃动的火热——山火\", npcName=\"健步如飞 基维利\" }, --22 boss\r\n                { fateName=\"不死之人\", npcName=\"扫墓的尤卡巨人\" }, --23 一般\r\n                { fateName=\"失落的山顶都城\", npcName=\"守护遗迹的尤卡巨人\" }, --24 防御\r\n                { fateName=\"咖啡豆岌岌可危\", npcName=\"咖啡农园的工作人员\" }, --24 防御\r\n                { fateName=\"千年孤独\", npcName=\"其瓦固佩刀者\" }, --23 一般\r\n                { fateName=\"飞天魔厨——佩鲁的天敌\", npcName=\"佩鲁佩鲁的旅行商人\" }, --22 boss\r\n                { fateName=\"狼之家族\", npcName=\"佩鲁佩鲁族旅行商人\" }  --23 一般\r\n            },\r\n            fatesWithContinuations = {\r\n                { fateName=\"不死之人\", continuationIsBoss=true },\r\n                { fateName=\"千年孤独\", continuationIsBoss=true }\r\n            },\r\n            blacklistedFates= {\r\n                --\"只有爆炸\", -- 不知道为什么过不去\r\n                --\"狼之家族\", -- 由于同一地点有多个同名NPC存在\r\n                --\"飞天魔厨——佩鲁的天敌\", -- 由于同一地点有多个同名NPC存在\r\n                \"跃动的火热——山火\" -- 会抽搐\r\n            }\r\n        }\r\n    },\r\n    {\r\n        zoneName=\"克扎玛乌卡湿地\",\r\n        zoneId=1188,\r\n        fatesList={\r\n            collectionsFates={\r\n                { fateName=\"密林淘金\", npcName=\"莫布林族采集者\" },\r\n                { fateName=\"巧若天工\", npcName=\"哈努族手艺人\" },\r\n                \r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"怪力大肚王——非凡飔戮龙\", npcName=\"哈努族捕鱼人\" }, --22 boss\r\n                { fateName=\"芦苇荡的时光\", npcName=\"哈努族农夫\" }, --23 一般\r\n                { fateName=\"贡品小偷\", npcName=\"哈努族巫女\" }, --24 防御\r\n                { fateName=\"横征暴敛？\", npcName=\"佩鲁佩鲁族商人\" }, --24 防御\r\n                { fateName=\"美丽菇世界\", npcName=\"贴心巧匠 巴诺布罗坷\" }  --23 一般\r\n            },\r\n            fatesWithContinuations = {\r\n                { fateName=\"美丽菇世界\", continuationIsBoss=true }\r\n            },\r\n            blacklistedFates= {\r\n                --\"横征暴敛？\" -- 由于同一地点有多个同名NPC存在\r\n            }\r\n        }\r\n    },\r\n    {\r\n        zoneName=\"亚克特尔树海\",\r\n        zoneId=1189,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"逃离恐怖菇\", npcName=\"霍比格族采集者\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"顶击大貒猪\", npcName=\"灵豹之民猎人\" }, --23 一般\r\n                { fateName=\"血染利爪——米尤鲁尔\", npcName=\"灵豹之民猎人\" }, --22 boss\r\n                { fateName=\"致命螳螂\", npcName=\"灵豹之民猎人\" }, --23 一般\r\n                { fateName=\"辉鳞族不法之徒袭击事件\", npcName=\"朵普罗族枪手\" }, --23 一般\r\n                { fateName=\"守护秘药之战\", npcName=\"霍比格族运货人\" }  --24 防御\r\n            },\r\n            fatesWithContinuations = {\r\n                { fateName=\"顶击大貒猪\", continuationIsBoss=false },\r\n                { fateName=\"辉鳞族不法之徒袭击事件\", continuationIsBoss=true }\r\n            },\r\n            blacklistedFates= {\r\n                --\"顶击大貒猪\", -- 由于同一地点有多个同名NPC存在\r\n                --\"血染利爪——米尤鲁尔\", -- 由于同一地点有多个同名NPC存在\r\n                --\"致命螳螂\" -- 由于同一地点有多个同名NPC存在\r\n            }\r\n        }\r\n    },\r\n    {\r\n        zoneName=\"夏劳尼荒野\",\r\n        zoneId=1190,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"剃毛时间\", npcName=\"迎曦之民采集者\" },\r\n                { fateName=\"蛇王得酷热涅：狩猎前的准备\", npcName=\"夕阳尚红 布鲁克·瓦\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"死而复生的恶棍——阴魂不散 扎特夸\", npcName=\"迎曦之民劳动者\" }, --22 boss\r\n                { fateName=\"不甘的冲锋者——灰达奇\", npcName=\"崇灵之民男性\" }, --22 boss\r\n                { fateName=\"和牛一起旅行\", npcName=\"崇灵之民女性\" }, --23 一般\r\n                { fateName=\"大湖之恋\", npcName=\"崇灵之民渔夫\" }, --24 防御\r\n                { fateName=\"神秘翼龙荒野奇谈\", npcName=\"佩鲁佩鲁族旅行商人\" }  --23 一般\r\n            },\r\n            fatesWithContinuations = {\r\n                { fateName=\"蛇王得酷热涅：狩猎的杀手锏\", continuationIsBoss=false }\r\n            },\r\n            specialFates = {\r\n                \"蛇王得酷热涅：荒野的死斗\" -- 得酷热涅（特殊FATE）\r\n            },\r\n            blacklistedFates= {}\r\n        }\r\n    },\r\n    {\r\n        zoneName=\"遗产之地\",\r\n        zoneId=1191,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"药师的工作\", npcName=\"迎曦之民栽培者\" },\r\n                { fateName=\"亮闪闪的可回收资源\", npcName=\"英姿飒爽的再造者\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"机械迷城\", npcName=\"初出茅庐的狩猎者\" }, --23 一般\r\n                { fateName=\"你来我往\", npcName=\"初出茅庐的狩猎者\" }, --23 一般\r\n                { fateName=\"剥皮行者\", npcName=\"陷入危机的狩猎者\" }, --23 一般\r\n                { fateName=\"机械公敌\", npcName=\"走投无路的再造者\" }, --23 一般\r\n                { fateName=\"铭刻于灵魂中的恐惧\", npcName=\"终流地的再造者\" }, --23 一般\r\n                { fateName=\"前路多茫然\", npcName=\"害怕的运送者\" }  --23 一般\r\n            },\r\n            fatesWithContinuations = {\r\n                { fateName=\"机械公敌\", continuationIsBoss=false }\r\n            },\r\n            blacklistedFates= {\r\n                \"亮闪闪的可回收资源\", -- 地形很糟糕\r\n                \"print('I hate snakes')\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        zoneName=\"活着的记忆\",\r\n        zoneId=1192,\r\n        fatesList= {\r\n            collectionsFates= {\r\n                { fateName=\"良种难求\", npcName=\"无失哨兵GX\" },\r\n                { fateName=\"记忆的碎片\", npcName=\"无失哨兵GX\" }\r\n            },\r\n            otherNpcFates= {\r\n                { fateName=\"为了运河镇的安宁\", npcName=\"无失哨兵GX\" }, --24 防御\r\n                { fateName=\"亩鼠米卡：盛装巡游开始\", npcName=\"滑稽巡游主宰\" }  --23 一般\r\n            },\r\n            fatesWithContinuations =\r\n            {\r\n                { fateName=\"水城噩梦\", continuationIsBoss=ture },\r\n                { fateName=\"亩鼠米卡：盛装巡游开始\", continuationIsBoss=ture }\r\n            },\r\n            specialFates =\r\n            {\r\n                \"亩鼠米卡：盛装巡游皆大欢喜\"\r\n            },\r\n            blacklistedFates= {\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n--#endregion Data\r\n\r\n--#region Fate Functions\r\nfunction IsCollectionsFate(fateName)\r\n    for i, collectionsFate in ipairs(SelectedZone.fatesList.collectionsFates) do\r\n        if collectionsFate.fateName == fateName then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction IsBossFate(fateId)\r\n    local fateIcon = GetFateIconId(fateId)\r\n    return fateIcon == 60722\r\nend\r\n\r\nfunction IsOtherNpcFate(fateName)\r\n    for i, otherNpcFate in ipairs(SelectedZone.fatesList.otherNpcFates) do\r\n        if otherNpcFate.fateName == fateName then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction IsSpecialFate(fateName)\r\n    if SelectedZone.fatesList.specialFates == nil then\r\n        return false\r\n    end\r\n    for i, specialFate in ipairs(SelectedZone.fatesList.specialFates) do\r\n        if specialFate == fateName then\r\n            return true\r\n        end\r\n    end\r\nend\r\n\r\nfunction IsBlacklistedFate(fateName)\r\n    for i, blacklistedFate in ipairs(SelectedZone.fatesList.blacklistedFates) do\r\n        if blacklistedFate == fateName then\r\n            return true\r\n        end\r\n    end\r\n    if not JoinCollectionsFates then\r\n        for i, collectionsFate in ipairs(SelectedZone.fatesList.collectionsFates) do\r\n            if collectionsFate.fateName == fateName then\r\n                return true\r\n            end\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction GetFateNpcName(fateName)\r\n    for i, fate in ipairs(SelectedZone.fatesList.otherNpcFates) do\r\n        if fate.fateName == fateName then\r\n            return fate.npcName\r\n        end\r\n    end\r\n    for i, fate in ipairs(SelectedZone.fatesList.collectionsFates) do\r\n        if fate.fateName == fateName then\r\n            return fate.npcName\r\n        end\r\n    end\r\nend\r\n\r\nfunction IsFateActive(fateId)\r\n    local activeFates = GetActiveFates()\r\n    for i = 0, activeFates.Count-1 do\r\n        if fateId == activeFates[i] then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction EorzeaTimeToUnixTime(eorzeaTime)\r\n    return eorzeaTime/(144/7) -- 24h Eorzea Time equals 70min IRL\r\nend\r\n\r\nfunction SelectNextZone()\r\n    local nextZone = nil\r\n    local nextZoneId = GetZoneID()\r\n\r\n    for i, zone in ipairs(FatesData) do\r\n        if nextZoneId == zone.zoneId then\r\n            nextZone = zone\r\n        end\r\n    end\r\n    if nextZone == nil then\r\n        yield(\"/echo [FATE] 为支持当前区域。没有关于该区域的fate数据。\")\r\n        nextZone = {\r\n            zoneName = \"\",\r\n            zoneId = nextZoneId,\r\n            fatesList= {\r\n                collectionsFates= {},\r\n                otherNpcFates= {},\r\n                bossFates= {},\r\n                blacklistedFates= {},\r\n                fatesWithContinuations = {}\r\n            }\r\n        }\r\n    end\r\n\r\n    nextZone.zoneName = nextZone.zoneName\r\n    nextZone.aetheryteList = {}\r\n    local aetheryteIds = GetAetherytesInZone(nextZone.zoneId)\r\n    for i=0, aetheryteIds.Count-1 do\r\n        local aetherytePos = GetAetheryteRawPos(aetheryteIds[i])\r\n        local aetheryteTable = {\r\n            aetheryteName = GetAetheryteName(aetheryteIds[i]),\r\n            aetheryteId = aetheryteIds[i],\r\n            x = aetherytePos.Item1,\r\n            y = QueryMeshPointOnFloorY(aetherytePos.Item1, 1024, aetherytePos.Item2, true, 50),\r\n            z = aetherytePos.Item2\r\n        }\r\n        table.insert(nextZone.aetheryteList, aetheryteTable)\r\n    end\r\n\r\n    if nextZone.flying == nil then\r\n        nextZone.flying = true\r\n    end\r\n\r\n    return nextZone\r\nend\r\n\r\n--[[\r\n    Given two fates, picks the better one based on priority progress -> is bonus -> time left -> distance\r\n]]\r\nfunction SelectNextFateHelper(tempFate, nextFate)\r\n    if BonusFatesOnly then\r\n        if not tempFate.isBonusFate and nextFate ~= nil and nextFate.isBonusFate then\r\n            return nextFate\r\n        elseif tempFate.isBonusFate and (nextFate == nil or not nextFate.isBonusFate) then\r\n            return tempFate\r\n        elseif not tempFate.isBonusFate and (nextFate == nil or not nextFate.isBonusFate) then\r\n            return nil\r\n        end\r\n        -- if both are bonus fates, go through the regular fate selection process\r\n    end\r\n\r\n    if tempFate.timeLeft < MinTimeLeftToIgnoreFate or tempFate.progress > CompletionToIgnoreFate then\r\n        return nextFate\r\n    else\r\n        if nextFate == nil then\r\n                LogInfo(\"[FATE] Selecting #\"..tempFate.fateId..\" because no other options so far.\")\r\n                return tempFate\r\n        -- elseif nextFate.startTime == 0 and tempFate.startTime > 0 then -- nextFate is an unopened npc fate\r\n        --     LogInfo(\"[FATE] Selecting #\"..tempFate.fateId..\" because other fate #\"..nextFate.fateId..\" is an unopened npc fate.\")\r\n        --     return tempFate\r\n        -- elseif tempFate.startTime == 0 and nextFate.startTime > 0 then -- tempFate is an unopened npc fate\r\n        --     return nextFate\r\n        elseif nextFate.timeLeft < MinTimeLeftToIgnoreFate or nextFate.progress > CompletionToIgnoreFate then\r\n            return tempFate\r\n        else -- select based on progress\r\n            if tempFate.progress > nextFate.progress then\r\n                LogInfo(\"[FATE] Selecting #\"..tempFate.fateId..\" because other fate #\"..nextFate.fateId..\" has less progress.\")\r\n                return tempFate\r\n            elseif tempFate.progress < nextFate.progress then\r\n                LogInfo(\"[FATE] Selecting #\"..nextFate.fateId..\" because other fate #\"..tempFate.fateId..\" has less progress.\")\r\n                return nextFate\r\n            else\r\n                if (nextFate.isBonusFate and tempFate.isBonusFate) or (not nextFate.isBonusFate and not tempFate.isBonusFate) then\r\n                    if tempFate.timeLeft < nextFate.timeLeft then -- select based on time left\r\n                        LogInfo(\"[FATE] Selecting #\"..tempFate.fateId..\" because other fate #\"..nextFate.fateId..\" has more time left.\")\r\n                        return tempFate\r\n                    elseif tempFate.timeLeft > nextFate.timeLeft then\r\n                        LogInfo(\"[FATE] Selecting #\"..tempFate.fateId..\" because other fate #\"..nextFate.fateId..\" has more time left.\")\r\n                        return nextFate\r\n                    else\r\n                        tempFatePlayerDistance = GetDistanceToPoint(tempFate.x, tempFate.y, tempFate.z)\r\n                        nextFatePlayerDistance = GetDistanceToPoint(nextFate.x, nextFate.y, nextFate.z)\r\n                        if tempFatePlayerDistance < nextFatePlayerDistance then\r\n                            LogInfo(\"[FATE] Selecting #\"..tempFate.fateId..\" because other fate #\"..nextFate.fateId..\" is farther.\")\r\n                            return tempFate\r\n                        elseif tempFatePlayerDistance > nextFatePlayerDistance then\r\n                            LogInfo(\"[FATE] Selecting #\"..nextFate.fateId..\" because other fate #\"..nextFate.fateId..\" is farther.\")\r\n                            return nextFate\r\n                        else\r\n                            if tempFate.fateId < nextFate.fateId then\r\n                                return tempFate\r\n                            else\r\n                                return nextFate\r\n                            end\r\n                        end\r\n                    end\r\n                elseif nextFate.isBonusFate then\r\n                    return nextFate\r\n                elseif tempFate.isBonusFate then\r\n                    return tempFate\r\n                end\r\n            end\r\n        end\r\n    end\r\n    return nextFate\r\nend\r\n\r\nfunction BuildFateTable(fateId)\r\n    local fateTable = {\r\n        fateId = fateId,\r\n        fateName = GetFateName(fateId),\r\n        progress = GetFateProgress(fateId),\r\n        duration = GetFateDuration(fateId),\r\n        startTime = GetFateStartTimeEpoch(fateId),\r\n        x = GetFateLocationX(fateId),\r\n        y = GetFateLocationY(fateId),\r\n        z = GetFateLocationZ(fateId),\r\n        isBonusFate = GetFateIsBonus(fateId),\r\n    }\r\n    fateTable.npcName = GetFateNpcName(fateTable.fateName)\r\n\r\n    local currentTime = EorzeaTimeToUnixTime(GetCurrentEorzeaTimestamp())\r\n    if fateTable.startTime == 0 then\r\n        fateTable.timeLeft = 900\r\n    else\r\n        fateTable.timeElapsed = currentTime - fateTable.startTime\r\n        fateTable.timeLeft = fateTable.duration - fateTable.timeElapsed\r\n    end\r\n\r\n    fateTable.isCollectionsFate = IsCollectionsFate(fateTable.fateName)\r\n    fateTable.isBossFate = IsBossFate(fateTable.fateId)\r\n    fateTable.isOtherNpcFate = IsOtherNpcFate(fateTable.fateName)\r\n    fateTable.isSpecialFate = IsSpecialFate(fateTable.fateName)\r\n    fateTable.isBlacklistedFate = IsBlacklistedFate(fateTable.fateName)\r\n\r\n    fateTable.continuationIsBoss = false\r\n    fateTable.hasContinuation = false\r\n    for _, continuationFate in ipairs(SelectedZone.fatesList.fatesWithContinuations) do\r\n        if fateTable.fateName == continuationFate.fateName then\r\n            fateTable.hasContinuation = true\r\n            fateTable.continuationIsBoss = continuationFate.continuationIsBoss\r\n        end\r\n    end\r\n\r\n    return fateTable\r\nend\r\n\r\n--Gets the Location of the next Fate. Prioritizes anything with progress above 0, then by shortest time left\r\nfunction SelectNextFate()\r\n    local fates = GetActiveFates()\r\n    if fates == nil then\r\n        return\r\n    end\r\n\r\n    local nextFate = nil\r\n    for i = 0, fates.Count-1 do\r\n        local tempFate = BuildFateTable(fates[i])\r\n        LogInfo(\"[FATE] Considering fate #\"..tempFate.fateId..\" \"..tempFate.fateName)\r\n        LogInfo(\"[FATE] Time left on fate #:\"..tempFate.fateId..\": \"..math.floor(tempFate.timeLeft//60)..\"min, \"..math.floor(tempFate.timeLeft%60)..\"s\")\r\n        \r\n        if not (tempFate.x == 0 and tempFate.z == 0) then -- sometimes game doesn't send the correct coords\r\n            if not tempFate.isBlacklistedFate then -- check fate is not blacklisted for any reason\r\n                if tempFate.isBossFate then\r\n                    if (tempFate.isSpecialFate and tempFate.progress >= CompletionToJoinSpecialBossFates) or\r\n                        (not tempFate.isSpecialFate and tempFate.progress >= CompletionToJoinBossFate) then\r\n                        nextFate = SelectNextFateHelper(tempFate, nextFate)\r\n                    else\r\n                        LogInfo(\"[FATE] Skipping fate #\"..tempFate.fateId..\" \"..tempFate.fateName..\" due to boss fate with not enough progress.\")\r\n                    end\r\n                elseif (tempFate.isOtherNpcFate or tempFate.isCollectionsFate) and tempFate.startTime == 0 then\r\n                    if nextFate == nil then -- pick this if there's nothing else\r\n                        nextFate = tempFate\r\n                    elseif tempFate.isBonusFate then\r\n                        nextFate = SelectNextFateHelper(tempFate, nextFate)\r\n                    elseif nextFate.startTime == 0 then -- both fates are unopened npc fates\r\n                        nextFate = SelectNextFateHelper(tempFate, nextFate)\r\n                    end\r\n                elseif tempFate.duration ~= 0 then -- else is normal fate. avoid unlisted talk to npc fates\r\n                    nextFate = SelectNextFateHelper(tempFate, nextFate)\r\n                end\r\n                LogInfo(\"[FATE] Finished considering fate #\"..tempFate.fateId..\" \"..tempFate.fateName)\r\n            else\r\n                LogInfo(\"[FATE] Skipping fate #\"..tempFate.fateId..\" \"..tempFate.fateName..\" due to blacklist.\")\r\n            end\r\n        end\r\n    end\r\n\r\n    LogInfo(\"[FATE] Finished considering all fates\")\r\n\r\n    if nextFate == nil then\r\n        LogInfo(\"[FATE] 没有找到合适的FATE\")\r\n        if Echo == \"All\" then\r\n            yield(\"/echo [FATE] 移动到大水晶\")\r\n        end\r\n    else\r\n        LogInfo(\"[FATE] Final selected fate #\"..nextFate.fateId..\" \"..nextFate.fateName)\r\n    end\r\n    yield(\"/wait 1\")\r\n\r\n    return nextFate\r\nend\r\n\r\nfunction RandomAdjustCoordinates(x, y, z, maxDistance)\r\n    local angle = math.random() * 2 * math.pi\r\n    local x_adjust = maxDistance * math.random()\r\n    local z_adjust = maxDistance * math.random()\r\n\r\n    local randomX = x + (x_adjust * math.cos(angle))\r\n    local randomY = y + maxDistance\r\n    local randomZ = z + (z_adjust * math.sin(angle))\r\n\r\n    return randomX, randomY, randomZ\r\nend\r\n\r\n--#endregion Fate Functions\r\n\r\n--#region Movement Functions\r\n\r\nfunction GetClosestAetheryte(x, y, z, teleportTimePenalty)\r\n    local closestAetheryte = nil\r\n    local closestTravelDistance = math.maxinteger\r\n    for _, aetheryte in ipairs(SelectedZone.aetheryteList) do\r\n        local distanceAetheryteToFate = DistanceBetween(aetheryte.x, y, aetheryte.z, x, y, z)\r\n        local comparisonDistance = distanceAetheryteToFate + teleportTimePenalty\r\n        LogInfo(\"[FATE] Distance via \"..aetheryte.aetheryteName..\" adjusted for tp penalty is \"..tostring(comparisonDistance))\r\n\r\n        if comparisonDistance < closestTravelDistance then\r\n            LogInfo(\"[FATE] Updating closest aetheryte to \"..aetheryte.aetheryteName)\r\n            closestTravelDistance = comparisonDistance\r\n            closestAetheryte = aetheryte\r\n        end\r\n    end\r\n\r\n    return closestAetheryte\r\nend\r\n\r\nfunction GetClosestAetheryteToPoint(x, y, z, teleportTimePenalty)\r\n    local directFlightDistance = GetDistanceToPoint(x, y, z)\r\n    LogInfo(\"[FATE] Direct flight distance is: \"..directFlightDistance)\r\n    local closestAetheryte = GetClosestAetheryte(x, y, z, teleportTimePenalty)\r\n    if closestAetheryte ~= nil then\r\n        local aetheryteY = QueryMeshPointOnFloorY(closestAetheryte.x, y, closestAetheryte.z, true, 50)\r\n        if aetheryteY == nil then\r\n            aetheryteY = GetPlayerRawYPos()\r\n        end\r\n        local closestAetheryteDistance = DistanceBetween(x, y, z, closestAetheryte.x, aetheryteY, closestAetheryte.z) + teleportTimePenalty\r\n\r\n        if closestAetheryteDistance < directFlightDistance then\r\n            return closestAetheryte\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\nfunction TeleportToClosestAetheryteToFate(nextFate)\r\n    local aetheryteForClosestFate = GetClosestAetheryteToPoint(nextFate.x, nextFate.y, nextFate.z, 200)\r\n    if aetheryteForClosestFate ~=nil then\r\n        TeleportTo(aetheryteForClosestFate.aetheryteName)\r\n        return true\r\n    end\r\n    return false\r\nend\r\n\r\nfunction AcceptTeleportOfferLocation(destinationAetheryte)\r\n    if IsAddonVisible(\"_NotificationTelepo\") then\r\n        local location = GetNodeText(\"_NotificationTelepo\", 3, 4)\r\n        yield(\"/callback _Notification true 0 16 \"..location)\r\n        yield(\"/wait 1\")\r\n    end\r\n\r\n    if IsAddonVisible(\"SelectYesno\") then\r\n        local teleportOfferMessage = GetNodeText(\"SelectYesno\", 15)\r\n        if type(teleportOfferMessage) == \"string\" then\r\n            local teleportOfferLocation = teleportOfferMessage:match(\"Accept Teleport to (.+)%?\")\r\n            if teleportOfferLocation ~= nil then\r\n                if string.lower(teleportOfferLocation) == string.lower(destinationAetheryte) then\r\n                    yield(\"/callback SelectYesno true 0\") -- accept teleport\r\n                    return\r\n                else\r\n                    LogInfo(\"Offer for \"..teleportOfferLocation..\" and destination \"..destinationAetheryte..\" are not the same. Declining teleport.\")\r\n                end\r\n            end\r\n            yield(\"/callback SelectYesno true 2\") -- decline teleport\r\n            return\r\n        end\r\n    end\r\nend\r\n\r\nfunction AcceptNPCFateOrRejectOtherYesno()\r\n    if IsAddonVisible(\"SelectYesno\") then\r\n        local dialogBox = GetNodeText(\"SelectYesno\", 15)\r\n        if type(dialogBox) == \"string\" and dialogBox:find(\"这个FATE的推荐等级是\") then\r\n            yield(\"/callback SelectYesno true 0\") --accept fate\r\n        else\r\n            yield(\"/callback SelectYesno true 1\") --decline all other boxes\r\n        end\r\n    end\r\nend\r\n\r\nfunction TeleportTo(aetheryteName)\r\n    AcceptTeleportOfferLocation(aetheryteName)\r\n\r\n    while EorzeaTimeToUnixTime(GetCurrentEorzeaTimestamp()) - LastTeleportTimeStamp < 5 do\r\n        LogInfo(\"[FATE] Too soon since last teleport. Waiting...\")\r\n        yield(\"/wait 5\")\r\n    end\r\n\r\n    yield(\"/tp \"..aetheryteName)\r\n    yield(\"/wait 1\") -- wait for casting to begin\r\n    while GetCharacterCondition(CharacterCondition.casting) do\r\n        LogInfo(\"[FATE] Casting teleport...\")\r\n        yield(\"/wait 1\")\r\n    end\r\n    yield(\"/wait 1\") -- wait for that microsecond in between the cast finishing and the transition beginning\r\n    while GetCharacterCondition(CharacterCondition.betweenAreas) do\r\n        LogInfo(\"[FATE] Teleporting...\")\r\n        yield(\"/wait 1\")\r\n    end\r\n    yield(\"/wait 1\")\r\n    LastTeleportTimeStamp = EorzeaTimeToUnixTime(GetCurrentEorzeaTimestamp())\r\nend\r\n\r\nfunction ChangeInstance()\r\n    if SuccessiveInstanceChanges >= NumberOfInstances then\r\n        if CompanionScriptMode then\r\n            local shouldWaitForBonusBuff = WaitIfBonusBuff and (HasStatusId(1288) or HasStatusId(1289))\r\n            if WaitingForFateRewards == 0 and not shouldWaitForBonusBuff then\r\n                StopScript = true\r\n            else\r\n                LogInfo(\"[Fate Farming] Waiting for buff or fate rewards\")\r\n                yield(\"/wait 3\")\r\n            end\r\n        else\r\n            yield(\"/wait 10\")\r\n            SuccessiveInstanceChanges = 0\r\n        end\r\n        return\r\n    end\r\n\r\n    yield(\"/target 以太之光\") -- search for nearby aetheryte\r\n    if not HasTarget() or GetTargetName() ~= \"以太之光\" then -- if no aetheryte within targeting range, teleport to it\r\n        LogInfo(\"[FATE] Aetheryte not within targetable range\")\r\n        local closestAetheryte = nil\r\n        local closestAetheryteDistance = math.maxinteger\r\n        for i, aetheryte in ipairs(SelectedZone.aetheryteList) do\r\n            -- GetDistanceToPoint is implemented with raw distance instead of distance squared\r\n            local distanceToAetheryte = GetDistanceToPoint(aetheryte.x, aetheryte.y, aetheryte.z)\r\n            if distanceToAetheryte < closestAetheryteDistance then\r\n                closestAetheryte = aetheryte\r\n                closestAetheryteDistance = distanceToAetheryte\r\n            end\r\n        end\r\n        TeleportTo(closestAetheryte.aetheryteName)\r\n        return\r\n    end\r\n\r\n    if WaitingForFateRewards ~= 0 then\r\n        yield(\"/wait 10\")\r\n        return\r\n    end\r\n\r\n    if GetDistanceToTarget() > 10 then\r\n        LogInfo(\"[FATE] Targeting aetheryte, but greater than 10 distance\")\r\n        if GetDistanceToTarget() > 20 and not GetCharacterCondition(CharacterCondition.mounted) then\r\n            State = CharacterState.mounting\r\n            LogInfo(\"[FATE] State Change: Mounting\")\r\n        elseif not (PathfindInProgress() or PathIsRunning()) then\r\n            PathfindAndMoveTo(GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos(), GetCharacterCondition(CharacterCondition.flying) and SelectedZone.flying)\r\n        end\r\n        return\r\n    end\r\n\r\n    LogInfo(\"[FATE] Within 10 distance\")\r\n    if PathfindInProgress() or PathIsRunning() then\r\n        yield(\"/vnav stop\")\r\n        return\r\n    end\r\n\r\n    if GetCharacterCondition(CharacterCondition.mounted) then\r\n        State = CharacterState.changeInstanceDismount\r\n        LogInfo(\"[FATE] State Change: ChangeInstanceDismount\")\r\n        return\r\n    end\r\n\r\n    LogInfo(\"[FATE] Transferring to next instance\")\r\n    local nextInstance = (GetZoneInstance() % 2) + 1\r\n    yield(\"/li \"..nextInstance) -- start instance transfer\r\n    yield(\"/wait 1\") -- wait for instance transfer to register\r\n    State = CharacterState.ready\r\n    SuccessiveInstanceChanges = SuccessiveInstanceChanges + 1\r\n    LogInfo(\"[FATE] State Change: Ready\")\r\nend\r\n\r\nfunction WaitForContinuation()\r\n    if IsInFate() then\r\n        LogInfo(\"WaitForContinuation IsInFate\")\r\n        local nextFateId = GetNearestFate()\r\n        if nextFateId ~= CurrentFate.fateId then\r\n            CurrentFate = BuildFateTable(nextFateId)\r\n            State = CharacterState.doFate\r\n            LogInfo(\"[FATE] State Change: DoFate\")\r\n        end\r\n    elseif os.clock() - LastFateEndTime > 30 then\r\n        LogInfo(\"WaitForContinuation Abort\")\r\n        LogInfo(\"Over 30s since end of last fate. Giving up on part 2.\")\r\n        TurnOffCombatMods()\r\n        State = CharacterState.ready\r\n        LogInfo(\"State Change: Ready\")\r\n    else\r\n        LogInfo(\"WaitForContinuation Else\")\r\n        if BossFatesClass ~= nil then\r\n            local currentClass = GetClassJobId()\r\n            LogInfo(\"WaitForContinuation \"..CurrentFate.fateName)\r\n            if not IsPlayerOccupied() then\r\n                if CurrentFate.continuationIsBoss and currentClass ~= BossFatesClass.classId then\r\n                    LogInfo(\"WaitForContinuation SwitchToBoss\")\r\n                    yield(\"/gs change \"..BossFatesClass.className)\r\n                elseif not CurrentFate.continuationIsBoss and currentClass ~= MainClass.classId then\r\n                    LogInfo(\"WaitForContinuation SwitchToMain\")\r\n                    yield(\"/gs change \"..MainClass.className)\r\n                end\r\n            end\r\n        end\r\n\r\n        yield(\"/wait 1\")\r\n    end\r\nend\r\n\r\nfunction FlyBackToAetheryte()\r\n    NextFate = SelectNextFate()\r\n    if NextFate ~= nil then\r\n        yield(\"/vnav stop\")\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        return\r\n    end\r\n\r\n    local x = GetPlayerRawXPos()\r\n    local y = GetPlayerRawYPos()\r\n    local z = GetPlayerRawZPos()\r\n    local closestAetheryte = GetClosestAetheryte(x, y, z, 0)\r\n    -- if you get any sort of error while flying back, then just abort and tp back\r\n    if IsAddonVisible(\"_TextError\") and GetNodeText(\"_TextError\", 1) == \"Your mount can fly no higher.\" then\r\n        yield(\"/vnav stop\")\r\n        TeleportTo(closestAetheryte.aetheryteName)\r\n        return\r\n    end\r\n\r\n    yield(\"/target aetheryte\")\r\n\r\n    if HasTarget() and GetTargetName() == \"以太之光\" and DistanceBetween(GetTargetRawXPos(), y, GetTargetRawZPos(), x, y, z) <= 20 then\r\n        if PathfindInProgress() or PathIsRunning() then\r\n            yield(\"/vnav stop\")\r\n        end\r\n\r\n        if GetCharacterCondition(CharacterCondition.flying) then\r\n            yield(\"/mount\") -- land but don't actually dismount, to avoid running chocobo timer\r\n        elseif GetCharacterCondition(CharacterCondition.mounted) then\r\n            State = CharacterState.ready\r\n            LogInfo(\"[FATE] State Change: Ready\")\r\n        else\r\n            if MountToUse == \"随机飞行坐骑\" then\r\n                yield('/gaction \"随机飞行坐骑\"')\r\n            else\r\n                yield('/mount \"' .. MountToUse)\r\n            end\r\n        end\r\n        return\r\n    end\r\n\r\n    if not GetCharacterCondition(CharacterCondition.mounted) then\r\n        State = CharacterState.mounting\r\n        LogInfo(\"[FATE] State Change: Mounting\")\r\n        return\r\n    end\r\n    \r\n    if not (PathfindInProgress() or PathIsRunning()) then\r\n        LogInfo(\"[FATE] ClosestAetheryte.y: \"..closestAetheryte.y)\r\n        if closestAetheryte ~= nil then\r\n            SetMapFlag(SelectedZone.zoneId, closestAetheryte.x, closestAetheryte.y, closestAetheryte.z)\r\n            PathfindAndMoveTo(closestAetheryte.x, closestAetheryte.y, closestAetheryte.z, GetCharacterCondition(CharacterCondition.flying) and SelectedZone.flying)\r\n        end\r\n    end\r\nend\r\n\r\nfunction Mount()\r\n    if GetCharacterCondition(CharacterCondition.mounted) then\r\n        State = CharacterState.moveToFate\r\n        LogInfo(\"[FATE] State Change: MoveToFate\")\r\n    else\r\n        if MountToUse == \"随机飞行坐骑\" then\r\n            yield('/gaction \"随机飞行坐骑\"')\r\n        else\r\n            yield('/mount \"' .. MountToUse)\r\n        end\r\n    end\r\n    yield(\"/wait 1\")\r\nend\r\n\r\nfunction Dismount()\r\n    if GetCharacterCondition(CharacterCondition.flying) then\r\n        yield('/mount')\r\n\r\n        local now = os.clock()\r\n        if now - LastStuckCheckTime > 1 then\r\n            local x = GetPlayerRawXPos()\r\n            local y = GetPlayerRawYPos()\r\n            local z = GetPlayerRawZPos()\r\n\r\n            if GetCharacterCondition(CharacterCondition.flying) and GetDistanceToPoint(LastStuckCheckPosition.x, LastStuckCheckPosition.y, LastStuckCheckPosition.z) < 2 then\r\n                LogInfo(\"[FATE] Unable to dismount here. Moving to another spot.\")\r\n                local random_x, random_y, random_z = RandomAdjustCoordinates(x, y, z, 10)\r\n                local nearestPointX = QueryMeshNearestPointX(random_x, random_y, random_z, 100, 100)\r\n                local nearestPointY = QueryMeshNearestPointY(random_x, random_y, random_z, 100, 100)\r\n                local nearestPointZ = QueryMeshNearestPointZ(random_x, random_y, random_z, 100, 100)\r\n                if nearestPointX ~= nil and nearestPointY ~= nil and nearestPointZ ~= nil then\r\n                    PathfindAndMoveTo(nearestPointX, nearestPointY, nearestPointZ, GetCharacterCondition(CharacterCondition.flying) and SelectedZone.flying)\r\n                    yield(\"/wait 1\")\r\n                end\r\n            end\r\n\r\n            LastStuckCheckTime = now\r\n            LastStuckCheckPosition = {x=x, y=y, z=z}\r\n        end\r\n    elseif GetCharacterCondition(CharacterCondition.mounted) then\r\n        yield('/mount')\r\n    end\r\nend\r\n\r\n\r\nfunction MiddleOfFateDismount()\r\n    if not IsFateActive(CurrentFate.fateId) then\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        return\r\n    end\r\n\r\n    if HasTarget() then\r\n        if DistanceBetween(GetPlayerRawXPos(), 0, GetPlayerRawZPos(), GetTargetRawXPos(), 0, GetTargetRawZPos()) > (MaxDistance + GetTargetHitboxRadius() + 5) then\r\n            if not (PathfindInProgress() or PathIsRunning()) then\r\n                LogInfo(\"[FATE] MiddleOfFateDismount PathfindAndMoveTo\")\r\n                PathfindAndMoveTo(GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos(), GetCharacterCondition(CharacterCondition.flying))\r\n            end\r\n        else\r\n            if GetCharacterCondition(CharacterCondition.mounted) then\r\n                LogInfo(\"[FATE] MiddleOfFateDismount Dismount()\")\r\n                Dismount()\r\n            else\r\n                yield(\"/vnav stop\")\r\n                State = CharacterState.doFate\r\n                LogInfo(\"[FATE] State Change: DoFate\")\r\n            end\r\n        end\r\n    else\r\n        TargetClosestFateEnemy()\r\n    end\r\nend\r\n\r\nfunction NPCDismount()\r\n    if GetCharacterCondition(CharacterCondition.mounted) then\r\n        Dismount()\r\n    else\r\n        State = CharacterState.interactWithNpc\r\n        LogInfo(\"[FATE] State Change: InteractWithFateNpc\")\r\n    end\r\nend\r\n\r\nfunction ChangeInstanceDismount()\r\n    if GetCharacterCondition(CharacterCondition.mounted) then\r\n        Dismount()\r\n    else\r\n        State = CharacterState.changingInstances\r\n        LogInfo(\"[FATE] State Change: ChangingInstance\")\r\n    end\r\nend\r\n\r\n--Paths to the Fate NPC Starter\r\nfunction MoveToNPC()\r\n    yield(\"/target \"..CurrentFate.npcName)\r\n    if HasTarget() and GetTargetName()==CurrentFate.npcName then\r\n        if GetDistanceToTarget() > 5 then\r\n            PathfindAndMoveTo(GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos(), false)\r\n        end\r\n    end\r\nend\r\n\r\n--Paths to the Fate. CurrentFate is set here to allow MovetoFate to change its mind,\r\n--so CurrentFate is possibly nil.\r\nfunction MoveToFate()\r\n    SuccessiveInstanceChanges = 0\r\n\r\n    if not IsPlayerAvailable() then\r\n        yield(\"/echo [FATE] 玩家不可用\")\r\n        return\r\n    end\r\n\r\n    if CurrentFate~=nil and not IsFateActive(CurrentFate.fateId) then\r\n        LogInfo(\"[FATE] Next Fate is dead, selecting new Fate.\")\r\n        yield(\"/vnav stop\")\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        return\r\n    end\r\n\r\n    NextFate = SelectNextFate()\r\n    if NextFate == nil then -- when moving to next fate, CurrentFate == NextFate\r\n        yield(\"/vnav stop\")\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        return\r\n    elseif CurrentFate == nil or NextFate.fateId ~= CurrentFate.fateId then\r\n        yield(\"/vnav stop\")\r\n        CurrentFate = NextFate\r\n        SetMapFlag(SelectedZone.zoneId, CurrentFate.x, CurrentFate.y, CurrentFate.z)\r\n        yield(\"/\"..ChatCommandType..\" <flag>\")\r\n        return\r\n    end\r\n\r\n    -- change to secondary class if it's a boss fate\r\n    if BossFatesClass ~= nil then\r\n        local currentClass = GetClassJobId()\r\n        if CurrentFate.isBossFate and currentClass ~= BossFatesClass.classId then\r\n            yield(\"/gs change \"..BossFatesClass.className)\r\n            return\r\n        elseif not CurrentFate.isBossFate and currentClass ~= MainClass.classId then\r\n            yield(\"/gs change \"..MainClass.className)\r\n            return\r\n        end\r\n    end\r\n\r\n    -- upon approaching fate, pick a target and switch to pathing towards target\r\n    if GetDistanceToPoint(CurrentFate.x, CurrentFate.y, CurrentFate.z) < 60 then\r\n        if HasTarget() then\r\n            LogInfo(\"[FATE] Found FATE target, immediate rerouting\")\r\n            PathfindAndMoveTo(GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos())\r\n            if (CurrentFate.isOtherNpcFate or CurrentFate.isCollectionsFate) then\r\n                State = CharacterState.interactWithNpc\r\n                LogInfo(\"[FATE] State Change: Interact with npc\")\r\n            -- if GetTargetName() == CurrentFate.npcName then\r\n            --     State = CharacterState.interactWithNpc\r\n            -- elseif GetTargetFateID() == CurrentFate.fateId then\r\n            --     State = CharacterState.middleOfFateDismount\r\n            --     LogInfo(\"[FATE] State Change: MiddleOfFateDismount\")\r\n            else\r\n                State = CharacterState.middleOfFateDismount\r\n                LogInfo(\"[FATE] State Change: MiddleOfFateDismount\")\r\n            end\r\n            return\r\n        else\r\n            if (CurrentFate.isOtherNpcFate or CurrentFate.isCollectionsFate) and not IsInFate() then\r\n                yield(\"/target \"..CurrentFate.npcName)\r\n            else\r\n                TargetClosestFateEnemy()\r\n            end\r\n            yield(\"/wait 0.5\") -- give it a moment to make sure the target sticks\r\n            return\r\n        end\r\n    end\r\n\r\n    -- check for stuck\r\n    if (PathIsRunning() or PathfindInProgress()) and GetCharacterCondition(CharacterCondition.mounted) then\r\n        local now = os.clock()\r\n        if now - LastStuckCheckTime > 10 then\r\n            local x = GetPlayerRawXPos()\r\n            local y = GetPlayerRawYPos()\r\n            local z = GetPlayerRawZPos()\r\n\r\n            if GetDistanceToPoint(LastStuckCheckPosition.x, LastStuckCheckPosition.y, LastStuckCheckPosition.z) < 3 then\r\n                yield(\"/vnav stop\")\r\n                yield(\"/wait 1\")\r\n                LogInfo(\"[FATE] Antistuck\")\r\n                PathfindAndMoveTo(x, y + 10, z, GetCharacterCondition(CharacterCondition.flying) and SelectedZone.flying) -- fly up 10 then try again\r\n            end\r\n            \r\n            LastStuckCheckTime = now\r\n            LastStuckCheckPosition = {x=x, y=y, z=z}\r\n        end\r\n        return\r\n    end\r\n\r\n    if not MovingAnnouncementLock then\r\n        LogInfo(\"[FATE] 移动到FATE #\"..CurrentFate.fateId..\" \"..CurrentFate.fateName)\r\n        MovingAnnouncementLock = true\r\n        if Echo == \"All\" then\r\n            yield(\"/echo [FATE] 移动到FATE #\"..CurrentFate.fateId..\" \"..CurrentFate.fateName)\r\n        end\r\n    end\r\n\r\n    if TeleportToClosestAetheryteToFate(CurrentFate) then\r\n        return\r\n    end\r\n\r\n    if not GetCharacterCondition(CharacterCondition.mounted) then\r\n        State = CharacterState.mounting\r\n        LogInfo(\"[FATE] State Change: Mounting\")\r\n        return\r\n    end\r\n\r\n    local nearestLandX, nearestLandY, nearestLandZ = CurrentFate.x, CurrentFate.y, CurrentFate.z\r\n    if not (CurrentFate.isCollectionsFate or CurrentFate.isOtherNpcFate) then\r\n        nearestLandX, nearestLandY, nearestLandZ = RandomAdjustCoordinates(CurrentFate.x, CurrentFate.y, CurrentFate.z, 10)\r\n    end\r\n\r\n    if GetDistanceToPoint(nearestLandX, nearestLandY, nearestLandZ) > 5 then\r\n        PathfindAndMoveTo(nearestLandX, nearestLandY, nearestLandZ, HasFlightUnlocked(SelectedZone.zoneId) and SelectedZone.flying)\r\n    else\r\n        State = CharacterState.middleOfFateDismount\r\n    end\r\nend\r\n\r\nfunction InteractWithFateNpc()\r\n    if IsInFate() or GetFateStartTimeEpoch(CurrentFate.fateId) > 0 then\r\n        yield(\"/vnav stop\")\r\n        State = CharacterState.doFate\r\n        LogInfo(\"[FATE] State Change: DoFate\")\r\n        yield(\"/wait 1\") -- give the fate a second to register before dofate and lsync\r\n    elseif not IsFateActive(CurrentFate.fateId) then\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n    elseif PathfindInProgress() or PathIsRunning() then\r\n        if HasTarget() and GetTargetName() == CurrentFate.npcName and GetDistanceToTarget() < (5*math.random()) then\r\n            yield(\"/vnav stop\")\r\n        end\r\n        return\r\n    else\r\n        -- if target is already selected earlier during pathing, avoids having to target and move again\r\n        if (not HasTarget() or GetTargetName()~=CurrentFate.npcName) then\r\n            yield(\"/target \"..CurrentFate.npcName)\r\n            return\r\n        end\r\n\r\n        if GetCharacterCondition(CharacterCondition.mounted) then\r\n            State = CharacterState.npcDismount\r\n            LogInfo(\"[FATE] State Change: NPCDismount\")\r\n            return\r\n        end\r\n\r\n        if GetDistanceToPoint(GetTargetRawXPos(), GetPlayerRawYPos(), GetTargetRawZPos()) > 5 then\r\n            MoveToNPC()\r\n            return\r\n        end\r\n\r\n        if IsAddonVisible(\"SelectYesno\") then\r\n            AcceptNPCFateOrRejectOtherYesno()\r\n        elseif not GetCharacterCondition(CharacterCondition.occupied) then\r\n            yield(\"/interact\")\r\n        end\r\n    end\r\nend\r\n\r\nfunction CollectionsFateTurnIn()\r\n    AcceptNPCFateOrRejectOtherYesno()\r\n\r\n    if CurrentFate ~= nil and not IsFateActive(CurrentFate.fateId) then\r\n        CurrentFate = nil\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        return\r\n    end\r\n\r\n    if (not HasTarget() or GetTargetName()~=CurrentFate.npcName) then\r\n        TurnOffCombatMods()\r\n        yield(\"/target \"..CurrentFate.npcName)\r\n        yield(\"/wait 1\")\r\n\r\n        -- if too far from npc to target, then head towards center of fate\r\n        if (not HasTarget() or GetTargetName()~=CurrentFate.npcName and GetFateProgress(CurrentFate.fateId) < 100) then\r\n            if not PathfindInProgress() and not PathIsRunning() then\r\n                PathfindAndMoveTo(CurrentFate.x, CurrentFate.y, CurrentFate.z)\r\n            end\r\n        else\r\n            yield(\"/vnav stop\")\r\n        end\r\n        return\r\n    end\r\n\r\n    if GetDistanceToPoint(GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos()) > 5 then\r\n        if not (PathfindInProgress() or PathIsRunning()) then\r\n            MoveToNPC()\r\n        end\r\n    else\r\n        if GetItemCount(GetFateEventItem(CurrentFate.fateId)) >= 7 then\r\n            GotCollectionsFullCredit = true\r\n        end\r\n\r\n        yield(\"/vnav stop\")\r\n        yield(\"/interact\")\r\n        yield(\"/wait 3\")\r\n\r\n        if GetFateProgress(CurrentFate.fateId) < 100 then\r\n            TurnOnCombatMods()\r\n            State = CharacterState.doFate\r\n            LogInfo(\"[FATE] State Change: DoFate\")\r\n        else\r\n            if GotCollectionsFullCredit then\r\n                State = CharacterState.unexpectedCombat\r\n                LogInfo(\"[FATE] State Change: UnexpectedCombat\")\r\n            end\r\n        end\r\n\r\n        if CurrentFate ~=nil and CurrentFate.npcName ~=nil and GetTargetName() == CurrentFate.npcName then\r\n            LogInfo(\"[FATE] Attempting to clear target.\")\r\n            ClearTarget()\r\n            yield(\"/wait 1\")\r\n        end\r\n    end\r\nend\r\n\r\n--#endregion\r\n\r\n--#region Combat Functions\r\n\r\nfunction GetClassJobTableFromId(jobId)\r\n    if jobId == nil then\r\n        LogInfo(\"[FATE] JobId is nil\")\r\n        return nil\r\n    end\r\n    for _, classJob in pairs(ClassList) do\r\n        if classJob.classId == jobId then\r\n            return classJob\r\n        end\r\n    end\r\n    LogInfo(\"[FATE] Cannot recognize combat job.\")\r\n    return nil\r\nend\r\n\r\nfunction GetClassJobTableFromAbbrev(classString)\r\n    if classString == \"\" then\r\n        LogInfo(\"[FATE] No class set\")\r\n        return nil\r\n    end\r\n    for classJobAbbrev, classJob in pairs(ClassList) do\r\n        if classJobAbbrev == string.lower(classString) then\r\n            return classJob\r\n        end\r\n    end\r\n    LogInfo(\"[FATE] Cannot recognize combat job.\")\r\n    return nil\r\nend\r\n\r\nfunction SummonChocobo()\r\n    if GetCharacterCondition(CharacterCondition.mounted) then\r\n        Dismount()\r\n        return\r\n    end\r\n\r\n    if ShouldSummonChocobo and GetBuddyTimeRemaining() <= ResummonChocoboTimeLeft then\r\n        if GetItemCount(4868) > 0 then\r\n            yield(\"/item 基萨尔野菜\")\r\n            yield(\"/wait 3\")\r\n            yield(\"/cac \"..ChocoboStance..\"\")\r\n        elseif ShouldAutoBuyGysahlGreens then\r\n            State = CharacterState.autoBuyGysahlGreens\r\n            LogInfo(\"[FATE] State Change: AutoBuyGysahlGreens\")\r\n            return\r\n        end\r\n    end\r\n    State = CharacterState.ready\r\n    LogInfo(\"[FATE] State Change: Ready\")\r\nend\r\n\r\nfunction AutoBuyGysahlGreens()\r\n    if GetItemCount(4868) > 0 then -- don't need to buy\r\n        if IsAddonVisible(\"Shop\") then\r\n            yield(\"/callback Shop true -1\")\r\n        elseif IsInZone(SelectedZone.zoneId) then\r\n            yield(\"/item 基萨尔野菜\")\r\n        else\r\n            State = CharacterState.ready\r\n            LogInfo(\"State Change: ready\")\r\n        end\r\n        return\r\n    else\r\n        if not IsInZone(129) then\r\n            yield(\"/vnav stop\")\r\n            TeleportTo(\"利姆萨·罗敏萨下层甲板\")\r\n            return\r\n        else\r\n            local gysahlGreensVendor = { x=-62.1, y=18.0, z=9.4, npcName=\"布鲁盖尔商会 班戈·赞戈\" }\r\n            if GetDistanceToPoint(gysahlGreensVendor.x, gysahlGreensVendor.y, gysahlGreensVendor.z) > 5 then\r\n                if not (PathIsRunning() or PathfindInProgress()) then\r\n                    PathfindAndMoveTo(gysahlGreensVendor.x, gysahlGreensVendor.y, gysahlGreensVendor.z)\r\n                end\r\n            elseif HasTarget() and GetTargetName() == gysahlGreensVendor.npcName then\r\n                yield(\"/vnav stop\")\r\n                yield(\"/echo 有目标\")\r\n                if IsAddonVisible(\"SelectYesno\") then\r\n                    yield(\"/callback SelectYesno true 0\")\r\n                elseif IsAddonVisible(\"SelectIconString\") then\r\n                    yield(\"/callback SelectIconString true 0\")\r\n                    return\r\n                elseif IsAddonVisible(\"Shop\") then\r\n                    yield(\"/callback Shop true 0 2 99\")\r\n                    return\r\n                elseif not GetCharacterCondition(CharacterCondition.occupied) then\r\n                    yield(\"/interact\")\r\n                    yield(\"/wait 1\")\r\n                    return\r\n                end\r\n            else\r\n                yield(\"/vnav stop\")\r\n                yield(\"/target \"..gysahlGreensVendor.npcName)\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Paths to the enemy (for Meele)\r\nfunction EnemyPathing()\r\n    while HasTarget() and GetDistanceToTarget() > (GetTargetHitboxRadius() + MaxDistance) do\r\n        local enemy_x = GetTargetRawXPos()\r\n        local enemy_y = GetTargetRawYPos()\r\n        local enemy_z = GetTargetRawZPos()\r\n        if PathIsRunning() == false then\r\n            PathfindAndMoveTo(enemy_x, enemy_y, enemy_z, GetCharacterCondition(CharacterCondition.flying) and SelectedZone.flying)\r\n        end\r\n        yield(\"/wait 0.1\")\r\n    end\r\nend\r\n\r\nfunction TurnOnAoes()\r\n    if not AoesOn then\r\n        if RotationPlugin == \"RSR\" then\r\n            yield(\"/rotation off\")\r\n            yield(\"/rotation auto on\")\r\n            LogInfo(\"[FATE] TurnOnAoes /rotation auto on\")\r\n\r\n            if RSRAoeType == \"Off\" then\r\n                yield(\"/rotation settings aoetype 0\")\r\n            elseif RSRAoeType == \"Cleave\" then\r\n                yield(\"/rotation settings aoetype 1\")\r\n            elseif RSRAoeType == \"Full\" then\r\n                yield(\"/rotation settings aoetype 2\")\r\n            end\r\n        elseif RotationPlugin == \"BMR\" then\r\n            yield(\"/bmrai setpresetname \"..RotationAoePreset)\r\n        elseif RotationPlugin == \"VBM\" then\r\n            yield(\"/vbmai setpresetname \"..RotationAoePreset)\r\n        end\r\n        AoesOn = true\r\n    end\r\nend\r\n\r\nfunction TurnOffAoes()\r\n    if AoesOn then\r\n        if RotationPlugin == \"RSR\" then\r\n            yield(\"/rotation settings aoetype 1\")\r\n            yield(\"/rotation manual\")\r\n            LogInfo(\"[FATE] TurnOffAoes /rotation manual\")\r\n        elseif RotationPlugin == \"BMR\" then\r\n            yield(\"/bmrai setpresetname \"..RotationSingleTargetPreset)\r\n        elseif RotationPlugin == \"VBM\" then\r\n            yield(\"/vbmai setpresetname \"..RotationSingleTargetPreset)\r\n        end\r\n        AoesOn = false\r\n    end\r\nend\r\n\r\nfunction TurnOffRaidBuffs()\r\n    if AoesOn then\r\n        if RotationPlugin == \"BMR\" then\r\n            yield(\"/bmrai setpresetname \"..RotationHoldBuffPreset)\r\n        elseif RotationPlugin == \"VBM\" then\r\n            yield(\"/vbmai setpresetname \"..RotationHoldBuffPreset)\r\n        end\r\n    end\r\nend\r\n\r\nfunction SetMaxDistance()\r\n    MaxDistance = MeleeDist --default to melee distance\r\n    --ranged and casters have a further max distance so not always running all way up to target\r\n    local currentClass = GetClassJobTableFromId(GetClassJobId())\r\n    if not currentClass.isMelee then\r\n        MaxDistance = RangedDist\r\n    end\r\nend\r\n\r\nfunction TurnOnCombatMods(rotationMode)\r\n    if not CombatModsOn then\r\n        CombatModsOn = true\r\n        -- turn on RSR in case you have the RSR 30 second out of combat timer set\r\n        if RotationPlugin == \"RSR\" then\r\n            if rotationMode == \"manual\" then\r\n                yield(\"/rotation manual\")\r\n                LogInfo(\"[FATE] TurnOnCombatMods /rotation manual\")\r\n            else\r\n                yield(\"/rotation off\")\r\n                yield(\"/rotation auto on\")\r\n                LogInfo(\"[FATE] TurnOnCombatMods /rotation auto on\")\r\n            end\r\n        elseif RotationPlugin == \"BMR\" or RotationPlugin == \"VBM\" then\r\n            yield(\"/bmrai setpresetname \"..RotationAoePreset)\r\n        elseif RotationPlugin == \"Wrath\" then\r\n            yield(\"/wrath auto on\")\r\n        end\r\n\r\n        local class = GetClassJobTableFromId(GetClassJobId())\r\n        \r\n        if not AiDodgingOn then\r\n            SetMaxDistance()\r\n            \r\n            if DodgingPlugin == \"BMR\" then\r\n                yield(\"/bmrai on\")\r\n                yield(\"/bmrai followtarget on\") -- overrides navmesh path and runs into walls sometimes\r\n                yield(\"/bmrai followcombat on\")\r\n                -- yield(\"/bmrai followoutofcombat on\")\r\n                yield(\"/bmrai maxdistancetarget \" .. MaxDistance)\r\n            elseif DodgingPlugin == \"VBM\" then\r\n                yield(\"/vbmai on\")\r\n                yield(\"/vbmai followtarget on\") -- overrides navmesh path and runs into walls sometimes\r\n                yield(\"/vbmai followcombat on\")\r\n                -- yield(\"/bmrai followoutofcombat on\")\r\n                yield(\"/vbmai maxdistancetarget \" .. MaxDistance)\r\n            end\r\n            AiDodgingOn = true\r\n        end\r\n    end\r\nend\r\n\r\nfunction TurnOffCombatMods()\r\n    if CombatModsOn then\r\n        LogInfo(\"[FATE] Turning off combat mods\")\r\n        CombatModsOn = false\r\n\r\n        if RotationPlugin == \"RSR\" then\r\n            yield(\"/rotation off\")\r\n            LogInfo(\"[FATE] TurnOffCombatMods /rotation off\")\r\n        elseif RotationPlugin == \"BMR\" or RotationPlugin == \"VBM\" then\r\n            yield(\"/bmrai setpresetname null\")\r\n        elseif RotationPlugin == \"Wrath\" then\r\n            yield(\"/wrath auto off\")\r\n        end\r\n\r\n        -- turn off BMR so you don't start following other mobs\r\n        if AiDodgingOn then\r\n            if DodgingPlugin == \"BMR\" then\r\n                yield(\"/bmrai off\")\r\n                yield(\"/bmrai followtarget off\")\r\n                yield(\"/bmrai followcombat off\")\r\n                yield(\"/bmrai followoutofcombat off\")\r\n            elseif DodgingPlugin == \"VBM\" then\r\n                yield(\"/vbmai off\")\r\n                yield(\"/vbmai followtarget off\")\r\n                yield(\"/vbmai followcombat off\")\r\n                yield(\"/vbmai followoutofcombat off\")\r\n            end\r\n            AiDodgingOn = false\r\n        end\r\n    end\r\nend\r\n\r\nfunction HandleUnexpectedCombat()\r\n    TurnOnCombatMods(\"manual\")\r\n\r\n    if IsInFate() and GetFateProgress(GetNearestFate()) < 100 then\r\n        CurrentFate = BuildFateTable(GetNearestFate())\r\n        State = CharacterState.doFate\r\n        LogInfo(\"[FATE] State Change: DoFate\")\r\n        return\r\n    elseif not GetCharacterCondition(CharacterCondition.inCombat) then\r\n        yield(\"/vnav stop\")\r\n        ClearTarget()\r\n        TurnOffCombatMods()\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        local randomWait = (math.floor(math.random()*WaitUpTo * 1000)/1000) + 3 -- truncated to 3 decimal places\r\n        yield(\"/wait \"..randomWait)\r\n        return\r\n    end\r\n\r\n    if GetCharacterCondition(CharacterCondition.mounted) then\r\n        if not (PathfindInProgress() or PathIsRunning()) then\r\n            PathfindAndMoveTo(GetPlayerRawXPos(), GetPlayerRawYPos() + 10, GetPlayerRawZPos(), true)\r\n        end\r\n        yield(\"/wait 10\")\r\n        return\r\n    end\r\n\r\n    -- targets whatever is trying to kill you\r\n    if not HasTarget() then\r\n        yield(\"/battletarget\")\r\n    end\r\n\r\n    -- pathfind closer if enemies are too far\r\n    if HasTarget() then\r\n        if GetDistanceToTarget() > (MaxDistance + GetTargetHitboxRadius()) then\r\n            if not (PathfindInProgress() or PathIsRunning()) then\r\n                PathfindAndMoveTo(GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos(), GetCharacterCondition(CharacterCondition.flying) and SelectedZone.flying)\r\n            end\r\n        else\r\n            if PathfindInProgress() or PathIsRunning() then\r\n                yield(\"/vnav stop\")\r\n            elseif not GetCharacterCondition(CharacterCondition.inCombat) then\r\n                --inch closer 3 seconds\r\n                PathfindAndMoveTo(GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos(), GetCharacterCondition(CharacterCondition.flying) and SelectedZone.flying)\r\n                yield(\"/wait 3\")\r\n            end\r\n        end\r\n    end\r\n    yield(\"/wait 0.5\")\r\nend\r\n\r\nfunction DoFate()\r\n    if WaitingForFateRewards ~= CurrentFate.fateId then\r\n        WaitingForFateRewards = CurrentFate.fateId\r\n        LogInfo(\"[FATE] WaitingForFateRewards DoFate: \"..tostring(WaitingForFateRewards))\r\n    end\r\n    local currentClass = GetClassJobId()\r\n    -- switch classes (mostly for continutation fates that pop you directly into the next one)\r\n    if CurrentFate.isBossFate and BossFatesClass ~= nil and currentClass ~= BossFatesClass.classId and not IsPlayerOccupied() then\r\n        TurnOffCombatMods()\r\n        yield(\"/gs change \"..BossFatesClass.className)\r\n        yield(\"/wait 1\")\r\n        return\r\n    elseif not CurrentFate.isBossFate and BossFatesClass ~= nil and currentClass ~= MainClass.classId and not IsPlayerOccupied() then\r\n        TurnOffCombatMods()\r\n        yield(\"/gs change \"..MainClass.className)\r\n        yield(\"/wait 1\")\r\n        return\r\n    elseif IsInFate() and (GetFateMaxLevel(CurrentFate.fateId) < GetLevel()) and not IsLevelSynced() then\r\n        yield(\"/lsync\")\r\n        yield(\"/wait 0.5\") -- give it a second to register\r\n    elseif IsFateActive(CurrentFate.fateId) and not IsInFate() and GetFateProgress(CurrentFate.fateId) < 100 and\r\n        (GetDistanceToPoint(CurrentFate.x, CurrentFate.y, CurrentFate.z) < GetFateRadius(CurrentFate.fateId) + 10) and\r\n        not GetCharacterCondition(CharacterCondition.mounted) and not (PathIsRunning() or PathfindInProgress())\r\n    then -- got pushed out of fate. go back\r\n        yield(\"/vnav stop\")\r\n        yield(\"/wait 0.5\")\r\n        PathfindAndMoveTo(CurrentFate.x, CurrentFate.y, CurrentFate.z, GetCharacterCondition(CharacterCondition.flying) and SelectedZone.flying)\r\n        return\r\n    elseif not IsFateActive(CurrentFate.fateId) or GetFateProgress(CurrentFate.fateId) == 100 then\r\n        yield(\"/vnav stop\")\r\n        ClearTarget()\r\n        if not LogInfo(\"[FATE] HasContintuation check\") and CurrentFate.hasContinuation then\r\n            LastFateEndTime = os.clock()\r\n            State = CharacterState.waitForContinuation\r\n            LogInfo(\"[FATE] State Change: WaitForContinuation\")\r\n            return\r\n        else\r\n            DidFate = true\r\n            LogInfo(\"[FATE] No continuation for \"..CurrentFate.fateName)\r\n            local randomWait = (math.floor(math.random() * (math.max(0, WaitUpTo - 3)) * 1000)/1000) + 3 -- truncated to 3 decimal places\r\n            yield(\"/wait \"..randomWait)\r\n            TurnOffCombatMods()\r\n            State = CharacterState.ready\r\n            LogInfo(\"[FATE] State Change: Ready\")\r\n        end\r\n        return\r\n    elseif GetCharacterCondition(CharacterCondition.mounted) then\r\n        State = CharacterState.middleOfFateDismount\r\n        LogInfo(\"[FATE] State Change: MiddleOfFateDismount\")\r\n        return\r\n    elseif CurrentFate.isCollectionsFate then\r\n        yield(\"/wait 1\") -- needs a moment after start of fate for GetFateEventItem to populate\r\n        if GetItemCount(GetFateEventItem(CurrentFate.fateId)) >= 7 or (GotCollectionsFullCredit and GetFateProgress(CurrentFate.fateId) == 100) then\r\n            yield(\"/vnav stop\")\r\n            State = CharacterState.collectionsFateTurnIn\r\n            LogInfo(\"[FATE] State Change: CollectionsFatesTurnIn\")\r\n        end\r\n    end\r\n\r\n    LogInfo(\"DoFate->Finished transition checks\")\r\n\r\n    -- do not target fate npc during combat\r\n    if CurrentFate.npcName ~=nil and GetTargetName() == CurrentFate.npcName then\r\n        LogInfo(\"[FATE] Attempting to clear target.\")\r\n        ClearTarget()\r\n        yield(\"/wait 1\")\r\n    end\r\n\r\n    TurnOnCombatMods(\"auto\")\r\n\r\n    GemAnnouncementLock = false\r\n\r\n    -- switches to targeting forlorns for bonus (if present)\r\n    if not IgnoreForlorns then\r\n        yield(\"/target 迷失少女\")\r\n        if not IgnoreBigForlornOnly then\r\n            yield(\"/target 迷失者\")\r\n        end\r\n    end\r\n\r\n    if (GetTargetName() == \"迷失少女\" or GetTargetName() == \"迷失者\") then\r\n        if IgnoreForlorns or (IgnoreBigForlornOnly and GetTargetName() == \"The Forlorn\") then\r\n            ClearTarget()\r\n        elseif GetTargetHP() > 0 then\r\n            if not ForlornMarked then\r\n                yield(\"/enemysign attack1\")\r\n                if Echo == \"All\" or ChatCommandType == \"p\" then\r\n                    yield(\"/\"..ChatCommandType..\" 发现 迷失者! <se.3>\")\r\n                end\r\n                TurnOffAoes()\r\n                ForlornMarked = true\r\n            end\r\n        else\r\n            ClearTarget()\r\n            TurnOnAoes()\r\n        end\r\n    else\r\n        TurnOnAoes()\r\n    end\r\n\r\n    -- targets whatever is trying to kill you\r\n    if not HasTarget() then\r\n        yield(\"/battletarget\")\r\n    end\r\n\r\n    -- clears target\r\n    if GetTargetFateID() ~= CurrentFate.fateId and not IsTargetInCombat() then\r\n        ClearTarget()\r\n    end\r\n\r\n    -- do not interrupt casts to path towards enemies\r\n    if GetCharacterCondition(CharacterCondition.casting) then\r\n        return\r\n    end\r\n\r\n    -- pathfind closer if enemies are too far\r\n    if not GetCharacterCondition(CharacterCondition.inCombat) then\r\n        if HasTarget() then\r\n            local x,y,z = GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos()\r\n            if GetDistanceToTarget() <= (MaxDistance + GetTargetHitboxRadius()) then\r\n                if PathfindInProgress() or PathIsRunning() then\r\n                    yield(\"/vnav stop\")\r\n                    yield(\"/wait 5\") -- wait 5s before inching any closer\r\n                elseif GetDistanceToTarget() > (1 + GetTargetHitboxRadius()) then -- never move into hitbox\r\n                    PathfindAndMoveTo(x, y, z)\r\n                    yield(\"/wait 1\") -- inch closer by 1s\r\n                end\r\n            elseif not (PathfindInProgress() or PathIsRunning()) then\r\n                yield(\"/wait 5\") -- give 5s for casts to go off before attempting to move closer\r\n                if x ~= 0 and z~=0 and not GetCharacterCondition(CharacterCondition.inCombat) then\r\n                    PathfindAndMoveTo(x, y, z)\r\n                end\r\n            end\r\n            return\r\n        else\r\n            TargetClosestFateEnemy()\r\n            yield(\"/wait 1\") -- wait in case target doesn't stick\r\n            if not HasTarget() then\r\n                PathfindAndMoveTo(CurrentFate.x, CurrentFate.y, CurrentFate.z)\r\n            end\r\n        end\r\n    else\r\n        if HasTarget() and (GetDistanceToTarget() <= (MaxDistance + GetTargetHitboxRadius())) then\r\n            if PathfindInProgress() or PathIsRunning() then\r\n                yield(\"/vnav stop\")\r\n            end\r\n        elseif not CurrentFate.isBossFate then\r\n            if not (PathfindInProgress() or PathIsRunning()) then\r\n                yield(\"/wait 1\")\r\n                local x,y,z = GetTargetRawXPos(), GetTargetRawYPos(), GetTargetRawZPos()\r\n                if x ~= 0 and z~=0 then\r\n                    PathfindAndMoveTo(x,y,z, GetCharacterCondition(CharacterCondition.flying) and SelectedZone.flying)\r\n                end\r\n            end\r\n        end\r\n    end\r\n        \r\n    --hold buff thingy\r\n    if GetFateProgress(CurrentFate.fateId) >= PorcentageToHoldBuff then \r\n        TurnOffRaidBuffs()\r\n    end   \r\nend\r\n\r\n--#endregion\r\n\r\n--#region State Transition Functions\r\n\r\nfunction FoodCheck()\r\n    --food usage\r\n    if not HasStatusId(48) and Food ~= \"\" then\r\n        yield(\"/item \" .. Food)\r\n    end\r\nend\r\n\r\nfunction PotionCheck()\r\n    --pot usage\r\n    if not HasStatusId(49) and Potion ~= \"\" then\r\n        yield(\"/item \" .. Potion)\r\n    end\r\nend\r\n\r\nfunction Ready()\r\n    FoodCheck()\r\n    PotionCheck()\r\n    \r\n    CombatModsOn = false -- expect RSR to turn off after every fate\r\n    GotCollectionsFullCredit = false\r\n    ForlornMarked = false\r\n    MovingAnnouncementLock = false\r\n\r\n    local shouldWaitForBonusBuff = WaitIfBonusBuff and (HasStatusId(1288) or HasStatusId(1289))\r\n\r\n    NextFate = SelectNextFate()\r\n    if CurrentFate ~= nil and not IsFateActive(CurrentFate.fateId) then\r\n        CurrentFate = nil\r\n    end\r\n\r\n    if CurrentFate == nil then\r\n        LogInfo(\"[FATE] CurrentFate is nil\")\r\n    else\r\n        LogInfo(\"[FATE] CurrentFate is \"..CurrentFate.fateName)\r\n    end\r\n\r\n    if NextFate == nil then\r\n        LogInfo(\"[FATE] NextFate is nil\")\r\n    else\r\n        LogInfo(\"[FATE] NextFate is \"..NextFate.fateName)\r\n    end\r\n\r\n    if not LogInfo(\"[FATE] Ready -> IsPlayerAvailable()\") and not IsPlayerAvailable() then\r\n        return\r\n    elseif not LogInfo(\"[FATE] Ready -> Repair\") and RepairAmount > 0 and NeedsRepair(RepairAmount) and\r\n        (not shouldWaitForBonusBuff or (SelfRepair and GetItemCount(33916) > 0)) then\r\n        State = CharacterState.repair\r\n        LogInfo(\"[FATE] State Change: Repair\")\r\n    elseif not LogInfo(\"[FATE] Ready -> ExtractMateria\") and ShouldExtractMateria and CanExtractMateria(100) and GetInventoryFreeSlotCount() > 1 then\r\n        State = CharacterState.extractMateria\r\n        LogInfo(\"[FATE] State Change: ExtractMateria\")\r\n    elseif not LogInfo(\"[FATE] Ready -> WaitBonusBuff\") and NextFate == nil and shouldWaitForBonusBuff then\r\n        if not HasTarget() or GetTargetName() ~= \"以太之光\" or GetDistanceToTarget() > 20 then\r\n            State = CharacterState.flyBackToAetheryte\r\n            LogInfo(\"[FATE] State Change: FlyBackToAetheryte\")\r\n        else\r\n            yield(\"/wait 3\")\r\n        end\r\n        return\r\n    elseif not LogInfo(\"[FATE] Ready -> ExchangingVouchers\") and WaitingForFateRewards == 0 and\r\n        ShouldExchangeBicolorGemstones and (BicolorGemCount >= 1400) and not shouldWaitForBonusBuff\r\n    then\r\n        State = CharacterState.exchangingVouchers\r\n        LogInfo(\"[FATE] State Change: ExchangingVouchers\")\r\n    elseif not LogInfo(\"[FATE] Ready -> ProcessRetainers\") and WaitingForFateRewards == 0 and\r\n        Retainers and ARRetainersWaitingToBeProcessed() and GetInventoryFreeSlotCount() > 1  and not shouldWaitForBonusBuff\r\n    then\r\n        State = CharacterState.processRetainers\r\n        LogInfo(\"[FATE] State Change: ProcessingRetainers\")\r\n    elseif not LogInfo(\"[FATE] Ready -> GC TurnIn\") and ShouldGrandCompanyTurnIn and\r\n        GetInventoryFreeSlotCount() < InventorySlotsLeft and not shouldWaitForBonusBuff\r\n    then\r\n        State = CharacterState.gcTurnIn\r\n        LogInfo(\"[FATE] State Change: GCTurnIn\")\r\n    elseif not LogInfo(\"[FATE] Ready -> TeleportBackToFarmingZone\") and not IsInZone(SelectedZone.zoneId) then\r\n        TeleportTo(SelectedZone.aetheryteList[1].aetheryteName)\r\n        return\r\n    elseif not LogInfo(\"[FATE] Ready -> SummonChocobo\") and ShouldSummonChocobo and GetBuddyTimeRemaining() <= ResummonChocoboTimeLeft and\r\n        (not shouldWaitForBonusBuff or GetItemCount(4868) > 0) then\r\n        State = CharacterState.summonChocobo\r\n    elseif not LogInfo(\"[FATE] Ready -> NextFate nil\") and NextFate == nil then\r\n        if EnableChangeInstance and GetZoneInstance() > 0 and not shouldWaitForBonusBuff then\r\n            State = CharacterState.changingInstances\r\n            LogInfo(\"[FATE] State Change: ChangingInstances\")\r\n            return\r\n        elseif CompanionScriptMode and not shouldWaitForBonusBuff then\r\n            if WaitingForFateRewards == 0 then\r\n                StopScript = true\r\n                LogInfo(\"[FATE] StopScript: Ready\")\r\n            else\r\n                LogInfo(\"[FATE] Waiting for fate rewards\")\r\n            end\r\n        elseif not HasTarget() or GetTargetName() ~= \"以太之光\" or GetDistanceToTarget() > 20 then\r\n            State = CharacterState.flyBackToAetheryte\r\n            LogInfo(\"[FATE] State Change: FlyBackToAetheryte\")\r\n        else\r\n            yield(\"/wait 10\")\r\n        end\r\n        return\r\n    elseif CompanionScriptMode and DidFate and not shouldWaitForBonusBuff then\r\n        if WaitingForFateRewards == 0 then\r\n            StopScript = true\r\n            LogInfo(\"[FATE] StopScript: DidFate\")\r\n        else\r\n            LogInfo(\"[FATE] Waiting for fate rewards\")\r\n        end\r\n    elseif not LogInfo(\"[FATE] Ready -> MovingToFate\") then -- and ((CurrentFate == nil) or (GetFateProgress(CurrentFate.fateId) == 100) and NextFate ~= nil) then\r\n        CurrentFate = NextFate\r\n        SetMapFlag(SelectedZone.zoneId, CurrentFate.x, CurrentFate.y, CurrentFate.z)\r\n        yield(\"/\"..ChatCommandType..\" <flag>\")\r\n        State = CharacterState.moveToFate\r\n        LogInfo(\"[FATE] State Change: MovingtoFate \"..CurrentFate.fateName)\r\n    end\r\n\r\n    if not GemAnnouncementLock and (Echo == \"All\" or Echo == \"Gems\") then\r\n        GemAnnouncementLock = true\r\n        if BicolorGemCount >= 1400 then\r\n            yield(\"/echo [FATE] 你已经有了 \"..tostring(BicolorGemCount)..\"/1500 双色宝石！ <se.3>\")\r\n        else\r\n            yield(\"/echo [FATE] 双色宝石: \"..tostring(BicolorGemCount)..\"/1500\")\r\n        end\r\n    end\r\nend\r\n\r\n\r\nfunction HandleDeath()\r\n    CurrentFate = nil\r\n\r\n    if CombatModsOn then\r\n        TurnOffCombatMods()\r\n    end\r\n\r\n    if PathfindInProgress() or PathIsRunning() then\r\n        yield(\"/vnav stop\")\r\n    end\r\n\r\n    if GetCharacterCondition(CharacterCondition.dead) then --Condition Dead\r\n        if Echo and not DeathAnnouncementLock then\r\n            DeathAnnouncementLock = true\r\n            if Echo == \"All\" then\r\n                yield(\"/echo [FATE] 你死了 回以太水晶吧\")\r\n            end\r\n        end\r\n\r\n        if IsAddonVisible(\"SelectYesno\") then --rez addon yes\r\n            yield(\"/callback SelectYesno true 0\")\r\n            yield(\"/wait 0.1\")\r\n        end\r\n    else\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        DeathAnnouncementLock = false\r\n    end\r\nend\r\n\r\nfunction ExecuteBicolorExchange()\r\n    CurrentFate = nil\r\n\r\n    if BicolorGemCount >= 1400 then\r\n        if IsAddonVisible(\"SelectYesno\") then\r\n            yield(\"/callback SelectYesno true 0\")\r\n            return\r\n        end\r\n\r\n        if IsAddonVisible(\"ShopExchangeCurrency\") then\r\n            yield(\"/callback ShopExchangeCurrency false 0 \"..SelectedBicolorExchangeData.item.itemIndex..\" \"..(BicolorGemCount//SelectedBicolorExchangeData.item.price))\r\n            return\r\n        end\r\n\r\n        if not IsInZone(SelectedBicolorExchangeData.zoneId) then\r\n            TeleportTo(SelectedBicolorExchangeData.aetheryteName)\r\n            return\r\n        end\r\n    \r\n        local shopX = SelectedBicolorExchangeData.x\r\n        local shopY = SelectedBicolorExchangeData.y\r\n        local shopZ = SelectedBicolorExchangeData.z\r\n    \r\n        if SelectedBicolorExchangeData.miniAethernet ~= nil and\r\n            GetDistanceToPoint(shopX, shopY, shopZ) > (DistanceBetween(SelectedBicolorExchangeData.miniAethernet.x, SelectedBicolorExchangeData.miniAethernet.y, SelectedBicolorExchangeData.miniAethernet.z, shopX, shopY, shopZ) + 10) then\r\n            LogInfo(\"Distance to shopkeep is too far. Using mini aetheryte.\")\r\n            yield(\"/li \"..SelectedBicolorExchangeData.miniAethernet.name)\r\n            yield(\"/wait 1\") -- give it a moment to register\r\n            return\r\n        elseif IsAddonVisible(\"TelepotTown\") then\r\n            LogInfo(\"TelepotTown open\")\r\n            yield(\"/callback TelepotTown false -1\")\r\n        elseif GetDistanceToPoint(shopX, shopY, shopZ) > 5 then\r\n            LogInfo(\"Distance to shopkeep is too far. Walking there.\")\r\n            if not (PathfindInProgress() or PathIsRunning()) then\r\n                LogInfo(\"Path not running\")\r\n                PathfindAndMoveTo(shopX, shopY, shopZ)\r\n            end\r\n        else\r\n            LogInfo(\"[FATE] Arrived at Shopkeep\")\r\n            if PathfindInProgress() or PathIsRunning() then\r\n                yield(\"/vnav stop\")\r\n            end\r\n    \r\n            if not HasTarget() or GetTargetName() ~= SelectedBicolorExchangeData.shopKeepName then\r\n                yield(\"/target \"..SelectedBicolorExchangeData.shopKeepName)\r\n            elseif not GetCharacterCondition(CharacterCondition.occupiedInQuestEvent) then\r\n                yield(\"/interact\")\r\n            end\r\n        end\r\n    else\r\n        if IsAddonVisible(\"ShopExchangeCurrency\") then\r\n            LogInfo(\"[FATE] Attemping to close shop window\")\r\n            yield(\"/callback ShopExchangeCurrency true -1\")\r\n            return\r\n        elseif GetCharacterCondition(CharacterCondition.occupiedInEvent) then\r\n            LogInfo(\"[FATE] Character still occupied talking to shopkeeper\")\r\n            yield(\"/wait 0.5\")\r\n            return\r\n        end\r\n\r\n        State = CharacterState.ready\r\n        LogInfo(\"[FATE] State Change: Ready\")\r\n        return\r\n    end\r\nend\r\n\r\nfunction ProcessRetainers()\r\n    CurrentFate = nil\r\n\r\n    LogInfo(\"[FATE] Handling retainers...\")\r\n    if ARRetainersWaitingToBeProcessed() and GetInventoryFreeSlotCount() > 1 then\r\n    \r\n        if PathfindInProgress() or PathIsRunning() then\r\n            return\r\n        end\r\n\r\n        if not IsInZone(129) then\r\n            yield(\"/vnav stop\")\r\n            TeleportTo(\"利姆萨·罗敏萨下层甲板\")\r\n            return\r\n        end\r\n\r\n        local summoningBell = {\r\n            x = -122.72,\r\n            y = 18.00,\r\n            z = 20.39\r\n        }\r\n        if GetDistanceToPoint(summoningBell.x, summoningBell.y, summoningBell.z) > 4.5 then\r\n            PathfindAndMoveTo(summoningBell.x, summoningBell.y, summoningBell.z)\r\n            return\r\n        end\r\n\r\n        if not HasTarget() or GetTargetName() ~= \"传唤铃\" then\r\n            yield(\"/target 传唤铃\")\r\n            return\r\n        end\r\n\r\n        if not GetCharacterCondition(CharacterCondition.occupiedSummoningBell) then\r\n            yield(\"/interact\")\r\n            if IsAddonVisible(\"RetainerList\") then\r\n                yield(\"/ays e\")\r\n                if Echo == \"All\" then\r\n                    yield(\"/echo [FATE] Processing retainers\")\r\n                end\r\n                yield(\"/wait 1\")\r\n            end\r\n        end\r\n    else\r\n        if IsAddonVisible(\"RetainerList\") then\r\n            yield(\"/callback RetainerList true -1\")\r\n        elseif not GetCharacterCondition(CharacterCondition.occupiedSummoningBell) then\r\n            State = CharacterState.ready\r\n            LogInfo(\"[FATE] 切换状态: 准备\")\r\n        end\r\n    end\r\nend\r\n\r\nfunction GrandCompanyTurnIn()\r\n    if GetInventoryFreeSlotCount() <= InventorySlotsLeft then\r\n        local playerGC = GetPlayerGC()\r\n        local gcZoneIds = {\r\n            129, --利姆萨·罗敏萨下层甲板\r\n            132, --格里达尼亚新街\r\n            130 --乌尔达哈现世回廊\r\n        }\r\n        if not IsInZone(gcZoneIds[playerGC]) then\r\n            yield(\"/li gc\")\r\n            yield(\"/wait 1\")\r\n        elseif DeliverooIsTurnInRunning() then\r\n            return\r\n        else\r\n            yield(\"/deliveroo enable\")\r\n        end\r\n    else\r\n        State = CharacterState.ready\r\n        LogInfo(\"State Change: Ready\")\r\n    end\r\nend\r\n\r\nfunction Repair()\r\n    if IsAddonVisible(\"SelectYesno\") then\r\n        yield(\"/callback SelectYesno true 0\")\r\n        return\r\n    end\r\n\r\n    if IsAddonVisible(\"Repair\") then\r\n        if not NeedsRepair(RepairAmount) then\r\n            yield(\"/callback Repair true -1\") -- if you don't need repair anymore, close the menu\r\n        else\r\n            yield(\"/callback Repair true 0\") -- select repair\r\n        end\r\n        return\r\n    end\r\n\r\n    -- if occupied by repair, then just wait\r\n    if GetCharacterCondition(CharacterCondition.occupiedMateriaExtractionAndRepair) then\r\n        LogInfo(\"[FATE] Repairing...\")\r\n        yield(\"/wait 1\")\r\n        return\r\n    end\r\n\r\n    local hawkersAlleyAethernetShard = { x=-213.95, y=15.99, z=49.35 }\r\n    if SelfRepair then\r\n        if GetItemCount(33916) > 0 then\r\n            if IsAddonVisible(\"Shop\") then\r\n                yield(\"/callback Shop true -1\")\r\n                return\r\n            end\r\n\r\n            if not IsInZone(SelectedZone.zoneId) then\r\n                TeleportTo(SelectedZone.aetheryteList[1].aetheryteName)\r\n                return\r\n            end\r\n\r\n            if GetCharacterCondition(CharacterCondition.mounted) then\r\n                Dismount()\r\n                LogInfo(\"[FATE] State Change: Dismounting\")\r\n                return\r\n            end\r\n\r\n            if NeedsRepair(RepairAmount) then\r\n                if not IsAddonVisible(\"Repair\") then\r\n                    LogInfo(\"[FATE] Opening repair menu...\")\r\n                    yield(\"/generalaction 修理\")\r\n                end\r\n            else\r\n                State = CharacterState.ready\r\n                LogInfo(\"[FATE] State Change: Ready\")\r\n            end\r\n        elseif ShouldAutoBuyDarkMatter then\r\n            if not IsInZone(129) then\r\n                if Echo == \"All\" then\r\n                    yield(\"/echo 没有暗物质了！去下层甲板买点吧\")\r\n                end\r\n                TeleportTo(\"利姆萨·罗敏萨下层甲板\")\r\n                return\r\n            end\r\n\r\n            local darkMatterVendor = { npcName=\"乌恩辛雷尔\", x=-257.71, y=16.19, z=50.11, wait=0.08 }\r\n            if GetDistanceToPoint(darkMatterVendor.x, darkMatterVendor.y, darkMatterVendor.z) > (DistanceBetween(hawkersAlleyAethernetShard.x, hawkersAlleyAethernetShard.y, hawkersAlleyAethernetShard.z,darkMatterVendor.x, darkMatterVendor.y, darkMatterVendor.z) + 10) then\r\n                yield(\"/li 市场（国际广场）\")\r\n                yield(\"/wait 1\") -- give it a moment to register\r\n            elseif IsAddonVisible(\"TelepotTown\") then\r\n                yield(\"/callback TelepotTown false -1\")\r\n            elseif GetDistanceToPoint(darkMatterVendor.x, darkMatterVendor.y, darkMatterVendor.z) > 5 then\r\n                if not (PathfindInProgress() or PathIsRunning()) then\r\n                    PathfindAndMoveTo(darkMatterVendor.x, darkMatterVendor.y, darkMatterVendor.z)\r\n                end\r\n            else\r\n                if not HasTarget() or GetTargetName() ~= darkMatterVendor.npcName then\r\n                    yield(\"/target \"..darkMatterVendor.npcName)\r\n                elseif not GetCharacterCondition(CharacterCondition.occupiedInQuestEvent) then\r\n                    yield(\"/interact\")\r\n                elseif IsAddonVisible(\"SelectYesno\") then\r\n                    yield(\"/callback SelectYesno true 0\")\r\n                elseif IsAddonVisible(\"Shop\") then\r\n                    yield(\"/callback Shop true 0 40 99\")\r\n                end\r\n            end\r\n        else\r\n            if Echo == \"All\" then\r\n                yield(\"/echo Out of Dark Matter and ShouldAutoBuyDarkMatter is false. Switching to Limsa mender.\")\r\n            end\r\n            SelfRepair = false\r\n        end\r\n    else\r\n        if NeedsRepair(RepairAmount) then\r\n            if not IsInZone(129) then\r\n                TeleportTo(\"利姆萨·罗敏萨下层甲板\")\r\n                return\r\n            end\r\n            \r\n            local mender = { npcName=\"阿里斯特尔\", x=-246.87, y=16.19, z=49.83 }\r\n            if GetDistanceToPoint(mender.x, mender.y, mender.z) > (DistanceBetween(hawkersAlleyAethernetShard.x, hawkersAlleyAethernetShard.y, hawkersAlleyAethernetShard.z, mender.x, mender.y, mender.z) + 10) then\r\n                yield(\"/li 市场（国际广场）\")\r\n                yield(\"/wait 1\") -- give it a moment to register\r\n            elseif IsAddonVisible(\"TelepotTown\") then\r\n                yield(\"/callback TelepotTown false -1\")\r\n            elseif GetDistanceToPoint(mender.x, mender.y, mender.z) > 5 then\r\n                if not (PathfindInProgress() or PathIsRunning()) then\r\n                    PathfindAndMoveTo(mender.x, mender.y, mender.z)\r\n                end\r\n            else\r\n                if not HasTarget() or GetTargetName() ~= mender.npcName then\r\n                    yield(\"/target \"..mender.npcName)\r\n                elseif not GetCharacterCondition(CharacterCondition.occupiedInQuestEvent) then\r\n                    yield(\"/interact\")\r\n                end\r\n            end\r\n        else\r\n            State = CharacterState.ready\r\n            LogInfo(\"[FATE] State Change: Ready\")\r\n        end\r\n    end\r\nend\r\n\r\nfunction ExtractMateria()\r\n    if GetCharacterCondition(CharacterCondition.mounted) then\r\n        Dismount()\r\n        LogInfo(\"[FATE] State Change: Dismounting\")\r\n        return\r\n    end\r\n\r\n    if GetCharacterCondition(CharacterCondition.occupiedMateriaExtractionAndRepair) then\r\n        return\r\n    end\r\n\r\n    if CanExtractMateria(100) and GetInventoryFreeSlotCount() > 1 then\r\n        if not IsAddonVisible(\"Materialize\") then\r\n            yield(\"/gaction 精制魔晶石\")\r\n            return\r\n        end\r\n\r\n        LogInfo(\"[FATE] Extracting materia...\")\r\n            \r\n        if IsAddonVisible(\"MaterializeDialog\") then\r\n            yield(\"/callback MaterializeDialog true 0\")\r\n        else\r\n            yield(\"/callback Materialize true 2 0\")\r\n        end\r\n    else\r\n        if IsAddonVisible(\"Materialize\") then\r\n            yield(\"/callback Materialize true -1\")\r\n        else\r\n            State = CharacterState.ready\r\n            LogInfo(\"[FATE] State Change: Ready\")\r\n        end\r\n    end\r\nend\r\n\r\nCharacterState = {\r\n    ready = Ready,\r\n    dead = HandleDeath,\r\n    unexpectedCombat = HandleUnexpectedCombat,\r\n    mounting = Mount,\r\n    npcDismount = NPCDismount,\r\n    middleOfFateDismount = MiddleOfFateDismount,\r\n    moveToFate = MoveToFate,\r\n    interactWithNpc = InteractWithFateNpc,\r\n    collectionsFateTurnIn = CollectionsFateTurnIn,\r\n    doFate = DoFate,\r\n    waitForContinuation = WaitForContinuation,\r\n    changingInstances = ChangeInstance,\r\n    changeInstanceDismount = ChangeInstanceDismount,\r\n    flyBackToAetheryte = FlyBackToAetheryte,\r\n    extractMateria = ExtractMateria,\r\n    repair = Repair,\r\n    exchangingVouchers = ExecuteBicolorExchange,\r\n    processRetainers = ProcessRetainers,\r\n    gcTurnIn = GrandCompanyTurnIn,\r\n    summonChocobo = SummonChocobo,\r\n    autoBuyGysahlGreens = AutoBuyGysahlGreens\r\n}\r\n\r\n--#endregion State Transition Functions\r\n\r\n--#region Main\r\n\r\nLogInfo(\"[FATE] Starting fate farming script.\")\r\n\r\nStopScript = false\r\nDidFate = false\r\nGemAnnouncementLock = false\r\nDeathAnnouncementLock = false\r\nMovingAnnouncementLock = false\r\nSuccessiveInstanceChanges = 0\r\nLastInstanceChangeTimestamp = 0\r\nLastTeleportTimeStamp = 0\r\nGotCollectionsFullCredit = false -- needs 7 items for  full\r\n-- variable to track collections fates that you have completed but are still active.\r\n-- will not leave area or change instance if value ~= 0\r\nWaitingForFateRewards = 0\r\nLastFateEndTime = os.clock()\r\nLastStuckCheckTime = os.clock()\r\nLastStuckCheckPosition = {x=GetPlayerRawXPos(), y=GetPlayerRawYPos(), z=GetPlayerRawZPos()}\r\nMainClass = GetClassJobTableFromId(GetClassJobId())\r\nBossFatesClass = nil\r\nif ClassForBossFates ~= \"\" then\r\n    BossFatesClass = GetClassJobTableFromAbbrev(ClassForBossFates)\r\nend\r\nSetMaxDistance()\r\n\r\nSelectedZone = SelectNextZone()\r\nif SelectedZone.zoneName ~= \"\" and Echo == \"All\" then\r\n    yield(\"/echo [FATE] 移动到主城 \"..SelectedZone.zoneName)\r\nend\r\nLogInfo(\"[FATE] Farming Start for \"..SelectedZone.zoneName)\r\n\r\nfor _, shop in ipairs(BicolorExchangeData) do\r\n    for _, item in ipairs(shop.shopItems) do\r\n        if item.itemName == ItemToPurchase then\r\n            SelectedBicolorExchangeData = {\r\n                shopKeepName = shop.shopKeepName,\r\n                zoneId = shop.zoneId,\r\n                aetheryteName = shop.aetheryteName,\r\n                miniAethernet = shop.miniAethernet,\r\n                x = shop.x, y = shop.y, z = shop.z,\r\n                item = item\r\n            }\r\n        end\r\n    end\r\nend\r\nif SelectedBicolorExchangeData == nil then\r\n    yield(\"/echo [FATE]无法识别双色商店商品”..ItemToPurchase..“！请确保它在BicolorExchangeData表中！\")\r\n    StopScript = true\r\nend\r\n\r\nState = CharacterState.ready\r\nCurrentFate = nil\r\nif IsInFate() and GetFateProgress(GetNearestFate()) < 100 then\r\n    CurrentFate = BuildFateTable(GetNearestFate())\r\nend\r\n\r\nif ShouldSummonChocobo and GetBuddyTimeRemaining() > 0 then\r\n    yield(\"/cac \"..ChocoboStance..\" \")\r\nend\r\n\r\nwhile not StopScript do\r\n    if NavIsReady() then\r\n        if State ~= CharacterState.dead and GetCharacterCondition(CharacterCondition.dead) then\r\n            State = CharacterState.dead\r\n            LogInfo(\"[FATE] State Change: Dead\")\r\n        elseif State ~= CharacterState.unexpectedCombat and State ~= CharacterState.doFate and\r\n            State ~= CharacterState.waitForContinuation and State ~= CharacterState.collectionsFateTurnIn and\r\n            (not IsInFate() or (IsInFate() and IsCollectionsFate(GetFateName(GetNearestFate())) and GetFateProgress(GetNearestFate()) == 100)) and\r\n            GetCharacterCondition(CharacterCondition.inCombat)\r\n        then\r\n            State = CharacterState.unexpectedCombat\r\n            LogInfo(\"[FATE] State Change: UnexpectedCombat\")\r\n        end\r\n        \r\n        BicolorGemCount = GetItemCount(26807)\r\n\r\n        if not (IsPlayerCasting() or\r\n            GetCharacterCondition(CharacterCondition.betweenAreas) or\r\n            GetCharacterCondition(CharacterCondition.jumping48) or\r\n            GetCharacterCondition(CharacterCondition.jumping61) or\r\n            GetCharacterCondition(CharacterCondition.mounting57) or\r\n            GetCharacterCondition(CharacterCondition.mounting64) or\r\n            GetCharacterCondition(CharacterCondition.beingMoved) or\r\n            GetCharacterCondition(CharacterCondition.occupiedMateriaExtractionAndRepair) or\r\n            LifestreamIsBusy())\r\n        then\r\n            if WaitingForFateRewards ~= 0 and not IsFateActive(WaitingForFateRewards) then\r\n                WaitingForFateRewards = 0\r\n                LogInfo(\"[FATE] WaitingForFateRewards: \"..tostring(WaitingForFateRewards))\r\n            end\r\n            State()\r\n        end\r\n    end\r\n    yield(\"/wait 0.3\")\r\nend\r\nyield(\"/vnav stop\")\r\n\r\n--#endregion Main",
        "CraftingLoop": false,
        "CraftLoopCount": 0,
        "IsLua": false,
        "Language": 2
      }
    ]
  },
  "CraftSkip": true,
  "SmartWait": true,
  "QualitySkip": true,
  "LoopTotal": false,
  "LoopEcho": false,
  "DisableMonospaced": false,
  "UseCraftLoopTemplate": false,
  "CraftLoopTemplate": "/craft {{count}}\n/waitaddon \"RecipeNote\" <maxwait.5>/click \"synthesize\"/waitaddon \"Synthesis\" <maxwait.5>{{macro}}/loop",
  "CraftLoopFromRecipeNote": true,
  "CraftLoopMaxWait": 5,
  "CraftLoopEcho": false,
  "MaxTimeoutRetries": 0,
  "NoisyErrors": false,
  "BeepFrequency": 900,
  "BeepDuration": 250,
  "BeepCount": 3,
  "UseSNDTargeting": true,
  "UseItemStructsVersion": true,
  "ARCharacterPostProcessMacro": null,
  "ARCharacterPostProcessExcludedCharacters": [],
  "StopMacroIfActionTimeout": true,
  "StopMacroIfItemNotFound": false,
  "StopMacroIfCantUseItem": false,
  "StopMacroIfTargetNotFound": false,
  "StopMacroIfAddonNotFound": false,
  "StopMacroIfAddonNotVisible": false,
  "SortByOffsets": true,
  "AlwaysShowOffsets": true,
  "LineHeightImages": true,
  "HighlightLinks": true,
  "PreferHr1": true,
  "ChatType": 57,
  "ErrorChatType": 2,
  "LuaRequirePaths": []
}