<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dalamud.CharacterSyncX</name>
    </assembly>
    <members>
        <member name="T:Dalamud.CharacterSyncX.CharacterSyncPlugin">
            <summary>
                Main plugin class.
            </summary>
        </member>
        <member name="M:Dalamud.CharacterSyncX.CharacterSyncPlugin.#ctor(Dalamud.Plugin.IDalamudPluginInterface,Dalamud.Plugin.Services.IPluginLog)">
            <summary>
                Initializes a new instance of the <see cref="T:Dalamud.CharacterSyncX.CharacterSyncPlugin" /> class.
            </summary>
        </member>
        <member name="M:Dalamud.CharacterSyncX.CharacterSyncPlugin.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Dalamud.CharacterSyncX.CharacterSyncPlugin.MyRegex">
            <remarks>
            Pattern:<br/>
            <code>(?&lt;path&gt;.*)FFXIV_CHR(?&lt;cid&gt;.*)\\/(?!ITEMODR\\.DAT|ITEMFDR\\.DAT|GEARSET\\.DAT|UISAVE\\.DAT|.*\\.log)(?&lt;dat&gt;.*)</code><br/>
            Options:<br/>
            <code>RegexOptions.Compiled | RegexOptions.CultureInvariant</code><br/>
            Explanation:<br/>
            <code>
            ○ "path" capture group.<br/>
                ○ Match a character other than '\n' greedily any number of times.<br/>
            ○ Match the string "FFXIV_CHR".<br/>
            ○ "cid" capture group.<br/>
                ○ Match a character other than '\n' greedily any number of times.<br/>
            ○ Match '/'.<br/>
            ○ Zero-width negative lookahead.<br/>
                ○ Match with 4 alternative expressions, atomically.<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match the string "ITEM".<br/>
                        ○ Match with 2 alternative expressions, atomically.<br/>
                            ○ Match the string "ODR.DAT".<br/>
                            ○ Match the string "FDR.DAT".<br/>
                    ○ Match the string "GEARSET.DAT".<br/>
                    ○ Match the string "UISAVE.DAT".<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character other than '\n' greedily any number of times.<br/>
                        ○ Match the string ".log".<br/>
            ○ "dat" capture group.<br/>
                ○ Match a character other than '\n' atomically any number of times.<br/>
            </code>
            </remarks>
        </member>
        <member name="T:Dalamud.CharacterSyncX.Interface.ConfigWindow">
            <summary>
            Main configuration window.
            </summary>
        </member>
        <member name="M:Dalamud.CharacterSyncX.Interface.ConfigWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dalamud.CharacterSyncX.Interface.ConfigWindow"/> class.
            </summary>
        </member>
        <member name="M:Dalamud.CharacterSyncX.Interface.ConfigWindow.Draw">
            <inheritdoc/>
        </member>
        <member name="T:Dalamud.CharacterSyncX.Service">
            <summary>
                Dalamud and plugin services.
            </summary>
        </member>
        <member name="P:Dalamud.CharacterSyncX.Service.Configuration">
            <summary>
                Gets or sets the plugin configuration.
            </summary>
        </member>
        <member name="P:Dalamud.CharacterSyncX.Service.Interface">
            <summary>
                Gets the Dalamud plugin interface.
            </summary>
        </member>
        <member name="P:Dalamud.CharacterSyncX.Service.ClientState">
            <summary>
                Gets the Dalamud client state.
            </summary>
        </member>
        <member name="P:Dalamud.CharacterSyncX.Service.CommandManager">
            <summary>
                Gets the Dalamud command manager.
            </summary>
        </member>
        <member name="P:Dalamud.CharacterSyncX.Service.Interop">
            <summary>
                Gets the Dalamud command manager.
            </summary>
        </member>
        <member name="P:Dalamud.CharacterSyncX.Service.Scanner">
            <summary>
                Gets the scanner.
            </summary>
        </member>
        <member name="T:Dalamud.RichPresence.Config.CharacterSyncConfig">
            <summary>
            Plugin configuration.
            </summary>
        </member>
        <member name="P:Dalamud.RichPresence.Config.CharacterSyncConfig.Version">
            <inheritdoc/>
        </member>
        <member name="F:Dalamud.RichPresence.Config.CharacterSyncConfig.IsEnabled">
            <summary>
            Gets or sets a value indicating whether the plugin is enabled.
            </summary>
        </member>
        <member name="F:Dalamud.RichPresence.Config.CharacterSyncConfig.SyncHotbars">
            <summary>
            Gets or sets a value indicating whether to sync the HOTBAR.DAT file.
            </summary>
        </member>
        <member name="F:Dalamud.RichPresence.Config.CharacterSyncConfig.SyncMacro">
            <summary>
            Gets or sets a value indicating whether to sync the MACRO.DAT file.
            </summary>
        </member>
        <member name="F:Dalamud.RichPresence.Config.CharacterSyncConfig.SyncKeybind">
            <summary>
            Gets or sets a value indicating whether to sync the KEYBIND.DAT file.
            </summary>
        </member>
        <member name="F:Dalamud.RichPresence.Config.CharacterSyncConfig.SyncLogfilter">
            <summary>
            Gets or sets a value indicating whether to sync the LOGFLTR.DAT file.
            </summary>
        </member>
        <member name="F:Dalamud.RichPresence.Config.CharacterSyncConfig.SyncCharSettings">
            <summary>
            Gets or sets a value indicating whether to sync the COMMON.DAT file.
            </summary>
        </member>
        <member name="F:Dalamud.RichPresence.Config.CharacterSyncConfig.SyncKeyboardSettings">
            <summary>
            Gets or sets a value indicating whether to sync the CONTROL0.DAT file.
            </summary>
        </member>
        <member name="F:Dalamud.RichPresence.Config.CharacterSyncConfig.SyncGamepadSettings">
            <summary>
            Gets or sets a value indicating whether to sync the CONTROL1.DAT file.
            </summary>
        </member>
        <member name="F:Dalamud.RichPresence.Config.CharacterSyncConfig.SyncCardSets">
            <summary>
            Gets or sets a value indicating whether to sync the GS.DAT file.
            </summary>
        </member>
        <member name="F:Dalamud.RichPresence.Config.CharacterSyncConfig.Cid">
            <summary>
            Gets or sets the Character ID, the value after CHR_*.
            </summary>
        </member>
        <member name="F:Dalamud.RichPresence.Config.CharacterSyncConfig.SetName">
            <summary>
            Gets or sets the "set name".
            </summary>
        </member>
        <member name="M:Dalamud.RichPresence.Config.CharacterSyncConfig.Save">
            <summary>
            Save the configuration.
            </summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.MyRegex_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the MyRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.MyRegex_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MyRegex_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
    </members>
</doc>
